{"version":3,"sources":["components/OSCEPage/hooks.tsx","components/OSCEPage/types.tsx","MetaContext.tsx","myaxios.ts","components/HomePage/LoginLogout.tsx","components/Navigator.tsx","assets/people.png","images/brainComputer.png","assets/ai.png","components/HomePage/Header.jsx","components/HomePage/HomePage.tsx","components/OSCEPage/StationSummaryCard.tsx","components/OSCEPage/CategorySelector.tsx","components/OSCEPage/FilterSelector.tsx","components/OSCEPage/LoadingScreen.tsx","components/OSCEPage/OSCESelector.tsx","components/OSCEPage/Common.tsx","components/OSCEPage/AlphaTimer.tsx","components/OSCEPage/TimerBar.tsx","components/OSCEPage/media/heart.png","components/OSCEPage/SaveModal.tsx","components/OSCEPage/Header.tsx","components/OSCEPage/Brief.tsx","components/OSCEPage/MarkReviewPage.tsx","components/OSCEPage/QuestionPrompt.tsx","components/OSCEPage/media/start.mp3","components/OSCEPage/Question/RecordControl.tsx","components/OSCEPage/Question/WaveSurfer.tsx","components/OSCEPage/Question/QuestionContent.tsx","old-components/ECGPage/Functions/utility.tsx","components/OSCEPage/Question/QuestionPage.tsx","components/OSCEPage/QuestionReview/MarkScheme.tsx","components/OSCEPage/QuestionReview/WaveSurferReview.tsx","components/OSCEPage/QuestionReview/QuestionReviewContent.tsx","components/OSCEPage/QuestionReview/QuestionReviewPage.tsx","components/OSCEPage/media/SummaryAudio.mp3","components/OSCEPage/SummaryPrompt.tsx","components/OSCEPage/Summary.tsx","components/OSCEPage/StationPage.tsx","components/OSCEPage/DemoStations/NullStation.tsx","components/OSCEPage/media/loading.gif","components/OSCEPage/LoadingOverlay.tsx","components/SubscribePage/SubscribeModal.tsx","components/OSCEPage/OSCEPage.tsx","components/ExpiryLoginPage/ExpiryLoginPage.tsx","components/SubscribePage/Checkout.tsx","components/SubscribePage/PaymentAfterMath.tsx","components/SubscribePage/SubscribePage.tsx","components/UserPage/ProgressPie.tsx","components/UserPage/UserPage.tsx","components/DataInterpPage/TaskPage.tsx","components/DataInterpPage/exampleQuestions.tsx","components/DataInterpPage/QuestionSelector.tsx","components/DataInterpPage/AnswerPage.tsx","components/DataInterpPage/TopicsSelectorPage.tsx","components/DataInterpPage/DataInterpPage.tsx","App.tsx","index.tsx","functions.tsx"],"names":["useLoopTime","upperLimit","useState","time","setTime","useEffect","interval","setInterval","clearInterval","generateWaveSurfer","containerId","audioUrl","ws","WaveSurfer","create","waveSurferParams","load","container","waveColor","progressColor","height","cursorWidth","hideScrollbar","toggleMarkPoint","station","questionIdx","pointId","questions","map","q","i","markScheme","ms","points","pt","selected","countPoints","reduce","acc","a","total","length","binaryToCode","reverse","n","Math","pow","getBinaryDigits","curr","arr","push","floor","markPercentage","markCode","marks","slice","round","b","populateMarkScheme","idx","forEach","p","populateResponseAudios","responseAudios","responseAudio","raw","type","byteArray","Uint8Array","charCodeAt","window","URL","createObjectURL","Blob","rawToUrl","downloadAssets","SERVER_URL","question","convertToLocal","exemplarAudio","questionAudio","img","Promise","r","_","remoteUrl","fetch","fres","blob","extractReponseAudio","arrays","res","arrayBuffer","buffer","Buffer","from","toString","all","convertToString","minutes","seconds","useUserDetails","token","userLoading","updateUserLoading","answeredStations","purchasedOsce","userDetailsOsce","updateUserDetailsOsce","loadUserDetails","axios","post","data","success","console","error","useStations","stationeSummariesLoading","updateSummariesLoading","stationSummarires","updateStationSummaries","loadSummaries","summaries","responseId","promptId","startAudioRecordingId","MetaContext","React","createContext","darkMode","CLIENT_URL","setToken","u","narrowWindow","Provider","interceptors","response","use","location","href","reject","myaxios","url","method","maxBodyLength","Infinity","maxContentLength","get","clientID","Login","props","useContext","clientId","buttonText","onSuccess","tokenId","then","axres","successCallback","onFailure","log","isSignedIn","render","propss","LoginButton","onClick","disabled","id","label","styled","button","Logout","onLogoutSuccess","analytics","track","userId","event","prps","LogoutButton","options","title","path","av","Container","div","OptionsContainer","OptionLink","Link","Option","Navigator","selection","to","Header","className","src","people","style","scale","Brain","UserPage","as","StationSummaryCard","history","useHistory","matches","filter","s","summary","percentage","handleClick","review","selectStation","completnessSymbol","color","size","isNaN","available","StationPanel","margin","display","alignItems","fontSize","Percent","Premium","backgroundColor","Button","CategorySelector","Select","onChange","e","updateCategory","target","value","concat","Set","stationSummaries","ss","category","c","SideSelectorBar","Category","select","FilterSelector","updateFilter","FilterSelectorBar","f","LoadingScreen","background","padding","message","Spinner","rotate","keyframes","OSCESelector","stationSummariesLoading","flexWrap","includes","isDemoStation","openSubscribeModal","Box","Timer","StartButton","TimerApparatus","secondTicker","startTime","updateStation","timePermitted","brief","nextFunc","TimerBar","OuterBar","InnerBar","SaveModal","OverLay","close","Modal","heart","textAlign","t","handleExit","displayLoginOption","updateDisplayLoginOption","HeaderContainer","justifyContent","borderRadius","ExitButton","timer","AlphaTimer","Arrow","prevFunc","Brief","htmlParser","prompt","MarkReviewPage","masterMarkScheme","flat","questionCount","passed","updateIdx","overflow","section","ResultsBox","DropDown","expanded","updateExpanded","schemePoint","marginBottom","SchemePoint","point","Title","QuestionPrompt","toggle","width","cursor","Prompt","RecordControl","Control","recording","stopEverything","startTone","Audio","startToneUrl","onended","startRecording","play","paddingBottom","TaskSection","responsePlaying","updateResponsePlaying","document","getElementById","innerHTML","on","updateResponseWaveSurfer","playResponse","Panel","QuestionContent","useReactMediaRecorder","audio","onStop","blobUrl","obj","JSON","parse","stringify","endTone","stopRecording","status","undefined","responseWaveSurfer","getPromptAudio","pause","stop","currentTime","active","gridRowStart","gridColumnStart","transition","paused","Img","zIndex","QuestionPage","sliderRef","setSliderRef","updateQuestionIdx","slickNext","settings","arrows","infinite","slidesToShow","slidesToScroll","vertical","initialSlide","slickPrev","ref","MarkScheme","renderSchemePoint","SchemePointContainer","reviewMode","oldStation","x","WaveSurferReview","updateSelection","playing","updatePlaying","sel","waveSurfer","updateWaveSurfer","marginTop","AudioSelect","QuestionReviewContent","showMarkScheme","updateShowMarkScheme","SchemeToggle","QuestionReviewPage","gridTemplateColumns","SummaryPrompt","audioElement","autoPlay","summaryAudioUrl","Summary","Start","StationPage","exact","NullStation","timeRemaining","Date","LoadingOverlay","loadinggif","SubscribeModal","position","top","right","OSCEPage","updateReviewMode","loading","updateLoading","subscribeModalOpen","updateSubscribeOpen","rawResponseAudios","Array","fill","stationWithMarks","stationWithResponses","localContentStation","tok","ExpiryLoginPage","Chekout","handlingCheckout","updateHandlingCheckout","handleCheckout","cancel_url","success_url","checkoutUrl","CheckoutButton","minWidth","PaymentAfterMath","SubscribePage","Checkout","ProgressPie","radius","coords","sin","y","cos","arcCoords","extraPath","Circle","cx","cy","d","dominantBaseline","textAnchor","circle","averagePercentage","left","QuestionText","task","Content","image","ShowAnswer","NullQuestion","finding","description","sections","QuestionSelector","updateQuestions","selectedQuestion","updateSelectedQuestion","selectedFinding","updateSelectedFinding","selectedCategory","updateSelectedCategory","showFindings","setShowFindings","findingButtonsVisible","setFindingButtonsVisible","menuOpen","setMenuOpen","menuRef","useRef","handleClickOutside","current","contains","addEventListener","removeEventListener","toggleFindings","toggleFindingButtons","handleBurgerMenuClick","loadQuestions","exemplarQuestions","exemplar","changeSelection","filteredForCategory","filteredForfinding","lastSectionImage","BurgerMenu","isOpen","Overlay","DropdownContainer","updateCurrentQuestion","CategoryButton","flexDirection","FindingButton","MainContent","justifyItems","MenuContainer","MobileMenu","listStyle","CategoryTitle","paddingLeft","index","MenuItem","SmallMenu","FindingOption","QuestionSummary","maxWidth","Features","StyledImage","hoverSrc","h3","ul","AnswerPage","selectedPoint","updateSelectedPoint","Description","Point","tab_label","PointDetail","descirption","handleUpdateQuestionsList","TopicSelectorPage","firstCategory","firstFinding","firstRadioButton","checked","categories","Fieldset","Legend","RadioItemContainer","findings","RadioItem","RadioLabel","htmlFor","RadioInput","name","setCurrentFinding","randomIndex","random","RadioSpan","Icon","fieldset","legend","input","attrs","span","DataInterpPage","currentQuestion","currentFinding","TaskPage","completedQuestion","updatedQuestionsList","newSelectedQuestion","App","useToken","useWindowSize","w","startsWith","createBrowserHistory","prevPath","listen","pathname","page","HomePage","backlogodark","backlogolight","ReactDOM","sessionStorage","getItem","getToken","userToken","setItem","innerWidth","setSize","useLayoutEffect","updateSize","innerHeight","produceHeat","atan","tan","timeEnd"],"mappings":"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","file":"static/js/main.59837582.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { produceHeat } from \"../../functions\";\nimport {\n    MarkSchemeSection,\n    mimeTypes,\n    Question,\n    startAudioRecordingId,\n    Station,\n    StationSummary,\n    UserDetailsOsce,\n} from \"./types\";\n\nexport const useLoopTime = (upperLimit: number): number => {\n    const [time, setTime] = useState(upperLimit);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTime(time => {\n                if (time === 0) {\n                    clearInterval(interval);\n                    return 0;\n                } else return time - 1;\n            });\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return time;\n};\n\nexport const playStartTone = () =>\n    (document.getElementById(startAudioRecordingId) as HTMLAudioElement)?.play();\n\nconst handleAudioSession = (\n    stream: MediaStream,\n    updateFunc: (audio: string) => void,\n    startFunc: () => void\n) => {\n    // cannot make media recorder if stream invalid\n    if (!stream) return;\n\n    const recorder = new MediaRecorder(stream);\n\n    recorder.ondataavailable = function (this, e) {\n        const blob = new Blob([e.data], { type: \"audio/ogg; codecs=opus\" });\n        updateFunc(window.URL.createObjectURL(blob));\n    };\n\n    recorder.onstart = startFunc;\n\n    recorder.onstop = () => {\n        stream.getTracks().forEach(track => track.stop());\n        playStartTone();\n    };\n\n    recorder.start();\n\n    return recorder;\n};\n\nexport const useRecorder = (\n    updateFunc: (audio: string) => void,\n    startFunc: () => void\n): [() => void, () => void] => {\n    const [recorder, updateRecorder] = useState<MediaRecorder>();\n\n    // attempt to retrieve a user input stream\n    const startRecorder = async () => {\n        try {\n            const sesh = await navigator.mediaDevices.getUserMedia({ audio: true });\n            const recorder = handleAudioSession(sesh, updateFunc, startFunc);\n            updateRecorder(recorder);\n            produceHeat(11);\n        } catch (e) {\n            console.error(\"startRecorder (hooks.tsx): Failed to commence audio session\");\n        }\n    };\n\n    return [startRecorder, () => recorder?.stop()];\n};\n\nexport const generateWaveSurfer = (containerId: string, audioUrl: string) => {\n    const ws = WaveSurfer.create(waveSurferParams(containerId));\n    if (audioUrl) ws.load(audioUrl);\n    return ws;\n};\n\nexport const waveSurferParams = (containerId: string) => ({\n    container: \"#\" + containerId,\n    waveColor: \"white\",\n    progressColor: \"#FAD000\",\n    height: 20,\n    cursorWidth: 0,\n    hideScrollbar: true,\n});\n\nexport const toggleMarkPoint = (\n    station: Station,\n    questionIdx: number,\n    pointId: number\n): Station => ({\n    ...station,\n    questions: station.questions.map((q, i) =>\n        i === questionIdx\n            ? {\n                  ...q,\n                  markScheme: q.markScheme.map(ms => ({\n                      ...ms,\n                      points: ms.points.map(pt => ({\n                          ...pt,\n                          selected: pt.pointId === pointId ? !pt.selected : pt.selected,\n                      })),\n                  })),\n              }\n            : q\n    ),\n});\n\nexport const countPoints = (markScheme: MarkSchemeSection[]): [number, number] => {\n    return markScheme.reduce(\n        (acc, a) => {\n            return [\n                acc[0] + a.points.reduce((total, pt) => total + (pt.selected ? 1 : 0), 0),\n                acc[1] + a.points.length,\n            ];\n        },\n        [0, 0]\n    );\n};\n\nexport const binaryToCode = (points: (0 | 1)[]): number => {\n    const arr = points.reverse();\n    return arr.reduce((acc, n, i) => (acc += n * Math.pow(2, i)), 0 as number);\n};\n\nexport const getBinaryDigits = (n: number): (0 | 1)[] => {\n    let curr = n;\n    let arr: (0 | 1)[] = [];\n    while (curr > 0) {\n        arr.push(curr % 2 === 0 ? 0 : 1);\n        curr = Math.floor(curr / 2);\n    }\n    return arr.reverse();\n};\n\nexport const markPercentage = (markCode: number): number => {\n    const marks = getBinaryDigits(markCode).slice(1);\n    return marks.length > 0\n        ? Math.round((100 * marks.reduce((a, b) => a + b, 0 as number)) / marks.length)\n        : 0;\n};\n\nexport const populateMarkScheme = (station: Station, marks: (0 | 1)[]): Station => {\n    let idx = 0;\n    station.questions.forEach(q =>\n        q.markScheme.forEach(ms =>\n            ms.points.forEach(p => {\n                p.selected = marks[idx] === 1;\n                idx += 1;\n            })\n        )\n    );\n    return station;\n};\n\nexport const rawToUrl = (raw: string, type: string): string => {\n    const byteArray = new Uint8Array(raw.length);\n    for (let i = 0; i < raw.length; i++) {\n        byteArray[i] = raw.charCodeAt(i);\n    }\n    return window.URL.createObjectURL(new Blob([byteArray], { type }));\n};\n\nexport const populateResponseAudios = (station: Station, responseAudios: string[]): Station => {\n    station.questions.forEach((q, i) => {\n        q.responseAudio = rawToUrl(responseAudios[i], \"audio/mp3\");\n    });\n    return station;\n};\n\nexport const downloadAssets = async (station: Station, SERVER_URL: string): Promise<Station> => {\n    for (const question of station.questions) {\n        // get local copies of exemplar, question and img\n        question.exemplarAudio = await convertToLocal(question.exemplarAudio, SERVER_URL);\n        question.questionAudio = await convertToLocal(question.questionAudio, SERVER_URL);\n        question.img = await convertToLocal(question.img, SERVER_URL);\n    }\n    return new Promise((r, _) => r(station));\n};\n\nconst convertToLocal = async (remoteUrl: string, SERVER_URL: string): Promise<string> => {\n    const fres = await fetch(SERVER_URL + \"/media/osce/\" + remoteUrl);\n    return new Promise(async (r, _) => r(window.URL.createObjectURL(await fres.blob())));\n};\n\nexport const extractReponseAudio = async (questions: Question[]): Promise<string[]> => {\n    const arrays = questions.map(async question => {\n        if (question.responseAudio === \"\") return \"\";\n        const res = await fetch(question.responseAudio);\n        const buffer = await res.arrayBuffer(); // <== no audio upload on iphone bug\n        return Buffer.from(buffer).toString(\"binary\");\n    });\n    return Promise.all(arrays);\n};\n\nexport const convertToString = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const minuteString = minutes < 10 ? \"0\" + minutes : \"\" + minutes;\n    const seconds = time % 60;\n    const secondsString = seconds < 10 ? \"0\" + seconds : \"\" + seconds;\n    return minuteString + \":\" + secondsString;\n};\n\nexport const useUserDetails = (SERVER_URL: string, token: string): [UserDetailsOsce, boolean] => {\n    const [userLoading, updateUserLoading] = useState(false);\n    const [userDetailsOsce, updateUserDetailsOsce] = useState<UserDetailsOsce>({\n        answeredStations: [],\n        purchasedOsce: false,\n    });\n\n    const loadUserDetails = async () => {\n        updateUserLoading(true);\n\n        try {\n            const res = await axios.post(SERVER_URL + \"/user/osce_details\", { token });\n\n            if (!res.data.success) {\n                throw \"loadUserDetails (OSCEPage.tsx): user details retrieval failed\";\n            }\n\n            const { answeredStations, purchasedOsce } = res.data;\n            updateUserDetailsOsce({ answeredStations, purchasedOsce });\n        } catch (error) {\n            console.error(error);\n        }\n\n        updateUserLoading(false);\n    };\n\n    useEffect(() => {\n        if (token) {\n            loadUserDetails();\n        } else {\n            updateUserDetailsOsce({\n                answeredStations: [],\n                purchasedOsce: false,\n            });\n        }\n    }, [token]);\n\n    return [userDetailsOsce, userLoading];\n};\n\nexport const useStations = (\n    SERVER_URL: string,\n    token: string\n): [stations: StationSummary[], loading: boolean] => {\n    const [stationeSummariesLoading, updateSummariesLoading] = useState(false);\n    const [stationSummarires, updateStationSummaries] = useState<StationSummary[]>([]);\n\n    const loadSummaries = async () => {\n        updateSummariesLoading(true);\n\n        try {\n            const res = await axios.post(SERVER_URL + \"/osce/get_stations\", { token });\n\n            if (!res.data.success) {\n                throw \"loadSummaries (OSCEPage.tsx): station summary retrieval failed\";\n            }\n\n            updateStationSummaries(res.data.summaries);\n        } catch (error) {\n            console.error(error);\n        }\n        updateSummariesLoading(false);\n    };\n\n    // cant have asynchronous effect callback\n    useEffect(() => {\n        loadSummaries();\n    }, []);\n\n    return [stationSummarires, stationeSummariesLoading];\n};\n","export type MarkSchemeSection = {\n    title: string;\n    points: { point: string; selected: boolean; pointId: number }[];\n};\n\nexport type Station = {\n    id: string;\n    category: string;\n    isDemoStation: boolean;\n    title: string;\n    timePermitted: number;\n    timeRemaining: number;\n    brief: {\n        prompt: string;\n        timePermitted: number;\n        timeRemaining: number;\n    };\n    questions: Question[];\n};\n\nexport type Question = {\n    question: string;\n    questionAudio: string;\n    img: string;\n    responseAudio: string;\n    exemplarAudio: string;\n    markScheme: MarkSchemeSection[];\n};\n\nexport const exemplarId = \"exemplar\";\nexport const responseId = \"response\";\nexport const promptId = \"prompt\";\nexport const startAudioRecordingId = \"startAudioRecording\";\n\nexport type StationSummary = {\n    id: string;\n    thumbnail: string;\n    title: string;\n    category: string;\n    isDemoStation: boolean;\n};\n\nexport type AnsweredStationDetails = {\n    id: string; // id of the relevant master-station\n    markCode: number; // percentage correctenss\n    responseAudios: string[]; // Raw audio data of each reponse\n    dateAnswered: Date; // date question was answered\n};\n\nexport const mimeTypes: { [key: string]: string } = {\n    jpeg: \"image/jpeg\",\n    mp3: \"audio/mpeg\",\n    png: \"image/png\",\n};\n\nexport type HeaderDetails = {\n    title: string;\n    percentage: number;\n    exit: boolean;\n    navigator: boolean;\n    timer: boolean;\n    nextFunc: () => void;\n    prevFunc: () => void;\n};\n\nexport type UserDetailsOsce = {\n    answeredStations: AnsweredStationDetails[];\n    purchasedOsce: boolean;\n};\n","import React from \"react\";\nconst MetaContext = React.createContext<{\n    darkMode: boolean;\n    narrowWindow: boolean;\n    SERVER_URL: string;\n    CLIENT_URL: string;\n    token: string;\n    setToken: (userToken: string) => void;\n}>({\n    darkMode: true,\n    SERVER_URL: \"\",\n    CLIENT_URL: \"\",\n    token: \"\",\n    setToken: u => {},\n    narrowWindow: false,\n});\nexport const ThingsProvider = MetaContext.Provider;\nexport default MetaContext;\n","import axios from \"axios\";\n\n// Add a response interceptor\naxios.interceptors.response.use(\n    res => {\n        if (res.data.error === \"-- email extraction failed --\") {\n            window.location.href = \"/ExpiryLogin\";\n            throw \"token expired, redirect to signout page\";\n        }\n        return res;\n    },\n    error => {\n        // Do something with response error\n        return Promise.reject(error);\n    }\n);\n\nconst myaxios = {\n    post: (url: string, data: any) => {\n        return axios({\n            method: \"POST\",\n            url,\n            data,\n            maxBodyLength: Infinity,\n            maxContentLength: Infinity,\n        });\n    },\n    get: (url: string) => {\n        return axios({ method: \"GET\", url, maxBodyLength: Infinity, maxContentLength: Infinity });\n    },\n};\n\nexport default myaxios;\n","import {\n    GoogleLogin,\n    GoogleLoginResponse,\n    GoogleLoginResponseOffline,\n    GoogleLogout,\n} from \"react-google-login\";\nimport axios from \"../../myaxios\";\nimport styled from \"styled-components\";\nimport { FaSignOutAlt } from \"react-icons/fa\";\nimport { useContext, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\n\nconst clientID = \"439563851182-mo2cj9djg7f0u19ctnjp1864tdaredkc.apps.googleusercontent.com\";\n\ntype LoginProps = {\n    label: string;\n    successCallback?: (token: string) => void;\n};\n\nexport const Login = (props: LoginProps) => {\n    const { SERVER_URL, setToken } = useContext(MetaContext);\n\n    const onSuccess = (res: any) => {\n        axios.post(SERVER_URL + \"/user/googlelogin\", { token: res.tokenId }).then(axres => {\n            if (axres.data.success) {\n                setToken(res.tokenId);\n                if (props.successCallback) props.successCallback(res.tokenId);\n            }\n        });\n    };\n\n    const onFailure = (res: any) => {\n        console.log(\"err: \", res);\n    };\n\n    return (\n        <GoogleLogin\n            clientId={clientID}\n            buttonText=\"LOGIN\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            isSignedIn={true}\n            render={propss => (\n                <LoginButton onClick={propss.onClick} disabled={propss.disabled} id=\"loginboi\">\n                    <span>{props.label}</span>\n                </LoginButton>\n            )}\n        />\n    );\n};\n\nexport const LoginButton = styled.button`\npadding: 10px 20px;\nbackground-color: #fad000;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\nspan {\n  color: black;\n  font-weight: bold;\n}\n`;\n\nexport const Logout = (props: { setToken: (userToken: string) => void; darkMode: boolean }) => {\n    const { darkMode } = useContext(MetaContext);\n\n    const onSuccess = () => {\n        console.log(\"we logged out!\");\n        props.setToken(\"\");\n        window.analytics.track({\n            userId: clientID,\n            event: \"User Logged out\",\n        });\n    };\n\n    return (\n        <GoogleLogout\n            clientId={clientID}\n            buttonText=\"LOGOUT\"\n            onLogoutSuccess={onSuccess}\n            render={prps => (\n                <LogoutButton darkMode={darkMode} onClick={prps.onClick} disabled={prps.disabled}>\n                    <FaSignOutAlt /> &nbsp; Logout &nbsp;\n                </LogoutButton>\n            )}\n        />\n    );\n};\n\nconst LogoutButton = styled.button<{ darkMode: boolean }>`\npadding: 10px 20px;\nbackground-color: #fad000;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\nspan {\n  color: black;\n  font-weight: bold;\n}\n`;\n\n","import { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../MetaContext\";\nimport { Logout, Login } from \"./HomePage/LoginLogout\";\nimport Navbar from \"./HomePage/Navbar\";\n\ntype NavigatorProps = {\n  selection: string;\n};\n\n\n\nconst options = [\n  { title: \"Home\", path: \"\", av: true },\n  { title: \"OSCE\", path: \"/OSCE\", av: true },\n  // { title: \"Data Interpretation\", path: \"/DataInterpretation\", av: true },\n  // { title: \"Dashboard\", path: \"/User\", av: true },\n  // { title: \"MedBook\", path: \"/User\", av: false },\n  // { title: \"QBank\", path: \"/User\", av: false },\n];\n\nconst Navigator = ({ selection }: NavigatorProps) => {\n  const { token, setToken } = useContext(MetaContext);\n\n  return (\n    <div> \n\n    <Container>\n      <OptionsContainer>\n        {options.map(({ title, path, av }, i) => (\n          <OptionLink key={i} to={av ? path : \"#\"}>\n            <Option av={av} selected={title === selection}>\n              {title}\n            </Option>\n          </OptionLink>\n        ))}\n      </OptionsContainer>\n      {token ? <Logout darkMode={true} setToken={setToken} /> : <Login label=\"Sign Up / Login\" />}\n    </Container>\n\n    </div>\n  );\n};\n\nconst Container = styled.div`\nmargin: 30px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 5%;\n\n  @media screen and (max-width: 1050px) {\n    .gpt3__navbar-links_container {\n        display: none;\n    }\n\n    .gpt3__navbar-menu {\n        display: flex;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    .gpt3__navbar {\n        padding: 2rem 4rem;\n    }\n}\n\n@media screen and (max-width: 550px) {\n    .gpt3__navbar {\n        padding: 2rem;\n    }\n\n    .gpt3__navbar-sign {\n        display: none;\n    }\n\n    .gpt3__navbar-menu_container {\n        top: 20px;\n    }\n\n    .gpt3__navbar-menu_container-links-sign {\n        display: block;\n    }\n  \n`;\n\nconst LogoTitle = styled.div`\n  margin: 10px 0;\n  h1 {\n    font-family: \"Jakarta\";\n  }\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  margin-left: ;\n  @media screen and (max-width: 700px) {\n    padding: 2rem 4rem;\n  }\n\n  @media screen and (max-width: 550px) {\n    padding: 2rem;\n  }\n  \n`;\n\nconst OptionLink = styled(Link)`\n  text-decoration: none;\n  margin: 0 0px;\n`;\n\nconst Option = styled.div<{ av: boolean; selected: boolean }>`\n  padding: 15px;\n  background-color: ${props => (props.selected ? \"#031B34\" : \"none\")};\n  text-decoration: ${props => (props.av ? \"none\" : \"line-through\")};\n  color: ${props => (props.selected ? \"#white\" : \"white\")};\n  border-radius: 5px;\n  box-shadow: 0px 0px 5px rgba(0,0, 0,0.2);\n  font-weight: 500;\n    font-size: 18px;\n    line-height: 25px;\n`;\n\nconst LoginButton = styled.button`\n  padding: 10px 20px;\n  background-color: #fad000;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  span {\n    color: black;\n    font-weight: bold;\n  }\n`;\n\nexport default Navigator;\n","export default __webpack_public_path__ + \"static/media/people.5cd2d6fb.png\";","export default __webpack_public_path__ + \"static/media/brainComputer.e81f7f0c.png\";","export default __webpack_public_path__ + \"static/media/ai.aa60586b.png\";","import React from \"react\";\nimport people from \"../../assets/people.png\";\nimport ai from \"../../assets/ai.png\";\nimport \"./header.css\";\nimport Brain from \"../../images/brainComputer.png\";\nimport Navigator from \"../Navigator\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n    <div className=\"gpt3__header section__padding\" id=\"home\">\n        <div className=\"gpt3__header-content\">\n            <h1 className=\"gradient__text\">Master Medical Exams and Data Interpretation</h1>\n            <p>\n                {\" \"}\n                Get Ahead with Our Innovative OSCE Trainer and Guided Data Interpretation content,\n                including our unique ECG and Chest X-Ray interpretation skill trainers\n            </p>\n\n            <div className=\"gpt3__header-content__input\">\n                <Link to=\"/OSCE\">\n                    <LoginButton>\n                        <span>Get Started For Free</span>\n                    </LoginButton>\n                </Link>\n            </div>\n\n            <div className=\"gpt3__header-content__people\">\n                <img src={people} />\n                <p>Join the thousands of medical students who have already signed up</p>\n            </div>\n        </div>\n\n        <div className=\"gpt3__header-image\">\n            <img style={{ scale: \"125%\" }} src={Brain} />\n        </div>\n    </div>\n);\n\nexport default Header;\n\nconst LoginButton = styled.button`\n    padding: 10px 20px;\n    background-color: #fad000;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    span {\n        color: black;\n        font-weight: bold;\n    }\n`;\n","import styled from \"styled-components\";\nimport Navigator from \"../Navigator\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport { markPercentage, useUserDetails } from \"../OSCEPage/hooks\";\nimport Header from \"./Header.jsx\";\nimport Header2 from \"./Header2.jsx\";\nimport WhatisGPT3 from \"./whatisGPT3.jsx\";\n\ntype UserPageProps = {};\n\nconst UserPage = (props: UserPageProps) => {\n    const { SERVER_URL, token } = useContext(MetaContext);\n    const [{ answeredStations, purchasedOsce }, userLoading] = useUserDetails(SERVER_URL, token);\n\n    const averagePercentage =\n        answeredStations.length === 0\n            ? 0\n            : answeredStations.map(as => markPercentage(as.markCode)).reduce((acc, a) => acc + a) /\n              answeredStations.length;\n\n    return (\n        <>\n            <Navigator selection={\"Home\"} />\n                <Header/>\n                {/* <WhatisGPT3/> */}\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n            \n        </>\n        \n    );\n};\n\nexport default UserPage;\n\nconst Container = styled.div`\n    \n    margin: 5%;\n    padding: 5%;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    border-radius: 10px;\n`;\n\nconst Panel = styled.div`\n    background-color: #1c2124;\n    margin-bottom: 10px;\n    padding: 10px;\n    text-align: center;\n    border-radius: 10px;\n`;\n\nconst Title = styled.div`\n    margin: 15px 0;\n    font-size: 25px;\n`;\n\nconst Button = styled.button`\n    background-color: #faad29;\n    margin-bottom: 10px;\n    padding: 5px;\n    border-style: none;\n    border-radius: 10px;\n    width: 150px;\n`;\n","import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { FaCheckCircle, FaMinusCircle, FaTimesCircle } from \"react-icons/fa\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { getBinaryDigits, markPercentage } from \"./hooks\";\nimport { AnsweredStationDetails } from \"./types\";\n\ntype StationSummaryCardProps = {\n    summary: {\n        id: string;\n        thumbnail: string;\n        title: string;\n    };\n    selectStation: (id: string, options: { review: boolean; marks: (0 | 1)[] }) => void;\n    answeredStations: AnsweredStationDetails[];\n    available: boolean;\n    openSubscribeModal: () => void;\n};\n\nconst StationSummaryCard = (props: StationSummaryCardProps) => {\n    const history = useHistory();\n    const matches = props.answeredStations.filter(s => s.id === props.summary.id);\n    const percentage = matches.length === 0 ? 0 : markPercentage(matches[0].markCode);\n    const marks = matches.length === 0 ? [] : getBinaryDigits(matches[0].markCode).slice(1);\n\n    const handleClick = (review: boolean) => {\n        props.selectStation(props.summary.id, { review, marks });\n    };\n\n    let completnessSymbol = <FaMinusCircle color=\"#505050\" size={20} />;\n    if (!isNaN(percentage) && props.available) {\n        completnessSymbol =\n            percentage < 50 ? (\n                <FaTimesCircle color=\"red\" size={20} />\n            ) : (\n                <FaCheckCircle color=\"green\" size={20} />\n            );\n    }\n\n    return (\n        <StationPanel>\n            <div style={{ margin: \"20px 0 20px 20px\", display: \"flex\", alignItems: \"center\" }}>\n                <div>{completnessSymbol}</div> &nbsp;&nbsp;&nbsp;\n                <span style={{ fontSize: 15 }}>{props.summary.title}</span>\n            </div>\n            <div>\n                {props.available ? (\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Percent color={percentage > 50 ? \"green\" : \"red\"}>\n                            {isNaN(percentage) ? \"--\" : percentage}%\n                        </Percent>\n\n                        <div>\n                            <Link to=\"/OSCE/Station/Brief\" style={{ display: \"block\" }}>\n                                <Button color=\"#FAD000\" onClick={() => handleClick(false)}>\n                                    Start\n                                </Button>\n                            </Link>\n                            {matches.length > 0 && (\n                                <Link to=\"/OSCE/Station/Summary\" style={{ display: \"block\" }}>\n                                    <Button color=\"grey\" onClick={() => handleClick(true)}>\n                                        Review\n                                    </Button>\n                                </Link>\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    <Premium\n                        color=\"#FAD000\"\n                        style={{ backgroundColor: \"#FAAD29\", color: \"#000000\" }}\n                        onClick={() => history.push(\"/Subscribe/Checkout\")}\n                    >\n                        Premium\n                    </Premium>\n                )}\n            </div>\n        </StationPanel>\n    );\n};\n\nexport default StationSummaryCard;\n\nconst StationPanel = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #040C18;\n    color: #f7bd9d;\n    border-style: none;\n    border-radius: 10px;\n    width: 100%;\n    max-width: 400px;\n    margin: 0 20px 20px 0;\n`;\n\nconst Button = styled.button<{ color: string }>`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 8px;\n    padding: 0 10px;\n    height: 30px;\n    width: 75px;\n    border: 1px solid grey;\n    color: ${props => props.color};\n    background-color: transparent;\n`;\n\nconst Percent = styled.button<{ color: string }>`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 8px;\n    padding: 0 10px;\n    height: 30px;\n    border: 1px solid grey;\n    color: ${props => props.color};\n    background-color: transparent;\n`;\n\nconst Premium = styled.button`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 8px;\n    padding: 0 10px;\n    border: 1px solid grey;\n    color: #fad000;\n    background-color: #fad000;\n    width: 100px;\n`;\n","import React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { StationSummary } from \"./types\";\n\ntype CategorySelectorProps = {\n    updateCategory: Dispatch<SetStateAction<string>>;\n    stationSummaries: StationSummary[];\n    category: string;\n};\n\nconst CategorySelector = (props: CategorySelectorProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    return narrowWindow ? (\n        <div>\n            <Select onChange={e => props.updateCategory(e.target.value)}>\n                {[\"All\"]\n                    .concat([...new Set(props.stationSummaries.map(ss => ss.category))])\n                    .map((c, i) => (\n                        <option key={i}>{c}</option>\n                    ))}\n            </Select>\n        </div>\n    ) : (\n        <SideSelectorBar>\n            {[\"All\", ...new Set(props.stationSummaries.map(ss => ss.category))].map((c, i) => (\n                <Category\n                    selected={c === props.category}\n                    onClick={() => props.updateCategory(c === props.category ? \"All\" : c)}\n                    key={i}\n                >\n                    {c}\n                </Category>\n            ))}\n        </SideSelectorBar>\n    );\n};\n\nexport default CategorySelector;\n\nconst Select = styled.select`\n    margin-bottom: 20px;\n    background-color: #042c54;\n    border-radius: 5px;\n    color: white;\n    border-style: none;\n    padding: 5px;\n    text-align: center;\n    width: 150px;\n`;\n\nconst Category = styled.div<{ selected: boolean }>`\n    margin-bottom: 20px;\n    background-color: ${props => (props.selected ? \"#042c54\" : \"transparent\")};\n    border-radius: 5px;\n    color: ${props => (props.selected ? \"white\" : \"#81AFDD\")};\n    border-style: none;\n    padding: 5px 5px 5px 20px;\n    cursor: pointer;\n    width: 150px;\n`;\n\nconst SideSelectorBar = styled.div`\n    margin-right: 40px;\n    padding-right: 20px;\n    border-radius: 0;\n`;\n","import React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { StationSummary } from \"./types\";\n\ntype FilterSelectorProps = {\n    updateFilter: Dispatch<SetStateAction<Filter>>;\n    stationSummaries: StationSummary[];\n    filter: Filter;\n};\n\nexport type Filter = \"No Filter\" | \"Attempted\" | \"Free\" | \"Premium\";\n\nconst FilterSelector = (props: FilterSelectorProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    return narrowWindow ? (\n        <div>\n            <Select onChange={e => props.updateFilter(e.target.value as Filter)}>\n                {[\"No Filter\", \"Attempted\", \"Free\", \"Premium\"].map((c, i) => (\n                    <option key={i}>{c}</option>\n                ))}\n            </Select>\n        </div>\n    ) : (\n        <FilterSelectorBar>\n            {([\"No Filter\", \"Attempted\", \"Free\", \"Premium\"] as Filter[]).map((f, i) => (\n                <Category\n                    selected={f === props.filter}\n                    onClick={() => props.updateFilter(f === props.filter ? \"No Filter\" : f)}\n                    key={i}\n                >\n                    {f}\n                </Category>\n            ))}\n        </FilterSelectorBar>\n    );\n};\n\nexport default FilterSelector;\n\nconst Select = styled.select`\n    margin-bottom: 20px;\n    background-color: #042c54;\n    border-radius: 5px;\n    color: white;\n    border-style: none;\n    padding: 5px;\n    text-align: center;\n    width: 150px;\n`;\n\nconst Category = styled.div<{ selected: boolean }>`\n    margin-left: 20px;\n    background-color: ${props => (props.selected ? \"#042c54\" : \"transparent\")};\n    border-radius: 5px;\n    color: ${props => (props.selected ? \"white\" : \"#81AFDD\")};\n    border-style: none;\n    padding: 5px;\n    cursor: pointer;\n`;\n\nconst FilterSelectorBar = styled.div`\n    display: flex;\n    margin-bottom: 20px;\n    margin-left: -20px;\n    padding-bottom: 10px;\n    border-radius: 0;\n`;\n","import { FaSpinner } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\n\ntype LoadingScreenProps = {\n    message: string;\n};\n\nconst LoadingScreen = (props: LoadingScreenProps) => {\n    return (\n        <div style={{ background: \"#2f3237\", margin: \"5%\", padding: \"5%\", display: \"flex\" }}>\n            <h5>{props.message}</h5> &nbsp;&nbsp;&nbsp;\n            <Spinner>\n                <FaSpinner size={30} />\n            </Spinner>\n        </div>\n    );\n};\n\nexport default LoadingScreen;\n\nconst rotate = keyframes`\nfrom {\n    -webkit-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n    -o-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n    -webkit-animation: ${rotate} 2s linear infinite;\n    -o-animation: ${rotate} 2s linear infinite;\n    animation: ${rotate} 2s linear infinite;\n`;\n","import { AnsweredStationDetails, StationSummary, Station } from \"./types\";\nimport StationSummaryCard from \"./StationSummaryCard\";\nimport Navigator from \"../Navigator\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Dispatch, SetStateAction, useContext, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport CategorySelector from \"./CategorySelector\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport SubscribePanel from \"./SubscribePanel\";\nimport FilterSelector, { Filter } from \"./FilterSelector\";\nimport LoadingScreen from \"./LoadingScreen\";\n\ntype OSCESelectorProps = {\n    stationSummarires: StationSummary[];\n    selectStation: (id: string, options: { review: boolean; marks: (0 | 1)[] }) => void;\n    station: Station;\n    answeredStations: AnsweredStationDetails[];\n    purchasedOsce: boolean;\n    stationSummariesLoading: boolean;\n    openSubscribeModal: () => void;\n};\n\nconst OSCESelector = (props: OSCESelectorProps) => {\n    const { token, narrowWindow } = useContext(MetaContext);\n    const [category, updateCategory] = useState(\"All\");\n    const [filter, updateFilter] = useState<Filter>(\"No Filter\");\n\n    return (\n        <div>\n            {props.stationSummariesLoading ? (\n                <LoadingScreen message=\"Loading Stations\" />\n            ) : (\n                <div\n                    style={{\n                        background: \"#031B34\",\n                        margin: \"5%\",\n                        padding: \"5%\",\n                        display: narrowWindow ? \"block\" : \"flex\",\n                    }}\n                >\n\n                    <CategorySelector\n                        updateCategory={updateCategory}\n                        stationSummaries={props.stationSummarires}\n                        category={category}\n                    />\n                    \n                    <div>\n                        <FilterSelector\n                            stationSummaries={props.stationSummarires}\n                            updateFilter={updateFilter}\n                            filter={filter}\n                        />\n\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                            }}\n                        >\n                            {props.stationSummarires\n                                .filter(ss => ss.category === category || category === \"All\")\n                                .filter(ss => {\n                                    if (filter === \"Attempted\")\n                                        return props.answeredStations\n                                            .map(as => as.id)\n                                            .includes(ss.id);\n                                    if (filter === \"Free\") return ss.isDemoStation;\n                                    if (filter === \"Premium\") return !ss.isDemoStation;\n                                    return true; // filter === \"All\"\n                                })\n                                .map(ss => (\n                                    <StationSummaryCard\n                                        openSubscribeModal={props.openSubscribeModal}\n                                        selectStation={props.selectStation}\n                                        answeredStations={props.answeredStations}\n                                        summary={ss}\n                                        available={\n                                            (token !== \"\" && props.purchasedOsce) ||\n                                            ss.isDemoStation\n                                        }\n                                        key={ss.id}\n                                    />\n                                ))}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default OSCESelector;\n\nconst StartOrReview = styled.button`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 5px;\n    padding: 0 10px;\n    height: 30px;\n    border: 1px solid grey;\n    color: #fad000;\n    background-color: transparent;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    max-width: 800px;\n    margin: auto;\n    padding: 0 20px;\n    text-align: center;\n`;\nexport const Box = styled.div`\n    background-color: #031B34;\n    padding: 10px;\n    border-radius: 10px;\n`;\n\nexport const Timer = styled.div`\n    display: inline-block;\n    text-align: center;\n    border: 2px solid grey;\n    width: 75px;\n    background-color: #;\n    border-radius: 5px;\n`;\n\nexport const StartButton = styled.div`\n    text-align: center;\n    border: 2px solid grey;\n    width: 120px;\n    color: #fad000;\n    border-radius: 5px;\n    height: max-content;\n`;\n\nexport const MoveOn = styled.div`\n    text-align: center;\n    border: 2px solid grey;\n    margin: auto;\n    background-color: #272727;\n    color: #fad000;\n    border-radius: 2px;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nexport const P = styled.p`\n    margin: 20px;\n`;\n","import { Dispatch, SetStateAction, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Timer } from \"./Common\";\nimport { useLoopTime, convertToString } from \"./hooks\";\nimport { Station } from \"./types\";\n\ntype TimerApparatusProps = {\n    brief?: boolean;\n    startTime: number;\n    nextFunc: () => void;\n    updateStation: Dispatch<SetStateAction<Station>>;\n};\n\nconst TimerApparatus = (props: TimerApparatusProps) => {\n    const secondTicker = useLoopTime(props.startTime - 1);\n\n    // this here dohickey saves the current timer value when compnenets unmounts, we use\n    // the brief prop boolean flag to indicate different timings for brief vs section\n    useEffect(\n        () => () => {\n            props.updateStation(station => ({\n                ...station,\n                timePermitted: props.brief ? station.timePermitted : secondTicker,\n            }));\n        },\n        []\n    );\n\n    if (secondTicker <= 0) props.nextFunc();\n\n    return <Timer> {convertToString(secondTicker)}</Timer>;\n};\n\nexport default TimerApparatus;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\ntype TimerBarProps = {\n    percentage: number;\n};\n\nconst TimerBar = (props: TimerBarProps) => {\n    return (\n        <OuterBar>\n            <InnerBar percentage={props.percentage} />\n        </OuterBar>\n    );\n};\n\nexport default TimerBar;\n\nconst OuterBar = styled.div`\n    height: 10px;\n    background-color: #4a4b52;\n`;\n\nconst InnerBar = styled.div<{ percentage: number }>`\n    background-color: #5dcc6f;\n    width: ${props => props.percentage}%;\n    height: 100%;\n    transition: width 1s linear;\n`;\n","export default __webpack_public_path__ + \"static/media/heart.75d907f8.png\";","import { props } from \"ramda\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport heart from \"../OSCEPage/media/heart.png\";\nimport { Login, LoginButton } from \"../HomePage/LoginLogout\";\nimport { Question, Station } from \"./types\";\n\ntype SaveModalProps = {\n    close: () => void;\n    handleExit: (questions: Question[], tok: string) => void;\n    station: Station;\n};\n\nconst SaveModal = (props: SaveModalProps) => {\n    return (\n        <OverLay onClick={props.close}>\n            <Modal>\n                <div style={{ margin: \"20px 10px\" }}>\n                    <img src={heart} height={100} />\n                </div>\n\n                <div style={{ textAlign: \"center\" }}>\n                    <Link to=\"/OSCE\">\n                        <LoginButton style = {{backgroundColor: \"#1c2124\", color: \"#DCDCDC\",}}>I don't want to save</LoginButton>\n                    </Link>\n                    <Login \n                        label={\"Save my progress!\"}\n                        successCallback={t => props.handleExit(props.station.questions, t)}\n                    />\n                </div>\n            </Modal>\n        </OverLay>\n    );\n};\n\nexport default SaveModal;\n\nconst OverLay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    height: 100vh;\n    width: 100vw;\n    z-index: 2000;\n`;\n\nconst Modal = styled.div`\n    border-radius: 10px;\n    position: absolute;\n    top: 200px;\n    left: 12.5vw;\n    background-color: #1c2124;\n    height: 250px;\n    width: 75vw;\n`;\n","import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport TimerBar from \"./TimerBar\";\nimport { Question, Station } from \"./types\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport AlphaTimer from \"./AlphaTimer\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport SaveModal from \"./SaveModal\";\n\ntype HeaderProps = {\n    updateStation: Dispatch<SetStateAction<Station>>;\n    station: Station;\n    handleExit: (questions: Question[], tok: string) => void;\n    title: string;\n    percentage: number;\n    timer: boolean;\n    nextFunc: () => void;\n    prevFunc: () => void;\n};\n\nconst Header = (props: HeaderProps) => {\n    const { token } = useContext(MetaContext);\n    const [displayLoginOption, updateDisplayLoginOption] = useState(false);\n\n    return (\n        <HeaderContainer>\n            <h2>{props.title}</h2>\n            <TimerBar percentage={props.percentage} />\n\n            <br />\n\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    borderRadius: \"3px\",\n                }}\n            >\n                <ExitButton\n                    onClick={() =>\n                        token\n                            ? props.handleExit(props.station?.questions, token)\n                            : updateDisplayLoginOption(true)\n                    }\n                >\n                    Exit\n                </ExitButton>\n\n                {props.timer && (\n                    <AlphaTimer\n                        startTime={props.station.timePermitted}\n                        nextFunc={props.nextFunc}\n                        updateStation={props.updateStation}\n                    />\n                )}\n\n                <div style={{ display: \"flex\" }}>\n                    <Arrow onClick={props.prevFunc}>\n                        <FaArrowLeft />\n                    </Arrow>\n                    <Arrow onClick={props.nextFunc}>\n                        <FaArrowRight />\n                    </Arrow>\n                </div>\n            </div>\n\n            <br />\n\n            {displayLoginOption && (\n                <SaveModal\n                    handleExit={props.handleExit}\n                    station={props.station}\n                    close={() => updateDisplayLoginOption(false)}\n                />\n            )}\n        </HeaderContainer>\n    );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n    grid-row-start: 1;\n    grid-column-start: 1;\n    height: 20vh;\n    text-align: center;\n    width: 100%;\n    max-width: 800px;\n    margin: auto;\n    background-color: #;\n    padding-top: 20px;\n    opacity: 0.98;\n    z-index: 999;\n    border-radius: 5px;\n`;\n\nexport const Arrow = styled.button`\n    text-align: center;\n    border: 2px solid grey;\n    width: 40px;\n    color: #FFFF;\n    background-color: transparent;\n    border-radius: 2px;\n    height: max-content;\n    border-radius: 5px;\n`;\n\nexport const ExitButton = styled.div`\n    display: inline-block;\n    text-align: center;\n    border: 2px solid grey;\n    width: 80px;\n    color: #FFFF;\n    border-radius: 2px;\n    height: max-content;\n    border-radius: 5px;\n`;\n","import { Dispatch, SetStateAction } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Box, Container, StartButton } from \"./Common\";\nimport { Question, Station } from \"./types\";\nimport htmlParser from \"react-html-parser\";\nimport TimerApparatus from \"./AlphaTimer\";\nimport Header from \"./Header\";\n\ntype BriefProps = {\n    updateStation: Dispatch<SetStateAction<Station>>;\n    station: Station;\n    handleExit: (questions: Question[], tok: string) => void;\n    questionIdx: number;\n};\n\nconst Brief = (props: BriefProps) => {\n    const history = useHistory();\n    const nextFunc = () => history.push(\"/OSCE/Station/Question\");\n    const prevFunc = () => history.push(\"/OSCE/Station/Question\");\n\n    return (\n        <Container>\n            <Header\n                updateStation={props.updateStation}\n                station={props.station}\n                handleExit={props.handleExit}\n                title={\"Brief\"}\n                percentage={5}\n                timer={false}\n                nextFunc={nextFunc}\n                prevFunc={prevFunc}\n            />\n\n            <Box style={{ padding: \"20px\", textAlign: \"left\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <TimerApparatus\n                        nextFunc={() => history.push(\"/OSCE/Station/Question\")}\n                        startTime={props.station.brief.timePermitted}\n                        updateStation={props.updateStation}\n                        brief={true}\n                    />\n                </div>\n\n                <br />\n\n                {htmlParser(props.station.brief.prompt)}\n\n                <br></br>\n\n                <Link to=\"/OSCE/Station/Question\">\n                    <StartButton style={{ margin: \"auto\" }}>Start Station</StartButton>\n                </Link>\n            </Box>\n        </Container>\n    );\n};\n\nexport default Brief;\n","import { Box, Container } from \"./Common\";\nimport { MarkSchemeSection, Question, Station } from \"./types\";\nimport styled from \"styled-components\";\nimport { Dispatch, SetStateAction, useContext, useState,  } from \"react\";\nimport { countPoints } from \"./hooks\";\nimport { FaCaretDown, FaCaretRight, FaCheckCircle, FaTimesCircle } from \"react-icons/fa\";\nimport MetaContext from \"../../MetaContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport SaveModal from \"./SaveModal\";\n\ntype MarkReviewProps = {\n    questionIdx: number;\n    updateIdx: Dispatch<SetStateAction<number>>;\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst MarkReviewPage = (props: MarkReviewProps) => {\n    const { token } = useContext(MetaContext);\n    const [displayLoginOption, updateDisplayLoginOption] = useState(false);\n    const masterMarkScheme = props.station.questions.map(q => q.markScheme).flat();\n    const [selected, total] = countPoints(masterMarkScheme);\n    const { narrowWindow } = useContext(MetaContext);\n\n    const history = useHistory();\n    const questionCount = props.station.questions.length;\n\n    const nextFunc = () => {};\n\n    const prevFunc = () => {\n        props.updateIdx(questionCount - 1);\n        history.push(\"/OSCE/Station/Review\");\n    };\n\n    const passed = selected > total * 0.4;\n\n    return (\n        <Container>\n            <Header\n                updateStation={props.updateStation}\n                station={props.station}\n                handleExit={props.handleExit}\n                title={\"Summary\"}\n                percentage={100}\n                timer={false}\n                nextFunc={nextFunc}\n                prevFunc={prevFunc}\n            />\n\n            <Box style={{ height: narrowWindow ? \"500px\" : \"700px\", overflow: \"scroll\" }}>\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ fontSize: \"20px\", margin: \"10px\" }}>\n                        {passed ? \"You: Passed!\" : \"You did not Pass.\"}\n                    </div>\n\n                    {passed ? <FaCheckCircle color=\"green\" /> : <FaTimesCircle color=\"red\" />}\n                </div>\n\n                <br />\n\n                {masterMarkScheme.map(section => (\n                    <DropDown section={section} />\n                ))}\n\n                <br />\n                <br />\n\n                <ResultsBox>\n                    Total : {selected} / {total}\n                </ResultsBox>\n\n                <ExitButton\n                    onClick={() =>\n                        token\n                            ? props.handleExit(props.station?.questions, token)\n                            : updateDisplayLoginOption(true)\n                    }\n                >\n                    Done\n                </ExitButton>\n\n            {displayLoginOption && (\n                <SaveModal\n                    handleExit={props.handleExit}\n                    station={props.station}\n                    close={() => updateDisplayLoginOption(false)}\n                />\n            )}\n\n            </Box>\n            \n        </Container>\n        \n    );\n};\n\nexport default MarkReviewPage;\n\nconst ResultsBox = styled.div`\n    border: 2px solid #fad000;\n    width: 190px;\n    margin: auto;\n    padding: 5px;\n    text-align: center;\n    border-radius: 5px;\n`;\n\nconst DropDown = (props: { section: MarkSchemeSection }) => {\n    const [expanded, updateExpanded] = useState(true);\n\n    const renderSchemePoint = (schemePoint: {\n        point: string;\n        selected: boolean;\n        pointId: number;\n    }) => (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                marginBottom: \"15px\",\n            }}\n        >\n            <SchemePoint>{schemePoint.point}</SchemePoint>\n            <div>\n                {schemePoint.selected ? (\n                    <FaCheckCircle color=\"green\" />\n                ) : (\n                    <FaTimesCircle color=\"red\" />\n                )}\n            </div>\n        </div>\n    );\n\n    return (\n        <div style={{ margin: \"10px 0\" }}>\n            <Title onClick={() => updateExpanded(!expanded)}>\n                {expanded ? <FaCaretDown /> : <FaCaretRight />}\n                &nbsp; {props.section.title}\n            </Title>\n\n            <div\n                style={{\n                    display: expanded ? \"block\" : \"none\",\n                    margin: expanded ? \"20px 0\" : \"0\",\n                    padding: \"0 10%\",\n                }}\n            >\n                {props.section.points.map(renderSchemePoint)}\n            </div>\n        </div>\n    );\n};\n\nconst Title = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #031B34;\n    border-radius: 5px;\n    border: 2px #81AFDD;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 100%;\n    color: white;\n    border: 2px solid grey;\n`;\n\nconst SchemePoint = styled.div`\n    color: #FFFF;\n    font-size: 13px;\n    margin: 0 5px;\n`;\nexport const ExitButton = styled.div`\n    font-size: 23px;    \n    display: inline-block;\n    text-align: center;\n    border: 2px solid grey;\n    width: 80px;\n    color: #;\n    border-radius: px;\n    height: max-content;\n    border-radius: 5px;\n    margin: 15px 5px;\n`;\n","import { FaVolumeUp } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { promptId, Question } from \"./types\";\nimport heart from \"./media/heart.png\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport { useWindowSize } from \"../../functions\";\n\ntype QuestionPromptProps = {\n    question: Question;\n    toggle: () => void;\n    promptId: string;\n};\n\nconst QuestionPrompt = (props: QuestionPromptProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    return (\n        <div\n            onClick={props.toggle}\n            style={{\n                backgroundColor: \"#031B34\",\n                padding: \"5px\",\n                borderRadius: \"10px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                margin: \"0 auto 10px auto\",\n                width: \"100%\",\n                height: \"10vh\",\n                cursor: \"pointer\",\n            }}\n        >\n            <div style={{ margin: \"5px\" }}>\n                <img src={heart} width={narrowWindow ? \"35px\" : \"75px\"} />\n            </div>\n            <div>\n                <Prompt>\n                    <FaVolumeUp />\n                    <span style={{ fontSize: narrowWindow ? \"16px\" : \"20px\" }}>\n                        &nbsp; &nbsp; {props.question.question}\n                    </span>\n                    <audio src={props.question.questionAudio} id={props.promptId} />\n                </Prompt>\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionPrompt;\n\nconst Prompt = styled.div`\n    display: flex;\n    align-items: center;\n    color: white;\n    padding: 5px;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/start.682b36bb.mp3\";","import { useContext, useState } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\n\ntype RecordControlProps = {\n    recording: boolean;\n    stopEverything: () => void;\n    startRecording: () => void;\n    questionIdx: number;\n};\n\nconst RecordControl = (props: RecordControlProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    const record = () => {\n        props.stopEverything();\n        const startTone = new Audio(startToneUrl);\n        startTone.onended = props.startRecording;\n        startTone.play();\n    };\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Control\n                onClick={props.recording ? props.stopEverything : record}\n                narrowWindow={narrowWindow}\n                recording={props.recording}\n            >\n                <div style={{paddingBottom:\"10%\"}}> \n                <span> \n                <FaMicrophone /> &nbsp;\n                {props.recording && \"Done\"}\n                {!props.recording && \"Tap to answer\"}\n                </span>\n                </div>\n\n            </Control>\n        </div>\n    );\n};\n\nexport default RecordControl;\n\nconst Control = styled.button<{ narrowWindow: boolean; recording: boolean }>`\npadding: 10px 20px;\nbackground-color: #fad000;\nborder: none;\nborder-radius: 5px;\n    color: black;\n    font-weight: bold;\n\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 45%;\n    border: 1px solid ${props => (props.recording ? \"red\" : \"#414142\")};\n    color: ${props => (props.recording ? \"red\" : \"black\")};\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n","import { Dispatch, MutableRefObject, SetStateAction, useEffect, useState } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { generateWaveSurfer } from \"../hooks\";\n\ntype TaskSectionProps = {\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    questionIdx: number;\n    updateResponseWaveSurfer: Dispatch<SetStateAction<WaveSurfer | undefined>>;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    const [responsePlaying, updateResponsePlaying] = useState(false);\n\n    useEffect(() => {\n        const container = document.getElementById(\"waveform\" + props.questionIdx);\n        if (container) container.innerHTML = \"\";\n\n        const ws = generateWaveSurfer(\"waveform\" + props.questionIdx, props.responseAudio);\n        ws.on(\"play\", () => updateResponsePlaying(true));\n        ws.on(\"finish\", () => updateResponsePlaying(false));\n        ws.on(\"pause\", () => updateResponsePlaying(false));\n\n        props.updateResponseWaveSurfer(ws);\n    }, [props.responseAudio]);\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {!props.responseAudio ? (\n                <>\n                    <Panel\n                        style={{ margin: \"10px 0\", width: \"10%\", backgroundColor: \"#031B34\" }}\n                    ></Panel>\n                    <Panel\n                        style={{\n                            margin: \"10px 0\",\n                            width: \"87%\",\n                            backgroundColor: \"#031B34\",\n                        }}\n                    >\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            ) : (\n                <>\n                    <Panel\n                        onClick={responsePlaying ? props.stopEverything : props.playResponse}\n                        style={{ margin: \"10px 0\", width: \"10%\" }}\n                    >\n                        {responsePlaying ? <FaPause /> : <FaPlay />}\n                    </Panel>\n                    <Panel style={{ margin: \"10px 0\", width: \"87%\" }}>\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst Panel = styled.div`\n    background-color: #303237;\n    padding: 0 10px;\n    border-radius: 10px;\n`;\n","import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport styled from \"styled-components\";\nimport { copy } from \"../../../old-components/ECGPage/Functions/utility\";\nimport { Box } from \"../Common\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport RecordControl from \"./RecordControl\";\nimport WaveSurfer from \"./WaveSurfer\";\nimport { promptId, Question, Station } from \"../types\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\n\ntype QuestionContentProps = {\n    question: Question;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    active: boolean;\n    questionIdx: number;\n    nextFunc: () => void;\n};\n\nconst QuestionContent = (props: QuestionContentProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    const { startRecording, stopRecording, status } = useReactMediaRecorder({\n        audio: true,\n        onStop: (blobUrl, _) => {\n            console.log(\"recording stopped\");\n            props.updateStation(s => {\n                console.log(props.questionIdx);\n                s.questions[props.questionIdx].responseAudio = blobUrl ? blobUrl : \"\";\n                return copy(s); // because object is nested, react shallow compares\n            });\n\n            const endTone = new Audio(startToneUrl);\n            endTone.onended = props.nextFunc;\n            endTone.play();\n        },\n    });\n\n    const [responseWaveSurfer, updateResponseWaveSurfer] = useState<WaveSurfer | undefined>(\n        undefined\n    );\n\n    const getPromptAudio = () =>\n        document.getElementById(promptId + props.questionIdx) as HTMLAudioElement | null;\n\n    const stopEverything = () => {\n        getPromptAudio()?.pause();\n        responseWaveSurfer?.stop();\n        if (status === \"recording\") stopRecording();\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        if (id === promptId) getPromptAudio()?.play();\n        else responseWaveSurfer?.play();\n    };\n\n    useEffect(() => {\n        getPromptAudio()!.currentTime = 0;\n        props.active ? getPromptAudio()?.play() : stopEverything();\n    }, [props.active]);\n\n    return (\n        <div>\n            <div\n                style={{\n                    gridRowStart: 2,\n                    gridColumnStart: 1,\n                    height: \"60vh\",\n                    transition: `transform ${500}ms`,\n                }}\n            >\n                <QuestionPrompt\n                    question={props.question}\n                    toggle={() => {\n                        !getPromptAudio()?.paused ? stopEverything() : play(promptId);\n                    }}\n                    promptId={promptId + props.questionIdx}\n                />\n                <Box\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        height: \"49vh\",\n                    }}\n                >\n                    <Img src={props.question.img} narrowWindow={narrowWindow}></Img>\n                    <br />\n                </Box>\n            </div>\n            <div\n                style={{\n                    gridRowStart: 4,\n                    gridColumnStart: 1,\n                    zIndex: 700,\n                    backgroundColor: \"#\",\n                    height: \"15vh\",\n                }}\n            >\n                <WaveSurfer\n                    playResponse={() => play(\"waveform\" + props.questionIdx)}\n                    stopEverything={stopEverything}\n                    responseAudio={props.question.responseAudio}\n                    questionIdx={props.questionIdx}\n                    updateResponseWaveSurfer={updateResponseWaveSurfer}\n                />\n\n                <RecordControl\n                    recording={status === \"recording\"}\n                    stopEverything={stopEverything}\n                    startRecording={startRecording}\n                    questionIdx={props.questionIdx}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionContent;\n\nconst Img = styled.img<{ narrowWindow: boolean }>`\n    display: block;\n    margin: auto;\n    max-width: 100%;\n    max-height: 100%;\n    transition: width 0.2s;\n`;\n","export const randomVal = (min: number, max: number) =>  Math.floor(min + Math.random() * (max - min));\n\nexport const copy = (obj: any) => JSON.parse(JSON.stringify(obj));\n\n// Wooooaaaah\nexport const reduceObj = <K extends string, V, R>(func: (acc: R, a: [K, V]) => R, initial: R, obj: {[Property in K]? : V}): R => {\n    const entries = Object.entries(obj) as [K, V][];\n    return entries.reduce(func, initial)\n}\n\nexport const qualifyHR = (hr: number) => {\n    if (hr < 60) return \"Bradycardic\";\n    if (hr > 100) return \"Tachycardic\";\n    else return \"Normal\";\n}\n\nexport const qualifyAxis = (axis: number) => {\n    if (axis < -30) return \"Left Axis Deviation\";\n    if (axis > 90) return \"Right Axis Deviation\";\n    else return \"Normal\";\n}","import { Dispatch, SetStateAction, useState } from \"react\";\nimport { Container } from \"../Common\";\nimport { Question, startAudioRecordingId, Station } from \"../types\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionContent from \"./QuestionContent\";\nimport Header from \"../Header\";\nimport { useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\ntype QuestionProps = {\n    station: Station;\n    questionIdx: number;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    updateQuestionIdx: Dispatch<SetStateAction<number>>;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst QuestionPage = (props: QuestionProps) => {\n    const [sliderRef, setSliderRef] = useState<Slider | null>(null);\n    const questionCount = props.station.questions.length;\n    const history = useHistory();\n    const idx = props.questionIdx;\n\n    const nextFunc = () => {\n        idx === questionCount - 1\n            ? history.push(\"/OSCE/Station/Summary\")\n            : props.updateQuestionIdx(idx + 1);\n        sliderRef?.slickNext();\n    };\n\n    const prevFunc = () => {\n        if (idx > 0) props.updateQuestionIdx(idx - 1);\n        sliderRef?.slickPrev();\n    };\n\n    const settings = {\n        arrows: false,\n        infinite: false,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        vertical: true,\n        initialSlide: props.questionIdx,\n    };\n\n    return (\n        <Container>\n            <Header\n                updateStation={props.updateStation}\n                station={props.station}\n                handleExit={props.handleExit}\n                title={\"Station\"}\n                percentage={10 + (100 * idx) / questionCount}\n                timer={true}\n                nextFunc={nextFunc}\n                prevFunc={prevFunc}\n            />\n\n            <Slider ref={setSliderRef} {...settings}>\n                {props.station.questions.map((question, questionIdx) => (\n                    <QuestionContent\n                        question={question}\n                        questionIdx={questionIdx}\n                        updateStation={props.updateStation}\n                        active={props.questionIdx === questionIdx}\n                        nextFunc={nextFunc}\n                        key={questionIdx}\n                    />\n                ))}\n            </Slider>\n        </Container>\n    );\n};\n\nexport default QuestionPage;\n","import { Dispatch, SetStateAction, useState } from \"react\";\nimport { FaCaretDown, FaCaretRight, FaCheckCircle, FaCircle, FaTimesCircle } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { toggleMarkPoint } from \"../hooks\";\nimport { MarkSchemeSection, Station } from \"../types\";\n\ntype MarkSchemeProps = {\n    updateStation: Dispatch<SetStateAction<Station>>;\n    markScheme: MarkSchemeSection[];\n    questionIdx: number;\n    reviewMode: boolean;\n};\n\nconst MarkScheme = (props: MarkSchemeProps) => {\n    const selectPoint = (pointId: number) => {\n        props.updateStation(oldStation => toggleMarkPoint(oldStation, props.questionIdx, pointId));\n    };\n\n    const renderSchemePoint = (schemePoint: {\n        point: string;\n        selected: boolean;\n        pointId: number;\n    }) => {\n        return (\n            <SchemePointContainer\n                onClick={() => (props.reviewMode ? {} : selectPoint(schemePoint.pointId))}\n            >\n                <SchemePoint>{schemePoint.point}</SchemePoint>\n                <div>\n                    {schemePoint.selected ? (\n                        <FaCheckCircle color=\"green\" />\n                    ) : (\n                        <FaCircle color=\"grey\" />\n                    )}\n                </div>\n            </SchemePointContainer>\n        );\n    };\n\n    return (\n        <div style={{ margin: \"5% auto\", padding: \"0 10%\" }}>\n            {props.markScheme.map(x => (\n                <>\n                    <h5>{x.title}</h5>\n                    {x.points.map(renderSchemePoint)}\n                    <br />\n                </>\n            ))}\n        </div>\n    );\n};\n\nexport default MarkScheme;\n\nconst Title = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 100%;\n    border-style: none;\n    color: white;\n`;\n\nconst SchemePoint = styled.div`\n    text-align: left;\n    color: #fad000;\n    font-size: 18px;\n    margin: 0 5px;\n`;\n\nconst SchemePointContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n`;\n","import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport { Box } from \"../Common\";\nimport { generateWaveSurfer } from \"../hooks\";\n\ntype WaveSurferReviewProps = {\n    play: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    exemplarAudio: string;\n    updateWaveSurfer: Dispatch<SetStateAction<WaveSurfer | undefined>>;\n    questionIdx: number;\n};\n\nconst WaveSurferReview = (props: WaveSurferReviewProps) => {\n    const [selection, updateSelection] = useState<\"response\" | \"exemplar\" | \"\">(\"\");\n    const { narrowWindow } = useContext(MetaContext);\n    const [playing, updatePlaying] = useState(false);\n\n    const handleClick = (sel: \"response\" | \"exemplar\"): void => {\n        // if already selected then just toggle\n        if (sel === selection) return playing ? props.stopEverything() : props.play();\n\n        // need to stopEverything while ws exists\n        props.stopEverything();\n\n        const container = document.getElementById(\"waveform\" + props.questionIdx);\n        if (container) container.innerHTML = \"\";\n\n        const audio = sel === \"response\" ? props.responseAudio : props.exemplarAudio;\n        const waveSurfer = generateWaveSurfer(\"waveform\" + props.questionIdx, audio);\n\n        // potential issue if ws already loaded, dunno if this still fires in that case\n        if (selection) waveSurfer.on(\"ready\", _ => waveSurfer.play()); // if (sel) ==> do not play on first load\n        waveSurfer.on(\"play\", _ => updatePlaying(true));\n        waveSurfer.on(\"finish\", _ => updatePlaying(false));\n        waveSurfer.on(\"pause\", _ => updatePlaying(false));\n\n        props.updateWaveSurfer(waveSurfer);\n\n        updateSelection(sel);\n    };\n\n    // load in the user's repsonse audio at first\n    useEffect(() => {\n        handleClick(\"response\");\n    }, []);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                marginTop: \"10px\",\n            }}\n        >\n            <AudioSelect\n                onClick={() => handleClick(\"response\")}\n                narrowWindow={narrowWindow}\n                selected={selection === \"response\"}\n            >\n                {selection === \"response\" && playing ? <FaPause /> : <FaPlay />}\n                &nbsp; You\n            </AudioSelect>\n\n            <AudioSelect\n                onClick={() => handleClick(\"exemplar\")}\n                narrowWindow={narrowWindow}\n                selected={selection === \"exemplar\"}\n            >\n                {selection === \"exemplar\" && playing ? <FaPause /> : <FaPlay />}\n                &nbsp; Exemplar\n            </AudioSelect>\n\n            <Box style={{ margin: \"0\", width: \"87%\", borderRadius: \"5px\", height: \"30px\" }}>\n                <div id={\"waveform\" + props.questionIdx}></div>\n            </Box>\n        </div>\n    );\n};\n\nexport default WaveSurferReview;\n\nconst AudioSelect = styled.button<{ selected: boolean; narrowWindow: boolean }>`\n    background-color: ${props => (props.selected ? \"#FAD000\" : \"#031B34\")};\n    border-radius: 5px;\n    margin-right: 5px;\n    height: 30px;\n    align-content: center;\n    width: 130px;\n    border: 1px solid #414142;\n    color: ${props => (props.selected ? \"#FFFFF\" : \"#FFFF\")};\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n","import { useContext, useState, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport { Box } from \"../Common\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport { Question, promptId, responseId, Station } from \"../types\";\nimport MarkScheme from \"./MarkScheme\";\nimport WaveSurferReview from \"./WaveSurferReview\";\n\ntype QuestionReviewContentProps = {\n    question: Question;\n    questionIdx: number;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    reviewMode: boolean;\n    active: boolean;\n};\n\nconst QuestionReviewContent = (props: QuestionReviewContentProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n    const [waveSurfer, updateWaveSurfer] = useState<WaveSurfer | undefined>();\n    const [showMarkScheme, updateShowMarkScheme] = useState(true);\n\n    const getPromptAudio = () =>\n        document.getElementById(promptId + props.questionIdx) as HTMLAudioElement | null;\n\n    const stopEverything = () => {\n        getPromptAudio()?.pause();\n        waveSurfer?.stop();\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        if (id === promptId) getPromptAudio()?.play();\n        else waveSurfer?.play();\n    };\n\n    useEffect(() => {\n        getPromptAudio()!.currentTime = 0;\n        props.active ? getPromptAudio()?.play() : stopEverything();\n    }, [props.active]);\n\n    return (\n        <>\n            <div\n                style={{\n                    gridRowStart: 2,\n                    gridColumnStart: 1,\n                    height: \"60vh\",\n                    transition: `transform ${500}ms`,\n                }}\n            >\n                <QuestionPrompt\n                    question={props.question}\n                    toggle={() => {\n                        !getPromptAudio()?.paused ? stopEverything() : play(promptId);\n                    }}\n                    promptId={promptId + props.questionIdx}\n                />\n                <Box\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        height: \"49vh\",\n                    }}\n                >\n                    {showMarkScheme ? (\n                        <Img src={props.question.img} narrowWindow={narrowWindow}></Img>\n                    ) : (\n                        <MarkScheme\n                            markScheme={props.question.markScheme}\n                            questionIdx={props.questionIdx}\n                            updateStation={props.updateStation}\n                            reviewMode={props.reviewMode}\n                        />\n                    )}\n                </Box>\n            </div>\n            <div\n                style={{\n                    gridRowStart: 4,\n                    gridColumnStart: 1,\n                    zIndex: 700,\n                    backgroundColor: \"#\",\n                    height: \"15vh\",\n                }}\n            >\n                <SchemeToggle\n                    narrowWindow={narrowWindow}\n                    onClick={() => updateShowMarkScheme(!showMarkScheme)}\n                >\n                    {showMarkScheme ? \"Mark Scheme\" : \"Show Station\"}\n                </SchemeToggle>\n                <WaveSurferReview\n                    stopEverything={stopEverything}\n                    play={() => play(responseId)}\n                    exemplarAudio={props.question.exemplarAudio}\n                    responseAudio={props.question.responseAudio}\n                    updateWaveSurfer={updateWaveSurfer}\n                    questionIdx={props.questionIdx}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default QuestionReviewContent;\n\nconst Img = styled.img<{ narrowWindow: boolean }>`\n    display: block;\n    margin: auto;\n    max-width: 100%;\n    max-height: 100%;\n    transition: width 0.2s;\n`;\n\nconst SchemeToggle = styled.button<{ narrowWindow: boolean }>`\n    background-color: #031B34;\n    border-radius: 5px;\n    height: 30px;\n    align-content: center;\n    width: 100%;\n    margin-top: 10px;\n    border: 1px solid #414142;\n    color: #fad000;\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n","import { Dispatch, SetStateAction, useState } from \"react\";\nimport { Container } from \"../Common\";\nimport { Question, Station } from \"../types\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionReviewContent from \"./QuestionReviewContent\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport Slider from \"react-slick\";\n\ntype QuestionReviewPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    questionIdx: number;\n    updateIdx: Dispatch<SetStateAction<number>>;\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst QuestionReviewPage = (props: QuestionReviewPageProps) => {\n    const [sliderRef, setSliderRef] = useState<Slider | null>(null);\n    const history = useHistory();\n    const idx = props.questionIdx;\n    const questionCount = props.station.questions.length;\n\n    const nextFunc = () => {\n        idx === questionCount - 1\n            ? history.push(\"/OSCE/Station/MarkReview\")\n            : props.updateIdx(idx + 1);\n        sliderRef?.slickNext();\n    };\n\n    const prevFunc = () => {\n        if (idx > 0) props.updateIdx(idx - 1);\n        sliderRef?.slickPrev();\n    };\n\n    const settings = {\n        arrows: false,\n        infinite: false,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        vertical: true,\n        initialSlide: props.questionIdx,\n    };\n\n    return (\n        <Container style={{ textAlign: \"center\" }}>\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr\",\n                }}\n            >\n                <Header\n                    updateStation={props.updateStation}\n                    station={props.station}\n                    handleExit={props.handleExit}\n                    title={\"Review\"}\n                    percentage={10 + (100 * idx) / questionCount}\n                    timer={false}\n                    nextFunc={nextFunc}\n                    prevFunc={prevFunc}\n                />\n\n                <Slider ref={setSliderRef} {...settings}>\n                    {props.station.questions.map((q, questionIdx) => (\n                        <QuestionReviewContent\n                            question={q}\n                            questionIdx={questionIdx}\n                            updateStation={props.updateStation}\n                            reviewMode={props.reviewMode}\n                            active={questionIdx === props.questionIdx}\n                        />\n                    ))}\n                </Slider>\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionReviewPage;\n","export default __webpack_public_path__ + \"static/media/SummaryAudio.bc3b64d7.mp3\";","import { FaVolumeUp } from \"react-icons/fa\"\nimport styled from \"styled-components\"\nimport { promptId, Question } from \"./types\"\nimport heart from \"./media/heart.png\"\nimport summaryAudioUrl from \"./media/SummaryAudio.mp3\"\nimport { useState } from \"react\"\n\ntype SummaryPromptProps = {\n}\n\nconst SummaryPrompt = (props: SummaryPromptProps) => {\n\n    const toggle = () => {\n        const audioElement = document.getElementById(\"summaryAudio\") as HTMLAudioElement;\n        if (!audioElement) return;\n        audioElement.paused ? audioElement.play() : audioElement.pause();\n    }\n\n    return (\n        <div>\n\n            <div style = {{ display: \"inline-block\", margin: \"20px 0\" }}><img src = { heart } width = \"100px\"/></div>\n\n            <Prompt onClick = { toggle }>\n\n                <FaVolumeUp /> &nbsp; &nbsp; You have completed the station, time to review!\n\n                <audio autoPlay = {true} src = { summaryAudioUrl } id = \"summaryAudio\"/>\n\n            </Prompt>\n\n        </div>\n    )\n}\n\nexport default SummaryPrompt\n\nconst Prompt = styled.div`\n    display: inline-block;\n    color: #FFFF;\n    border: 2px solid grey;\n    border-radius: 5px;\n    margin: 0 5%; \n    padding: 5px;\n    &:hover {\n        cursor: pointer;\n        border: 2px solid #FAD000;\n    }\n`","import { Dispatch, SetStateAction } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, Container } from \"./Common\";\nimport Header from \"./Header\";\nimport SummaryPrompt from \"./SummaryPrompt\";\nimport { Question, Station } from \"./types\";\n\ntype SummaryProps = {\n    questionIdx: number;\n    updateIdx: Dispatch<SetStateAction<number>>;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    station: Station;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst Summary = (props: SummaryProps) => {\n    const history = useHistory();\n    const questionCount = props.station.questions.length;\n\n    const nextFunc = () => {\n        props.updateIdx(0);\n        history.push(\"/OSCE/Station/Review\");\n    };\n    const prevFunc = () => {\n        props.updateIdx(questionCount - 1);\n        history.push(\"/OSCE/Station/Question\");\n    };\n\n    return (\n        <Container>\n            <Header\n                station={props.station}\n                updateStation={props.updateStation}\n                handleExit={props.handleExit}\n                title={\"Finish\"}\n                percentage={100}\n                timer={true}\n                nextFunc={nextFunc}\n                prevFunc={prevFunc}\n            />\n\n            <Box style={{ textAlign: \"center\", paddingBottom: \"25px\" }}>\n                <SummaryPrompt />\n\n                <br />\n\n                <Link to=\"/OSCE/Station/Review\">\n                    <Start onClick={nextFunc}>Start Review</Start>\n                </Link>\n            </Box>\n        </Container>\n    );\n};\n\nexport default Summary;\n\nconst Start = styled.div`\n    background-color: grey;\n    width: 50%;\n    border: 2px solid grey;\n    border-radius: 5px;\n    margin: 0 auto;\n    padding: 1% 0;\n    &:hover {\n        cursor: pointer;\n        border: 2px solid #fad000;\n        color: #fad000;\n    }\n`;\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./Question/QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReview/QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { AnsweredStationDetails, Question, Station } from \"./types\";\n\ntype StationPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    answeredStations: AnsweredStationDetails[];\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst StationPage = (props: StationPageProps) => {\n    const [questionIdx, updateQuestionIdx] = useState(0);\n\n    if (props.station.id === \"NullStation\") return <Redirect to=\"/OSCE\" />;\n\n    return (\n        <div\n            style={{\n                height: \"100vh\",\n                overflow: \"hidden\",\n            }}\n        >\n            <Switch>\n                <Route exact path=\"/OSCE/Station/Brief\">\n                    <Brief\n                        updateStation={props.updateStation}\n                        station={props.station}\n                        handleExit={props.handleExit}\n                        questionIdx={questionIdx}\n                    />\n                </Route>\n\n                <Route exact path={\"/OSCE/Station/Question\"}>\n                    <QuestionPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        questionIdx={questionIdx}\n                        updateQuestionIdx={updateQuestionIdx}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path=\"/OSCE/Station/Summary\">\n                    <Summary\n                        updateStation={props.updateStation}\n                        updateIdx={updateQuestionIdx}\n                        station={props.station}\n                        questionIdx={questionIdx}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path={\"/OSCE/Station/Review\"}>\n                    <QuestionReviewPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        questionIdx={questionIdx}\n                        updateIdx={updateQuestionIdx}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path=\"/OSCE/Station/MarkReview\">\n                    <MarkReviewPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                        updateIdx={updateQuestionIdx}\n                        questionIdx={questionIdx}\n                    />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default StationPage;\n","import { AnsweredStationDetails, Station } from \"../types\";\n\nexport const NullStation: Station = {\n    id: \"NullStation\",\n    title: \"Null Station\",\n    category: \"\",\n    isDemoStation: true,\n\n    timePermitted: 1000,\n    timeRemaining: 1000,\n\n    brief: {\n        timePermitted: 60,\n        timeRemaining: 60,\n        prompt: \"\",\n    },\n\n    questions: [],\n};\n\nexport const NullStationDetails: AnsweredStationDetails = {\n    id: \"NullStation\",\n    markCode: 0,\n    responseAudios: [],\n    dateAnswered: new Date(0),\n};\n","export default __webpack_public_path__ + \"static/media/loading.c16538ab.gif\";","import loadinggif from \"./media/loading.gif\";\n\nconst LoadingOverlay = () => (\n    <div\n        style={{\n            margin: \"auto\",\n            textAlign: \"center\",\n            padding: \"100px 0\",\n            backgroundColor: \"#131418\",\n            height: \"100vh\",\n        }}\n    >\n        <h1>Pre-heating the oven</h1>\n        <img src={loadinggif} style={{ width: \"50%\" }} />\n    </div>\n);\n\nexport default LoadingOverlay;\n","import { props } from \"ramda\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport heart from \"../OSCEPage/media/heart.png\";\n\ntype SubcribeModalProps = {\n    close: () => void;\n};\n\nconst SubscribeModal = (props: SubcribeModalProps) => {\n    return (\n        <OverLay onClick={props.close}>\n            <Modal>\n                <div\n                    style={{\n                        display: \"flex\",\n                        margin: \"20px auto\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div style={{ margin: \"10px\" }}>\n                        <img src={heart} height={100} />\n                    </div>\n                    <div>\n                        <div style={{ fontSize: \"25px\" }}> Unlock Premium Stations </div>\n                        <div style={{ fontSize: \"15px\" }}> Only £45 per year  </div>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Button style = {{backgroundColor: \"#1c2124\", color: \"#DCDCDC\",}} onClick={props.close}>Maybe Later</Button>\n                    <Link to=\"/Subscribe/Checkout\">\n                        <Button style = {{backgroundColor: \"#da9926\", color: \"#000000\",}}>Buy Now</Button>\n                    </Link>\n                </div>\n                <div\n                    style={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        margin: \"10px\",\n                        cursor: \"pointer\",\n                    }}\n                    onClick={props.close}\n                >\n                    <FaTimes size={20} />\n                </div>\n            </Modal>\n        </OverLay>\n    );\n};\n\nexport default SubscribeModal;\n\nconst OverLay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    height: 100vh;\n    width: 100vw;\n`;\n\nconst Modal = styled.div`\n    border-radius: 10px;\n    position: absolute;\n    top: 200px;\n    left: 12.5vw;\n    background-color: #1c2124;\n    height: 250px;\n    width: 75vw;\n`;\n\nconst Button = styled.button`\n    background-color: #fad000;\n    border-radius: 5px;\n    border-style: none;\n    height: 35px;\n    width: 100px;\n    margin: 10px;\n`;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport OSCESelector from \"./OSCESelector\";\nimport StationPage from \"./StationPage\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullStation } from \"./DemoStations/NullStation\";\nimport axios from \"../../myaxios\";\nimport { AnsweredStationDetails, Question, StationSummary } from \"./types\";\nimport {\n    binaryToCode,\n    downloadAssets,\n    extractReponseAudio,\n    populateMarkScheme,\n    populateResponseAudios,\n    useStations,\n    useUserDetails,\n} from \"./hooks\";\nimport LoadingOverlay from \"./LoadingOverlay\";\nimport Navigator from \"../Navigator\";\nimport SubscribeModal from \"../SubscribePage/SubscribeModal\";\n\nconst OSCEPage = () => {\n    const { token, SERVER_URL } = useContext(MetaContext);\n    const [station, updateStation] = useState(NullStation);\n    const [reviewMode, updateReviewMode] = useState(false);\n    const [loading, updateLoading] = useState(false);\n    const [userDetailsOsce, userLoading] = useUserDetails(SERVER_URL, token);\n    const [stationSummarires, stationeSummariesLoading] = useStations(SERVER_URL, token);\n    const [subscribeModalOpen, updateSubscribeOpen] = useState(false);\n\n    const selectStation = async (id: string, options: { review: boolean; marks: (0 | 1)[] }) => {\n        updateLoading(true);\n        updateReviewMode(options.review);\n\n        try {\n            const axres = await axios.post(SERVER_URL + \"/osce/get_station\", { token, id });\n\n            if (!axres.data.success) {\n                throw \"selecteStation (OSCEPage): Station retrieval failed!\";\n            }\n\n            if (options.review) {\n                const matches = userDetailsOsce.answeredStations.filter(\n                    s => s.id === axres.data.station.id\n                );\n                const rawResponseAudios =\n                    matches.length === 0\n                        ? Array(axres.data.station.questions.length).fill(\"\")\n                        : matches[0].responseAudios;\n\n                const stationWithMarks = populateMarkScheme(axres.data.station, options.marks);\n                const stationWithResponses = populateResponseAudios(\n                    stationWithMarks,\n                    rawResponseAudios\n                );\n                const localContentStation = await downloadAssets(stationWithResponses, SERVER_URL);\n                updateStation(localContentStation);\n            } else {\n                const localContentStation = await downloadAssets(axres.data.station, SERVER_URL);\n                updateStation(localContentStation);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n        updateLoading(false);\n    };\n\n    const handleExit = async (questions: Question[], tok: string) => {\n        updateLoading(true);\n\n        const points = questions\n            .map(q => q.markScheme.map(ms => ms.points.map(p => (p.selected ? 1 : 0))))\n            .flat(2);\n        const markCode = binaryToCode([1 as 1 | 0].concat(points));\n\n        if (!reviewMode) {\n            const responseAudios = await extractReponseAudio(questions);\n            await axios.post(SERVER_URL + \"/osce/update_stations\", {\n                token: tok,\n                markCode,\n                id: station.id,\n                responseAudios,\n            });\n        }\n\n        updateStation(NullStation);\n        window.location.href = \"/OSCE\";\n\n        updateLoading(false);\n    };\n\n    return (\n        <>\n            {subscribeModalOpen && <SubscribeModal close={() => updateSubscribeOpen(false)} />}\n            <Switch>\n                {loading && <LoadingOverlay />}\n\n                <Route exact path=\"/OSCE\">\n                    <Navigator selection={\"OSCE\"} />\n                    <OSCESelector\n                        openSubscribeModal={() => updateSubscribeOpen(true)}\n                        stationSummarires={stationSummarires}\n                        answeredStations={userDetailsOsce.answeredStations}\n                        selectStation={selectStation}\n                        station={station}\n                        purchasedOsce={userDetailsOsce.purchasedOsce}\n                        stationSummariesLoading={stationeSummariesLoading || userLoading}\n                    />\n                </Route>\n\n                <Route path=\"/OSCE/Station\">\n                    <StationPage\n                        handleExit={handleExit}\n                        station={station}\n                        updateStation={updateStation}\n                        answeredStations={userDetailsOsce.answeredStations}\n                        reviewMode={reviewMode}\n                    />\n                </Route>\n            </Switch>\n        </>\n    );\n};\n\nexport default OSCEPage;\n","import { Login, Logout } from \"../HomePage/LoginLogout\";\n\nconst ExpiryLoginPage = () => {\n    const successCallback = () => {\n        window.location.href = \"/\";\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", marginTop: \"200px\" }}>\n            <h3>Please sign in again to refresh your session</h3>\n            <Login label=\"Login\" successCallback={successCallback} />\n        </div>\n    );\n};\n\nexport default ExpiryLoginPage;\n","import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Login } from \"../HomePage/LoginLogout\";\nimport { Box } from \"../OSCEPage/Common\";\nimport LoadingScreen from \"../OSCEPage/LoadingScreen\";\nimport heart from \"../OSCEPage/media/heart.png\";\n\ntype ChekoutProps = {};\n\nconst Chekout = (props: ChekoutProps) => {\n    const { SERVER_URL, CLIENT_URL, token } = useContext(MetaContext);\n    const history = useHistory();\n    const [handlingCheckout, updateHandlingCheckout] = useState(false);\n\n    const handleCheckout = async (t: string) => {\n        updateHandlingCheckout(true);\n        try {\n            const { purchasedOsce } = (\n                await axios.post(SERVER_URL + \"/user/osce_details\", { token: t })\n            ).data;\n\n            if (purchasedOsce) return history.push(\"/OSCE\");\n\n            const checkoutUrl = (\n                await axios.post(SERVER_URL + \"/pay/create-checkout-session\", {\n                    cancel_url: CLIENT_URL + \"/Subscribe/PaymentCanceled\",\n                    success_url: CLIENT_URL + \"/Subscribe/PaymentSuccess\",\n                    token: t,\n                })\n            ).data;\n\n            window.location.href = checkoutUrl;\n        } catch (err) {\n            console.log(err);\n        }\n        updateHandlingCheckout(false);\n    };\n\n    return handlingCheckout ? (\n        <LoadingScreen message=\"Please wait\" />\n    ) : (\n        <div style={{ background: \"#2f3237\", margin: \"5%\", padding: \"5%\", textAlign: \"center\" }}>\n            <div\n                style={{\n                    display: \"flex\",\n                    margin: \"20px auto\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <div style={{ margin: \"10px\" }}>\n                    <img src={heart} height={100} />\n                </div>\n                <div>\n                    <div style={{ fontSize: \"25px\" }}> Unlock Premium Stations </div>\n                    <div style={{ fontSize: \"15px\" }}> Only £45 per year </div>\n                </div>\n            </div>\n\n            {token ? (\n                <CheckoutButton\n                    color=\"#FAD000\"\n                    minWidth={300}\n                    onClick={() => handleCheckout(token)}\n                >\n                    Unlock the greatness\n                </CheckoutButton>\n            ) : (\n                <span onClick={() => updateHandlingCheckout(true)}>\n                    <Login label=\"Unlock the greatness\" successCallback={t => handleCheckout(t)} />\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default Chekout;\n\nconst CheckoutButton = styled.button<{ color: string; minWidth: number }>`\n    display: block;\n    margin: auto;\n    border-style: none;\n    border: 2px solid ${props => props.color};\n    background-color: transparent;\n    color: ${props => props.color};\n    border-radius: 5px;\n    padding: 5px;\n    min-width: ${props => props.minWidth}px;\n    &:hover {\n        background-color: ${props => props.color};\n        color: black;\n    }\n`;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ntype PaymentAfterMathProps = {\n    message: string;\n};\n\nconst PaymentAfterMath = (props: PaymentAfterMathProps) => {\n    return (\n        <div>\n            <br /> <br />\n            <div style={{ textAlign: \"center\" }}>\n                <h3>{props.message}</h3>\n                <br />\n                <Link to=\"/OSCE\">\n                    <CheckoutButton color=\"#FAD000\" minWidth={300}>\n                        Return Home\n                    </CheckoutButton>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentAfterMath;\n\nconst CheckoutButton = styled.button<{ color: string; minWidth: number }>`\n    display: block;\n    margin: auto;\n    border-style: none;\n    border: 2px solid ${props => props.color};\n    background-color: transparent;\n    color: ${props => props.color};\n    border-radius: 5px;\n    padding: 5px;\n    min-width: ${props => props.minWidth}px;\n    &:hover {\n        background-color: ${props => props.color};\n        color: black;\n    }\n`;\n","import { Route, Switch } from \"react-router-dom\";\nimport Navigator from \"../Navigator\";\nimport Checkout from \"./Checkout\";\nimport PaymentAfterMath from \"./PaymentAfterMath\";\n\nconst SubscribePage = () => {\n    return (\n        <div>\n            <Navigator selection=\"Checkout\" />\n\n            <Switch>\n                <Route path=\"/Subscribe/Checkout\">\n                    <Checkout />\n                </Route>\n\n                <Route path=\"/Subscribe/PaymentCanceled\">\n                    <PaymentAfterMath message=\"Payment was unsuccessful\" />\n                </Route>\n\n                <Route path=\"/Subscribe/PaymentSuccess\">\n                    <PaymentAfterMath message=\"Payment was successful\" />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default SubscribePage;\n","import Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport styled from \"styled-components\";\n\ntype ProgressPieProps = {\n    radius: number;\n    percentage: number;\n};\n\nconst arcCoords = (r: number, a: number): { x: number; y: number } => ({\n    x: r + r * Math.sin(a),\n    y: r - r * Math.cos(a),\n});\n\nconst ProgressPie = (props: ProgressPieProps) => {\n    const r = props.radius;\n    const angle = ((44 / 7) * props.percentage) / 100;\n    const coords = arcCoords(r, angle);\n\n    const extraPath = props.percentage > 50 ? `A${r},${r} 1 0, 1, ${coords.x},${coords.y}` : \"\";\n\n    const { x, y } = props.percentage > 50 ? { x: r, y: 2 * r } : coords;\n    const path = `M${r},${r} L${r},0 A${r},${r} 1 0, 1, ${x},${y} ${extraPath} z`;\n\n    return (\n        <div style={{ margin: \"10px 0\" }}>\n            <svg style={{ height: `${2 * r}px`, width: `${2 * r}px` }}>\n                <Circle cx={r} cy={r} r={r} style={{ fill: \"#990000\" }}></Circle>\n                <path d={path} style={{ fill: \"green\" }}></path>\n                <Circle cx={r} cy={r} r={r * 0.95}></Circle>\n                <text\n                    x={r}\n                    y={r}\n                    fill=\"#FAD000\"\n                    dominantBaseline=\"middle\"\n                    textAnchor=\"middle\"\n                    fontSize={40}\n                >\n                    {Math.round(props.percentage)}%\n                </text>\n            </svg>\n        </div>\n    );\n};\n\nexport default ProgressPie;\n\nconst Circle = styled.circle`\n    fill: #1c2124;\n`;\n","import axios from \"../../myaxios\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navigator from \"../Navigator\";\nimport { NullStation, NullStationDetails } from \"../OSCEPage/DemoStations/NullStation\";\nimport ProgressPie from \"./ProgressPie\";\nimport { useContext, useEffect, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport {\n    downloadAssets,\n    getBinaryDigits,\n    markPercentage,\n    populateMarkScheme,\n    populateResponseAudios,\n    useUserDetails,\n} from \"../OSCEPage/hooks\";\nimport { AnsweredStationDetails, Station, StationSummary } from \"../OSCEPage/types\";\nimport Analysis from \"./Analysis\";\nimport OSCEPage from \"../OSCEPage/OSCEPage\";\nimport OSCESelector from \"../OSCEPage/OSCESelector\";\nimport StationSummaryCard from \"../OSCEPage/StationSummaryCard\";\nimport Summary from \"../OSCEPage/Summary\";\nimport Header from '/Users/a/Documents/med-bakery-react/client/src/components/HomePage/Header.jsx'\nimport Header2 from '/Users/a/Documents/med-bakery-react/client/src/components/HomePage//Header2.jsx'\nimport Navbar from '/Users/a/Documents/med-bakery-react/client/src/components/HomePage//Navbar.jsx'\nimport WhatisGPT3 from '/Users/a/Documents/med-bakery-react/client/src/components/HomePage/whatisGPT3.jsx'\n\n\n\ntype UserPageProps = {};\n\nconst UserPage = (props: UserPageProps) => {\n    const { SERVER_URL, token } = useContext(MetaContext);\n    const [{ answeredStations, purchasedOsce }, userLoading] = useUserDetails(SERVER_URL, token);\n\n    const averagePercentage =\n        answeredStations.length === 0\n            ? 0\n            : answeredStations.map(as => markPercentage(as.markCode)).reduce((acc, a) => acc + a) /\n              answeredStations.length;\n\n    return (\n        <>\n            <Navigator selection={\"Dashboard\"} />\n\n            <Container>\n                <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <div style={{ textAlign: \"center\" }}>\n                        <div style={{ fontSize: \"50px\" }}>Welcome Back</div>\n                        <br />\n                        <Panel>\n                            <Title>Average OSCE Score</Title>\n                            <ProgressPie percentage={averagePercentage} radius={75} />\n                            <Link to=\"/OSCE\">\n                            <Button>Practice</Button>\n                            </Link>\n                        </Panel>\n                        <Panel>\n                            <Title>Review Last Station</Title>\n                            <Link to=\"/OSCE\">\n                                <Button>Review</Button>\n                            </Link>\n                        </Panel>{\" \"}\n                    </div>\n                    {/*\n                    <div style={{ width: \"40%\", textAlign: \"center\" }}>\n                        <Panel>\n                            <Title>Breakdown</Title>\n                            <Analysis answeredOsceDetails={answeredStations} />\n                            <Button>Analysis</Button>\n                        </Panel>\n                    </div> */}\n                </div>\n            </Container>\n        </>\n    );\n};\n\nexport default UserPage;\n\nconst Container = styled.div`\n    background-color: #2f3237;\n    margin: 5%;\n    padding: 5%;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    border-radius: 10px;\n`;\n\nconst Panel = styled.div`\n    background-color: #1c2124;\n    margin-bottom: 10px;\n    padding: 10px;\n    text-align: center;\n    border-radius: 10px;\n`;\n\nconst Title = styled.div`\n    margin: 15px 0;\n    font-size: 25px;\n`;\n\nconst Button = styled.button`\n    background-color: #FAAD29;\n    margin-bottom: 10px;\n    padding: 5px;\n    border-style: none;\n    border-radius: 10px;\n    width: 150px;\n`;\n","import styled from \"styled-components\";\nimport { DataInterpQuestion } from \"./types\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\n\n\ntype QuestionPageProps = {\n    question: DataInterpQuestion;\n};\n\nconst QuestionPage = (props: QuestionPageProps) => {\n    console.log(props.question);\n    const { SERVER_URL, token } = useContext(MetaContext);\n\n    if (!props.question) {\n        return (\n            <>\n              <Link to=\"/DataInterpretation\">\n                <div style={{ position: \"absolute\", top: 5, left: 10 }}><FaTimes /></div>\n              </Link>\n              <Container>\n                <QuestionText>No more questions available.</QuestionText>\n              </Container>\n            </>\n          );\n    }\n    \n    if (props.question.id === -1) \n        return (\n          <>\n            <Link to=\"/DataInterpretation\">\n              <div style={{ position: \"absolute\", top: 5, left: 10 }}><FaTimes /></div>\n            </Link>\n            <Container>\n              <QuestionText>No more questions available.</QuestionText>\n            </Container>\n          </>\n        );\n      \n      \n    \n    return (\n        <>\n            <Link to=\"/DataInterpretation\">\n                <div style={{ position: \"absolute\", top: 5, left: 10 }}><FaTimes /></div>\n            </Link>\n            <Container>\n                <QuestionText>{props.question.task}</QuestionText>\n                <Content>\n                    <Img src={SERVER_URL + \"/media/interp/\" + props.question.image} />\n                </Content>\n                <Link to=\"/DataInterpretation/Answer\">\n                    <ShowAnswer>Show Answer</ShowAnswer>\n                </Link>\n            </Container>\n        </>\n    );\n};\n\nexport default QuestionPage;\n\nconst Container = styled.div`\n    text-align: center;\n    margin: 50px auto;\n    max-width: 800px;\n`\n\nconst QuestionText = styled.div`\n    background-color: #2f3237;\n    border-radius: 2px;\n    padding: 10px;\n`\n\nconst Content = styled.div`\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px 0px;\n    padding: 25px;\n    border-radius: 2px;\n`\n\nconst Img = styled.img`\n    width: 200px;\n`\n\nconst ShowAnswer = styled.div`\n    background-color: #ffb000;\n    color: black;\n    border-radius: 2px;\n    padding: 10px;\n    font-size: 20px;\n    cursor: pointer;\n`\n","import { DataInterpQuestion } from \"./types\";\n\nexport const questions: DataInterpQuestion[] = [\n    {\n        id: 0,\n        title: \"Basics\",\n        task: \"Please intepret the CXR\",\n        category: \"Chest X-rays\",\n        finding: \"Basics\",\n        description:\n            \"You need to look systematically at the CXR. ABCDE is a useful pneumonic to use\",\n        image: \"CXR.jpeg\",\n        sections: [\n            {\n                title: \"Deviated Trachea\",\n                tab_label: \"Airway\",\n                image: \"CXR_trachea.jpeg\",\n                descirption: \"A deviated trachea can indicate .... etc\",\n            },\n            {\n                title: \"Lung fields\",\n                tab_label: \"Breathing\",\n                image: \"CXR_field.jpeg\",\n                descirption: \"Shadowing in right middle lobe suggests .... etc\",\n            },\n            {\n                title: \"Enlarged heart\",\n                tab_label: \"Circulation\",\n                image: \"CXR_heart.jpeg\",\n                descirption: \"Increased cardiothoracic ratio is seen in .... etc\",\n            },\n            {\n                title: \"Diaphragm\",\n                tab_label: \"Diaphragm\",\n                image: \"CXR_diaphragm.jpeg\",\n                descirption: \"blunt costrophrenic angles may suggest .... etc\",\n            },\n            {\n                title: \"ECG leads\",\n                tab_label: \"Else\",\n                image: \"CXR_leads.jpeg\",\n                descirption: \"Extra features hint at level of morbidity .... etc\",\n            },\n        ],\n    },\n    {\n        id: 0,\n        title: \"Pneumothorax\",\n        task: \"Please intepret the CXR\",\n        category: \"Chest X-rays\",\n        finding: \"Tracheal Deviation\",\n        description: \"Some description of pneumothorax\",\n        image: \"CXR.jpeg\",\n        sections: [\n            {\n                title: \"Deviated Trachea\",\n                tab_label: \"A\",\n                image: \"CXR_trachea.jpeg\",\n                descirption: \"A deviated trachea can indicate .... etc\",\n            },\n        ],\n    },\n    {\n        id: 0,\n        title: \"Pleural Effusion\",\n        task: \"Please intepret the CXR\",\n        category: \"Chest X-rays\",\n        finding: \"Tracheal Deviation\",\n        description: \"Some description of pneumothorax\",\n        image: \"CXR.jpeg\",\n        sections: [\n            {\n                title: \"Deviated Trachea\",\n                tab_label: \"A\",\n                image: \"CXR_trachea.jpeg\",\n                descirption: \"A deviated trachea can indicate .... etc\",\n            },\n        ],\n    },\n    {\n        id: 0,\n        title: \"Mass Effect\",\n        task: \"Please intepret the CXR\",\n        category: \"Chest X-rays\",\n        finding: \"Tracheal Deviation\",\n        description: \"Some description of pneumothorax\",\n        image: \"CXR.jpeg\",\n        sections: [\n            {\n                title: \"Deviated Trachea\",\n                tab_label: \"A\",\n                image: \"CXR_trachea.jpeg\",\n                descirption: \"A deviated trachea can indicate .... etc\",\n            },\n        ],\n    },\n    {\n        id: 0,\n        title: \"Pneumonia\",\n        task: \"Please intepret the CXR\",\n        category: \"Chest X-rays\",\n        finding: \"Lung White out\",\n        description: \"Some description of pneumothorax\",\n        image: \"CXR.jpeg\",\n        sections: [\n            {\n                title: \"Deviated Trachea\",\n                tab_label: \"A\",\n                image: \"CXR_trachea.jpeg\",\n                descirption: \"A deviated trachea can indicate .... etc\",\n            },\n        ],\n    },\n    {\n        id: 0,\n        title: \"Atrial Fibrillation\",\n        task: \"Please intepret the ECG\",\n        category: \"ECG\",\n        finding: \"Irregular Rhythm\",\n        description: \"Some description of AF\",\n        image: \"CXR.jpeg\",\n        sections: [\n            {\n                title: \"Deviated Trachea\",\n                tab_label: \"A\",\n                image: \"CXR_trachea.jpeg\",\n                descirption: \"A deviated trachea can indicate .... etc\",\n            },\n        ],\n    },\n];\n\nexport const NullQuestion: DataInterpQuestion = {\n    id: -1,\n    title: \"\",\n    task: \"NULL question\",\n    category: \"\",\n    finding: \"\",\n    description: \"\",\n    image: \"\",\n    sections: [],\n};\n","import axios from \"../../myaxios\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { DataInterpQuestion } from \"./types\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullQuestion } from \"./exampleQuestions\";\nimport TopicSelectionPage from \"./TopicsSelectorPage\";\nimport { useRef } from 'react';\nimport { Question } from \"../OSCEPage/types\";\nimport { DetailedHTMLProps, ImgHTMLAttributes } from 'react';\n\ntype QuestionSelectorProps = {\n    updateCurrentQuestion: Dispatch<SetStateAction<DataInterpQuestion>>;\n};\n\ninterface CustomImgAttributes extends ImgHTMLAttributes<HTMLImageElement> {\n    hoverSrc?: string;\n  }\n  \n  type CustomImgProps = DetailedHTMLProps<CustomImgAttributes, HTMLImageElement>;\n  \n\nconst QuestionSelector = (props: QuestionSelectorProps) => {\n    // these will be null in the actual implementatiuon\n    // initalised once questions are retrieved\n    const [questions, updateQuestions] = useState([ NullQuestion ]);\n    const [selectedQuestion, updateSelectedQuestion] = useState(NullQuestion);\n    const [selectedFinding, updateSelectedFinding] = useState(\"\");\n    const [selectedCategory, updateSelectedCategory] = useState(\"\");\n    const [showFindings, setShowFindings] = useState(true);\n    const [findingButtonsVisible, setFindingButtonsVisible] = useState(true);\n    const [menuOpen, setMenuOpen] = useState(false);\n\n    \n    const menuRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n          setMenuOpen(false);\n        }\n      };\n  \n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [menuRef]);\n\n  const toggleFindings = () => {\n    setShowFindings(!showFindings);\n  };\n\n  const toggleFindingButtons = () => {\n    setFindingButtonsVisible(!findingButtonsVisible);\n  };\n  \n  const handleBurgerMenuClick = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n    const { SERVER_URL, token } = useContext(MetaContext);\n\n    const loadQuestions = async () => {\n        const res = await axios.post(SERVER_URL + \"/interp/get_questions\", { token });\n        const exemplarQuestions = res.data.questions.filter((q: { exemplar: string; }) => q.exemplar === \"true\");\n        updateQuestions(exemplarQuestions);\n        updateSelectedQuestion(exemplarQuestions[0]);\n        updateSelectedFinding(exemplarQuestions[0].finding);\n        updateSelectedCategory(exemplarQuestions[0].category);\n      };\n      \n\n    \n    useEffect( () => { loadQuestions(); }, [])\n\n    const categories = Array(...new Set(questions.map(q => q.category)));\n\n    const changeSelection = (category: string, finding: string, idx: number) => {\n        updateSelectedCategory(category);\n        const filteredForCategory = questions.filter(q => q.category === category);\n\n        // no finding selected, set question to first in category\n        if (finding === \"\") {\n            updateSelectedFinding(filteredForCategory[0].finding);\n            updateSelectedQuestion(filteredForCategory[0]);\n            return;\n        }\n\n        // finding has been provided\n        updateSelectedFinding(finding);\n        const filteredForfinding = filteredForCategory.filter(q => q.finding === finding);\n\n        // no specific index selected\n        if (idx === -1) {\n            updateSelectedQuestion(filteredForfinding[0]);\n            return;\n        }\n\n        // valid idx has been selected\n        updateSelectedQuestion(filteredForfinding[idx]);\n    };\n\n    const handleStartButtonClick = () => {\n        setTopicSelectorDisplayed(true);\n      };\n\n      const lastSectionImage =\n  selectedQuestion &&\n  selectedQuestion.sections &&\n  selectedQuestion.sections.length > 0\n    ? selectedQuestion.sections[selectedQuestion.sections.length - 1].image\n    : \"\";\n\n\n      return (\n        <Container>\n          <BurgerMenu isOpen={menuOpen} onClick={handleBurgerMenuClick}>&#9776;</BurgerMenu>\n  <Overlay isOpen={menuOpen} onClick={handleBurgerMenuClick} />\n\n<DropdownContainer isOpen={menuOpen}>\n    \n  <div style={{ scale: \"95%\" }}>\n    <Link to=\"/DataInterpretation/TopicSelection\">\n      <Title onClick={() => props.updateCurrentQuestion(selectedQuestion)}>\n        <span>Question Bank</span>\n      </Title>\n    </Link>\n  </div>\n  <CategoryButton onClick={() => { toggleFindings(); toggleFindingButtons(); }}>\n    {selectedCategory} {findingButtonsVisible ? '▼' : '▶'}\n  </CategoryButton>\n  <div\n    className=\"finding-container\"\n    style={{\n      display: showFindings ? \"flex\" : \"none\",\n      flexWrap: \"wrap\",\n      marginBottom: \"20px\",\n      flexDirection: \"column\",\n    }}\n  >\n    <div className=\"finding-container\" style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"20px\", flexDirection: \"column\", }}>\n      {Array.from(\n        new Set(questions.filter((q) => q.category === selectedCategory).map((q) => q.finding))\n      ).map((finding) => (\n        <FindingButton\n          key={finding}\n          onClick={() => changeSelection(selectedCategory, finding, -1)}\n          selected={finding === selectedFinding}\n        >\n          {finding}\n        </FindingButton>\n      ))}\n    </div>\n  </div>\n</DropdownContainer>\n\n    <MainContent style={{display:\"flex\", flexDirection:\"column\", alignItems: \"space-between\", justifyItems:\"center\", }}>\n    \n    <MenuContainer> \n    <MobileMenu isOpen={menuOpen}>\n  <div style={{ background: \"\", padding: \"5%\" }}>\n    {Array.from(new Set(questions.map((q) => q.category))).map((category) => (\n      <li key={category}>\n        {Array.from(\n          new Set(questions.filter((q) => q.category === category).map((q) => q.finding)),\n        ).map((finding) => (\n          <li key={finding} style={{ listStyle: \"none\" }}>\n            <CategoryTitle> {finding} </CategoryTitle>\n            <ul style={{ listStyle: \"none\", paddingLeft: \"1rem\" }}>\n              {questions\n                .filter((q) => q.category === category && q.finding === finding)\n                .map((question, index) => (\n                  <li key={index} style={{ listStyle: \"none\", marginBottom: \"0.25rem\" }}>\n                    <MenuItem\n                      onClick={() => {\n                        props.updateCurrentQuestion(question);\n                        changeSelection(question.category, question.finding, index);\n                        handleBurgerMenuClick(); // Close the menu when a question is selected\n                      }}\n                      selected={question.title === selectedQuestion.title}\n                    >\n                      {question.title}\n                    </MenuItem>\n                  </li>\n                ))}\n            </ul>\n          </li>\n        ))}\n      </li>\n    ))}\n  </div>\n</MobileMenu>\n   \n    </MenuContainer>\n    \n    <div className=\"finding-container\" style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"0px\", marginTop:\"0px\", flexDirection: \"column\", justifyContent:\"center\", alignItems:\"center\",}}>\n   <SmallMenu>\n    <div className=\"finding-container\" style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"0px\", marginTop:\"0px\", flexDirection: \"row\", justifyContent:\"center\"}}>\n    <div style={{ scale: \"95%\" }}>\n    <Link to=\"/DataInterpretation/TopicSelection\">\n      <Title onClick={() => props.updateCurrentQuestion(selectedQuestion)}>\n        <span>Question Bank</span>\n      </Title>\n    </Link>\n  </div>\n    <CategoryButton onClick={() => { toggleFindings(); toggleFindingButtons(); }}>\n    {selectedCategory} {findingButtonsVisible ? '▼' : '▶'}\n  </CategoryButton>\n  <div\n    className=\"finding-container\"\n    style={{\n      display: showFindings ? \"flex\" : \"none\",\n      flexWrap: \"wrap\",\n      marginBottom: \"20px\",\n      flexDirection: \"column\",\n    }}\n  >\n     <div className=\"finding-container\" style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"0px\", marginTop:\"0px\", flexDirection: \"row\", justifyContent:\"center\"}}>\n      {Array.from(\n        new Set(questions.filter((q) => q.category === selectedCategory).map((q) => q.finding))\n      ).map((finding) => (\n        <FindingButton\n          key={finding}\n          onClick={() => changeSelection(selectedCategory, finding, -1)}\n          selected={finding === selectedFinding}\n        >\n          {finding}\n        </FindingButton>\n      ))}\n    </div>\n  </div>\n    </div>\n    </SmallMenu>\n      <div className=\"finding-container\" style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"20px\", marginTop:\"0px\", flexDirection: \"row\", justifyContent:\"center\"}}>\n      {questions\n                    .filter(\n                        (q) => q.category === selectedCategory && q.finding === selectedFinding\n                    )\n                    .map((q, i) => (\n                        <FindingOption\n                            onClick={() => changeSelection(q.category, q.finding, i)}\n                            selected={q.title === selectedQuestion.title}\n                        >\n                            {q.title}\n                        </FindingOption>\n                    ))}\n                    \n                          \n            </div>\n            </div>\n            \n\n            \n            <div style={{ display: \"flex\", width: \"100%\", justifyContent:\"center\" }}>\n              <QuestionSummary style={{ width: \"400px\", maxWidth: \"800px\",}}>\n                <Features style={{display: \"flex\", justifyContent: \"center\"}}> \n               {selectedQuestion.title}\n               </Features>\n                {/* image would be fetched from source in actual implementation */}\n                <Features style={{display: \"flex\", justifyContent: \"center\"}}> \n                \n                <StyledImage\n                src={selectedQuestion ? SERVER_URL + \"/media/interp/\" + selectedQuestion.image : \"\"}\n                hoverSrc={lastSectionImage ? SERVER_URL + \"/media/interp/\" + lastSectionImage : \"\"}\n                />\n                </Features>\n                <Features>\n                  {selectedQuestion.description}\n                </Features>\n              </QuestionSummary>\n              \n            </div>\n            \n            <div style={{display:\"flex\", justifyContent:\"center\"}}> \n            <Link to=\"/DataInterpretation/TopicSelection\">\n               \n    \n      <Title style={{}} onClick={() => props.updateCurrentQuestion(selectedQuestion)}>\n        <span>Spot Diagnosis Questions</span>\n      </Title>\n    \n  </Link>\n  </div>\n          </MainContent>\n          \n        </Container>\n      );\n};\n\nexport default QuestionSelector;\n\nconst SubcategoryTitle = styled.h3`\n  font-size: 1.25rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst BurgerMenu = styled.div<{ isOpen: boolean }>`\n  display: none;\n  padding: 10px;\n\n  @media (max-width: 768px) {\n    display: flex;\n  }\n`;\n\nconst SmallMenu = styled.div`\n  display: none;\n  padding: 10px;\n\n  @media (max-width: 768px) {\n    display: flex;\n  }\n`;\n\nconst MenuContainer = styled.div`\n  position: relative;\n`;\n\nconst Overlay = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 999;\n  display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\n  transition: all 0.3s ease;\n`;\n\n\nconst MobileMenu = styled.ul<{ isOpen: boolean }>`\ndisplay: none;\nposition: absolute;\ntop: 0;\nleft: ${(props) => (props.isOpen ? '0' : '-100%')};\nwidth: 300px;\nheight: 100%;\nmargin: 0;\npadding: 80px 0;\nlist-style: none;\nbackground-color: #eceff1;\nbox-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);\ntransition-duration: 0.25s;\nz-index: 1000;\n\n\n @media (max-width: 768px) {\n  display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\n  flex-direction: column;\n    gap: 10px;\n    list-style: none;\n    padding: 0;\n   }\n`;\n\nconst MenuItem = styled.button<{ selected: boolean }>`\n  background-color: ${(props) => (props.selected ? \"#042c54\" : \"transparent\")};\n  color: ${(props) => (props.selected ? \"white\" : \"#81AFDD\")};\n  margin: 5px;\n  padding: 5px 5px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid ${(props) => (props.selected ? \"#81AFDD\" : \"#042c54\")};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #042c54;\n    color: white;\n    border-color: #042c54;\n  }\n`;\n\n\nconst NavbarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  // ... (your other styles)\n`;\n\nconst ListItem = styled.div`\n  padding: 10px 20px;\n  cursor: pointer;\n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\n\nconst DropdownContainer = styled.div<{ isOpen: boolean }>`\n  display: flex;\n  flex-direction: column;\n  margin-right: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: row;\n    display: ${(props) => (props.isOpen ? \"none\" : \"none\")};\n  }\n`;\n\n\n\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Container = styled.div`\n    background-color: #031B34;\n    margin: 5%;\n    padding: 20px 10px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    height: 1000px;\n    \n    @media (max-width: 768px) {\n        flex-direction: column;\n        height: auto;\n        align-items: center;\n    }\n`;\n\nconst CategoryButton = styled.button`\n  display: block;\n  width: 100%;\n  margin: 10px 0;\n  padding: 10px;\n  font-size: 18px;\n  line-height: 1.5;\n  background-color: transparent;\n  color: #81afdd;\n  border: 0px solid #81afdd;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #042c54;\n    color: white;\n    border-color: #042c54;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\n\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    margin: 10px 0;\n    padding: 10px;\n    font-size: 18px;\n    line-height: 1.5;\n    background-color: transparent;\n    color: #81AFDD;\n    border: 0px solid #81AFDD;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    appearance: none;\n\n    &:hover {\n        background-color: #042c54;\n        color: white;\n        border-color: #042c54;\n    }\n\n    &.category-container,\n    &.finding-container {\n        display: flex;\n        flex-direction: column;\n        flex-wrap: wrap;\n        max-height: 600px;\n    }\n\n    @media (max-width: 768px) {\n        font-size: 16px; // Increase the font size\n        &.category-container,\n        &.finding-container {\n            max-height: none;\n            flex-wrap: nowrap;\n            overflow-y: visible; // Change overflow-y to visible\n        }\n    }\n`;\n\n\n\n\nconst FindingButton = styled.button<{ selected: boolean }>`\n  background-color: ${(props) => (props.selected ? \"#042c54\" : \"transparent\")};\n  color: ${(props) => (props.selected ? \"white\" : \"#81AFDD\")};\n  margin: 5px;\n  padding: 5px 5px;\n  font-size: 14px; \n  border-radius: 5px;\n  border: 1px solid ${(props) => (props.selected ? \"#81AFDD\" : \"#042c54\")};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #042c54;\n    color: white;\n    border-color: #042c54;\n  }\n`;\n\nconst TitleButton = styled.button<{ selected: boolean }>`\n  background-color: ${(props) => (props.selected ? \"#042c54\" : \"transparent\")};\n  color: ${(props) => (props.selected ? \"white\" : \"#81AFDD\")};\n  margin: 5px;\n  padding: 5px 5px;\n  font-size: 14px; \n  border-radius: 5px;\n  border: 1px solid ${(props) => (props.selected ? \"#81AFDD\" : \"#042c54\")};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #042c54;\n    color: white;\n    border-color: #042c54;\n  }\n`;\n\n\nconst FindingOption = styled.div<{ selected: boolean }>`\nbackground-color: ${(props) => (props.selected ? \"#042c54\" : \"transparent\")};\n  color: ${(props) => (props.selected ? \"white\" : \"#81AFDD\")};\n  margin: 5px;\n  padding: 5px 5px;\n  font-size: 16px; \n  border-radius: 5px;\n  border: 1px solid ${(props) => (props.selected ? \"#81AFDD\" : \"#042c54\")};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background-color: #042c54;\n    color: white;\n    border-color: #042c54;\n  }\n`;\n\nconst CategoryTitle = styled.div`\n    font-size: 20px;\n    margin: 5px;\n`;\n\nconst CategoryPanel = styled.div<{ selected: boolean }>`\n    text-align: center;\n    margin-bottom: 10px;\n    padding: 10px 5px;\n    border: 0.25px solid grey;\n    margin: 10px;\n    background-color: #040C18;\n`;\n\nconst QuestionSummary = styled.div`\n    text-align: center;\n    border: 5px solid #031B34;\n    margin: 10px;\n    font-size: 30px;\n    border-radius: 15px;\n    padding: 2%;\n    background: radial-gradient(circle at 3% 25%, rgba(0, 40, 83, 0.5) 5%, rgba(4, 12, 24, 0.5) 25%);\n    color-bg: #040C18;\n    @media (max-width: 768px) {\n        font-size: 16px;\n    }\n`;\n\nconst StyledImage = styled.img<CustomImgProps>`\n height: 300px;\n    \n    \n    @media (max-width: 768px) {\n        height: 200px;\n    }\n\n  &:hover {\n    content: url(${(props) => props.hoverSrc});\n  }\n`;\n\n\n\nconst Features = styled.div`\n    text-align: left;\n    background: rgba(4, 12, 24, 0.55);\n    color: #81AFDD;\n    border: 0.75px solid #042c54;\n    margin: 10px;\n    padding: 20px;\n    font-size: 18px;\n    @media (max-width: 768px) {\n        font-size: 16px;\n    }\n`;\n\nconst Title = styled.div`\ntext-align: center;\nbackground-color: #fad000;\ncolor: black;\ndisplay: block;\n    width: 100%;\n    margin: 10px 0;\n    padding: 10px;\n    font-size: 18px;\n    line-height: 1.5;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    appearance: none;\n\n    &:hover {\n        background-color: #FFFF;\n        color: white;\n        border-color: #042c54;\n    }\n\nspan {\n    color: black;\n    font-weight: bold;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 16px; // Increase the font size\n    &.category-container,\n    &.finding-container {\n        max-height: none;\n        flex-wrap: nowrap;\n        overflow-y: visible; // Change overflow-y to visible\n    }\n`;\n\n\n\nconst StartButton = styled.div`\ntext-align: center;\nmargin-bottom: 10px;\npadding: 10px 5px;\nborder: 0.25px solid grey;\nmargin: 10px;\nbackground-color: #040C18;\n`;\nfunction setTopicSelectorDisplayed(arg0: boolean) {\n    throw new Error(\"Function not implemented.\");\n}\n\n","import styled from \"styled-components\";\nimport { DataInterpQuestion } from \"./types\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport MetaContext from \"../../MetaContext\";\n\ntype AnswerPageProps = {\n    question: DataInterpQuestion;\n    handleUpdateQuestionsList: (completedQuestion: DataInterpQuestion) => void;\n};\n\n\nconst AnswerPage = (props: AnswerPageProps) => {\n    const [selectedPoint, updateSelectedPoint] = useState(0);\n    const section = props.question.sections[selectedPoint]\n\n    const { SERVER_URL, token } = useContext(MetaContext);\n    const history = useHistory();\n\n\n\n      \n      \n    \n    return (\n        <>\n            <Link to = \"/DataInterpretation\" >\n                <div style = {{ position: \"absolute\", top: 5, left: 10 }}><FaTimes /></div>\n            </Link>\n            <Container>\n                <Description>{props.question.description}</Description>\n                <Content>\n                    <div style = {{ width: \"40%\" }}>\n                        {props.question.sections.map((s, idx) => \n                            <Point selected = {idx == selectedPoint} onClick = {() => updateSelectedPoint(idx)}>\n                                {s.tab_label}\n                            </Point>)}\n                    </div>\n                    <div><Img src = {SERVER_URL + \"/media/interp/\" + section.image} /></div>\n                    \n                </Content>\n                <PointDetail>{section.descirption}</PointDetail>\n                <ShowAnswer\n                        onClick={() => {\n                             console.log(\"Next button clicked\");\n                            if (selectedPoint === props.question.sections.length - 1) {\n                                props.handleUpdateQuestionsList(props.question);\n                                history.push('/DataInterpretation/Question');\n                            } else {\n                                updateSelectedPoint(p => p + 1);\n                            }\n                        }}\n                    >\n                        Next\n            </ShowAnswer>\n\n\n            </Container>\n        </>\n    );\n};\n\nexport default AnswerPage;\n\nconst Container = styled.div`\n    text-align: center;\n    margin: 100px auto;\n    max-width: 800px;\n`\n\nconst Description = styled.div`\n    background-color: grey;\n    color: black;\n    border-radius: 2px;\n    padding: 10px;\n`\n\nconst Content = styled.div`\n    display: flex;\n    justify-content: space-around;\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px auto;\n    padding: 25px;\n    border-radius: 2px;\n`\n\nconst Point = styled.div<{selected: boolean}>`\n    background-color: ${props => props.selected ? \"#ffb000\" : \"grey\"};\n    color: ${props => props.selected ? \"black\" : \"white\"};\n    width: 100%;\n    margin: 10px 0px;\n    border-radius: 2px;\n    cursor: pointer;\n    font-size: 20px;\n`\n\nconst Img = styled.img`\n    width: 200px;\n`\n\nconst PointDetail = styled.div`\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px 0px;\n    padding: 25px;\n    border-radius: 2px;\n`\n\nconst ShowAnswer = styled.div`\n    background-color: #ffb000;\n    color: black;\n    border-radius: 2px;\n    padding: 10px;\n    font-size: 20px;\n    cursor: pointer;\n`\n","import axios from \"../../myaxios\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { DataInterpQuestion } from \"./types\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullQuestion } from \"./exampleQuestions\";\nimport { FaTimes } from \"react-icons/fa\";\n\n\nexport type TopicSelectorProps = {\n  updateCurrentQuestion: Dispatch<SetStateAction<DataInterpQuestion>>;\n  updateQuestions: Dispatch<SetStateAction<DataInterpQuestion[]>>;\n  setCurrentFinding: Dispatch<SetStateAction<string>>;\n};\n\n\nconst TopicSelectorPage = (props: TopicSelectorProps) => {\n    // these will be null in the actual implementatiuon\n    // initalised once questions are retrieved\n    const [questions, updateQuestions] = useState([ NullQuestion ]);\n    const [selectedQuestion, updateSelectedQuestion] = useState(NullQuestion);\n    const [selectedFinding, updateSelectedFinding] = useState<string | null>(\"\");\n    const [selectedCategory, updateSelectedCategory] = useState<string | null>(\"\");\n\n\n\n    const { SERVER_URL, token } = useContext(MetaContext);\n\n    const loadQuestions = async () => {\n  const res = await axios.post(SERVER_URL + \"/interp/get_questions\", { token });\n  const exemplarQuestions = res.data.questions.filter((q: { exemplar: string; category: string; finding: string }) => \n    (q.exemplar === \"true\" || q.exemplar === \"false\") &&\n    q.category !== \"ExcludedCategory\" &&\n    q.finding !== \"Basics\" &&\n    q.finding !== \"Irregular Rhythm\"\n  );\n\n  updateQuestions(exemplarQuestions);\n\n  // Set the initial selected category and finding\n  if (exemplarQuestions.length > 0) {\n    const firstCategory = exemplarQuestions[0].category;\n    const firstFinding = exemplarQuestions[0].finding;\n    updateSelectedCategory(firstCategory);\n    updateSelectedFinding(firstFinding);\n\n    // Uncheck the first radio button\n    const firstRadioButton = document.getElementById(firstFinding) as HTMLInputElement;\n    if (firstRadioButton) {\n      firstRadioButton.checked = false;\n    }\n  }\n};\n\n    \n      \n\n    \n    useEffect( () => { loadQuestions(); }, [])\n\n    const categories = Array(...new Set(questions.map(q => q.category)));\n\n    const changeSelection = (category: string, finding: string) => {\n      updateSelectedCategory(category);\n      console.log(\"Selected category:\", category); // Log the updated selected category\n    \n      const filteredForCategory = questions.filter(q => q.category === category);\n    \n      if (finding === \"\") {\n        updateSelectedFinding(filteredForCategory[0].finding);\n        console.log(\"Selected finding:\", filteredForCategory[0].finding); // Log the updated selected finding\n    \n        updateSelectedQuestion(filteredForCategory[0]);\n        console.log(\"Selected question:\", filteredForCategory[0]); // Log the updated selected question\n    \n        props.setCurrentFinding(filteredForCategory[0].finding); // Update the current finding using the prop\n        return;\n      }\n    \n      updateSelectedFinding(finding);\n      console.log(\"Selected finding:\", finding); // Log the updated selected finding\n    \n      const filteredForfinding = filteredForCategory.filter(q => q.finding === finding);\n    \n      // select a random question\n      const randomIndex = Math.floor(Math.random() * filteredForfinding.length);\n    \n      updateSelectedQuestion(filteredForfinding[randomIndex]);\n      console.log(\"Selected question:\", filteredForfinding[randomIndex]); // Log the updated selected question\n    \n      props.setCurrentFinding(finding); // Update the current finding using the prop\n      props.updateQuestions(filteredForfinding);\n    };\n    \n    \n    \n    \n    \n\n  \n  \n\n    const handleStartButtonClick = () => {\n        setTopicSelectorDisplayed(true);\n      };\n\n      return (\n        <> \n        \n        <Container>\n          <div >\n            <Fieldset>\n            <Link to = \"/DataInterpretation\" >\n                <div style = {{ position: \"relative\", top: 2, left: 185  }}><FaTimes /></div>\n            </Link>\n              <Legend>Choose a topic</Legend>\n              <RadioItemContainer >\n                {categories.map((c) => {\n                  const findings = Array(\n                    ...new Set(\n                      questions.filter((q) => q.category === c).map((q) => q.finding)\n                    )\n                  );\n      \n                  return (\n                    <div\n                      \n                    >\n                      {findings.map((f) => (\n                        <RadioItem>\n                          <RadioLabel htmlFor={f}>\n                      <RadioInput\n                          type=\"radio\"\n                          id={f}\n                          name=\"category\"\n                          value={f}\n                          checked={selectedCategory === c && selectedFinding === f && selectedCategory !== null && selectedFinding !== null}\n\n                          onChange={() => changeSelection(c, f)}\n                      />\n\n\n                            <RadioSpan>{f}</RadioSpan>\n                            <Icon></Icon>\n                          </RadioLabel>\n                        </RadioItem>\n                      ))}\n                    </div>\n                  );\n                })}\n              </RadioItemContainer>\n            </Fieldset>\n            <Link to=\"/DataInterpretation/Question\">\n              <Title onClick={() => props.updateCurrentQuestion(selectedQuestion)}>\n                <span>Start</span>\n              </Title>\n            </Link>\n          </div>\n        </Container>\n\n        </>\n      );\n      \n      \n};\n\nexport default TopicSelectorPage;\n\nconst Container = styled.div`\n    margin: 5%;\n    padding: 10px 10px;\n    display: flex;\n    flex-flow: column;\n    height: 1000px;\n    display: grid;\n    place-items: center;\n    user-select: none;\n`;\n\nconst FindingOption = styled.div<{ selected: boolean }>`\nmargin-bottom: 10px;\npadding: 10px 5px;\nborder: 0.25px solid grey;\nmargin: 10px;\nbackground-color: #fad000;\ncolor: black;\nmargin: 5%;\nbackground-color: ${props => (props.selected ? \"#fad000\" : \"transparent\")};\ncolor: ${props => (props.selected ? \"black\" : \"#81AFDD\")};\n    display: flex;\n    cursor: pointer;\n`;\n\nconst CategoryTitle = styled.div`\n    font-size: 20px;\n    margin: 5px;\n`;\n\nconst CategoryPanel = styled.div<{ selected: boolean }>`\n\n`;\n\nconst QuestionSummary = styled.div`\n    text-align: center;\n    border: 5px solid #031B34;\n    margin: 10px;\n    font-size: 20px;\n    padding: 2%;\n`;\n\nconst Img = styled.img`\n    height: 300px;\n`;\n\nconst Features = styled.div`\n    text-align: left;\n    border: 0.25px solid grey;\n    margin: 10px;\n    padding: 20px;\n`;\n\nconst Content = styled.div`\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px 0px;\n    padding: 25px;\n    border-radius: 2px;`;\n\nconst Title = styled.div`\ntext-align: center;\nmargin-bottom: 10px;\npadding: 10px 5px;\nborder: 0.25px solid grey;\nmargin: 10px;\nbackground-color: #fad000;\ncolor: black;\nmargin: 5%;\nborder-radius: 5px;\nspan {\n    color: black;\n    font-weight: bold;\n  }\n`;\n\n\n\nconst StartButton = styled.div`\ntext-align: center;\nmargin-bottom: 10px;\npadding: 10px 5px;\nborder: 0.25px solid grey;\nmargin: 10px;\nbackground-color: #040C18;\n`;\nfunction setTopicSelectorDisplayed(arg0: boolean) {\n    throw new Error(\"Function not implemented.\");\n}\n\n\n\nconst Fieldset = styled.fieldset`\n  padding: 0;\n  margin: 0;\n  border: 0;\n  max-width: 340px;\n  border-radius: 20px;\n  width: 100%;\n`;\n\nconst Legend = styled.legend`\n  font-size: 22px;\n  font-weight: 600;\n  color: #191919;\n  margin: 0;\n  background: #edf4fe;\n  width: 100%;\n  padding: 20px;\n  box-sizing: border-box;\n  border-radius: 10px 10px 0 0;\n  border: 2px solid #3a88f6;\n  display: flex;\n`;\n\nconst RadioItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 2px solid #3a88f6;\n  border-top: 0;\n  background: #042c54;\n  border-radius: 0 0 10px 10px;\n  padding: 10px 0;\n`;\n\nconst RadioItem = styled.div`\n  display: flex;\n  position: relative;\n  align-items: center;\n`;\n\nconst RadioLabel = styled.label`\n  font-weight: 300;\n  font-size: 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  flex: 1;\n  box-sizing: border-box;\n  display: flex;\n  padding: 20px 20px 20px 50px;\n  font-weight: 500;\n  color: #FFFF;\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst RadioInput = styled.input.attrs({ type: \"radio\" })`\n  position: absolute;\n  appearance: none;\n  -webkit-appearance: none;\n  transition: linear 0.8s;\n  height: 0;\n  width: 0;\n  -webkit-tap-highlight-color: transparent;\n  left: 20px;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    height: 16px;\n    width: 16px;\n    top: 50%;\n    left: 0;\n    border-radius: 20px;\n    border: 2px solid #3a88f6;\n    transition: linear 0.2s;\n    cursor: pointer;\n    transform: translateY(-50%);\n  }\n\n  &:checked:after {\n    content: \"\";\n    position: absolute;\n    height: 16px;\n    width: 16px;\n    background: #3a88f6;\n    transition: linear 0.2s;\n    cursor: pointer;\n    transform: translateY(-50%);\n  }\n\n  &:checked:before {\n    content: \"\";\n    position: absolute;\n    height: 8px;\n    width: 8px;\n    border-radius: 4px;\n    background: #fff;\n    left: 4px;\n    top: 50%;\n    z-index: 1;\n    cursor: pointer;\n    transform: translateY(-50%);\n  }\n`;\n\n\nconst RadioSpan = styled.span`\n  // Add any necessary CSS styles for the span\n`;\n\nconst Icon = styled.span`\n  font-size: 24px;\n  position: absolute;\n  right: 26px;\n  top: 11px;\n  transition: linear 0.3s;\n\n  ${RadioInput}:checked + ${RadioSpan} > & {\n    transform: scale(1.7);\n  }\n`;\n","import Navigator from \"../Navigator\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TaskPage from \"./TaskPage\";\nimport QuestionSelector from \"./QuestionSelector\";\nimport { SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { NullQuestion } from \"./exampleQuestions\";\nimport AnswerPage from \"./AnswerPage\";\nimport TopicSelectionPage from \"./TopicsSelectorPage\";\nimport TopicSelectorPage from \"./TopicsSelectorPage\";\nimport { DataInterpQuestion } from \"./types\";\nimport MetaContext from \"../../MetaContext\";\nimport axios from \"axios\";\n\nconst DataInterpPage = (props: {}) => {\n    const [currentQuestion, updateCurrentQuestion] = useState(NullQuestion);\n    const [questions, updateQuestions] = useState<DataInterpQuestion[]>([]);\n    const { SERVER_URL, token } = useContext(MetaContext);\n    const [currentFinding, setCurrentFinding] = useState('');\n\n\n  \n    // Fetch questions\n    const loadQuestions = async () => {\n      const res = await axios.post(SERVER_URL + \"/interp/get_questions\", { token });\n      // ... rest of the loadQuestions function\n    };\n  \n    useEffect(() => {\n      loadQuestions();\n    }, []);\n\n  \n    const handleUpdateQuestionsList = (completedQuestion: DataInterpQuestion) => {\n        console.log(\"handleUpdateQuestionsList called\");\n        console.log(\"completedQuestion:\", completedQuestion);\n    \n        if (!completedQuestion) {\n            console.error(\"Completed question is undefined\");\n            return;\n        }\n\n         // Filter the questions by finding, excluding the current question\n            const filteredQuestionsByFinding = questions.filter(\n            (question) =>\n            question.finding === currentFinding && question.id !== completedQuestion.id\n        );\n    \n        const updatedQuestionsList = questions.filter(\n            (question) => question.id !== completedQuestion.id\n        );\n    \n        // Update the questions list\n        updateQuestions(updatedQuestionsList);\n        console.log(\"Updated questions list:\", updatedQuestionsList); // Log the updated questions list\n    \n        // Choose another random question\n        const randomIndex = Math.floor(Math.random() * updatedQuestionsList.length);\n        const newSelectedQuestion = updatedQuestionsList[randomIndex];\n    \n        // Update the current question\n        updateCurrentQuestion(newSelectedQuestion);\n        console.log(\"Next question:\", newSelectedQuestion); // Log the next question after fetching it\n    };\n    \n    \n      \n\n    return (\n        <>\n            <Switch>\n                <Route exact path = \"/DataInterpretation\">\n                    <Navigator selection={ \"Data Interpretation\" } />\n                    <QuestionSelector updateCurrentQuestion={updateCurrentQuestion} />\n                </Route>\n\n                <Route path=\"/DataInterpretation/TopicSelection\">\n                <TopicSelectorPage\n                updateCurrentQuestion={updateCurrentQuestion}\n                updateQuestions={updateQuestions}\n                setCurrentFinding={setCurrentFinding}\n                />\n                </Route>\n\n\n                <Route path=\"/DataInterpretation/Question\">\n                    <TaskPage \n                    question = {currentQuestion}/>\n                </Route>\n\n                <Route path=\"/DataInterpretation/Answer\">\n                <AnswerPage\n                    question={currentQuestion}\n                    handleUpdateQuestionsList={handleUpdateQuestionsList}\n                />\n                </Route>\n            </Switch>\n        </>\n    );\n};\n\nexport default DataInterpPage;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useToken, useWindowSize } from \"./functions\";\nimport { useState } from \"react\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { createBrowserHistory } from \"history\";\nimport styled from \"styled-components\";\nimport MetaContext from \"./MetaContext\";\nimport OSCEPage from \"./components/OSCEPage/OSCEPage\";\nimport ExpiryLoginPage from \"./components/ExpiryLoginPage/ExpiryLoginPage\";\nimport SubscribePage from \"./components/SubscribePage/SubscribePage\";\nimport UserPage from \"./components/UserPage/UserPage\";\nimport Data from \"./components/Data Interp/Data\";\nimport DataInterpPage from \"./components/DataInterpPage/DataInterpPage\";\n\nconst App = () => {\n    const { token, setToken } = useToken();\n    const [darkMode, setDarkMode] = useState(true); //initialise darkMode\n    const [w, _] = useWindowSize();\n\n    const narrowWindow = w < 650;\n\n    // if we're on local host (development) then change url accordingly\n    let SERVER_URL = \"\";\n    let CLIENT_URL = \"\";\n\n    if (window.location.href.startsWith(\"http://localhost:3000/\")) {\n        SERVER_URL = \"http://localhost:3001\";\n        CLIENT_URL = \"http://localhost:3000\";\n    }\n\n    if (window.location.href.startsWith(\"https://medbakery.co.uk\")) {\n        SERVER_URL = \"https://medbakery.co.uk\";\n        CLIENT_URL = \"https://medbakery.co.uk\";\n    }\n\n    const history = createBrowserHistory();\n\n    let prevPath: any = null;\n\n    // listen and notify Segment of client-side page updates\n    history.listen(location => {\n        if (location.pathname !== prevPath) {\n            prevPath = location.pathname;\n            window.analytics.page();\n        }\n    });\n\n    return (\n        <Container darkMode={darkMode}>\n            <Router>\n                <Switch>\n                    <MetaContext.Provider\n                        value={{ darkMode, SERVER_URL, CLIENT_URL, token, setToken, narrowWindow }}\n                    >\n                        <Route exact path=\"/\">\n                            <HomePage />\n                        </Route>\n\n                        <Route exact path=\"/User\">\n                            <UserPage />\n                        </Route>\n\n                        <Route path=\"/OSCE\">\n                            <OSCEPage />\n                        </Route>\n\n                        <Route path=\"/DataInterpretation\">\n                            <DataInterpPage />\n                        </Route>\n\n                        <Route path=\"/Subscribe\">\n                            <SubscribePage />\n                        </Route>\n\n                        <Route path=\"/ExpiryLogin\">\n                            <ExpiryLoginPage />\n                        </Route>\n                    </MetaContext.Provider>\n                </Switch>\n            </Router>\n        </Container>\n    );\n};\n\nexport default App;\n\nconst Container = styled.div<{ darkMode: boolean }>`\n    color: ${props => (props.darkMode ? \"white\" : \"black\")};\n    fill: ${props => (props.darkMode ? \"#0072CE\" : \"#C02222\")};\n    font-family: Proxima;\n`;\n\nconst Background = styled.div<{ darkMode: boolean; backlogodark: string; backlogolight: string }>`\n    background-color: ${props => (props.darkMode ? \"#272727\" : \"#ffffff\")};\n    background-image: url(${props => (props.darkMode ? props.backlogodark : props.backlogolight)});\n    background-size: 9%;\n    background-attachment: fixed;\n    position: fixed;\n    filter: blur(0px);\n    color: ${props => (props.darkMode ? \"white\" : \"black\")};\n    fill: ${props => (props.darkMode ? \"#0072CE\" : \"#C02222\")};\n    font-family: Proxima;\n    height: 100vh;\n    width: 100%;\n    z-index: -1;\n`;\n","import 'bootstrap/scss/bootstrap.scss';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\ndeclare global {\n  interface Window { analytics: any; }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import { MasterCategory } from \"./types\";\nimport { useState, useLayoutEffect } from \"react\";\nimport { OAuth2Client } from \"google-auth-library\";\nimport { Station } from \"./components/OSCEPage/types\";\nimport { GoogleLoginResponse } from \"react-google-login\";\n\nexport const updateCategory = (\n    root: MasterCategory,\n    path: string[],\n    value: boolean\n): MasterCategory => {\n    if (path.length === 0) {\n        return {\n            ...root,\n            selected: value,\n            subcategories: root.subcategories.map(falsifyCategorySelection),\n        };\n    }\n\n    const nextCategoryIdx = root.subcategories.findIndex(sc => sc.categoryTitle === path[0])!;\n\n    return {\n        ...root,\n        selected: false,\n        subcategories: root.subcategories.map((sc, idx) =>\n            idx === nextCategoryIdx ? updateCategory(sc, path.slice(1), value) : sc\n        ),\n    };\n};\n\nexport const falsifyCategorySelection = (category: MasterCategory): MasterCategory => {\n    return {\n        ...category,\n        selected: false,\n        subcategories: category.subcategories.map(falsifyCategorySelection),\n    };\n};\n\nexport const getAllPaths = (root: MasterCategory): string[][] => {\n    if (root.subcategories.length === 0) return [[root.categoryTitle]];\n\n    return root.subcategories.reduce((categoryList, category) => {\n        return categoryList.concat(getAllPaths(category).map(p => [root.categoryTitle].concat(p)));\n    }, [] as string[][]);\n};\n\nexport const getPaths = (root: MasterCategory): string[][] => {\n    if (root.selected) return getAllPaths(root);\n\n    if (root.subcategories.length === 0) return root.selected ? [[root.categoryTitle]] : [];\n\n    return root.subcategories.reduce((categoryList, category) => {\n        return categoryList.concat(getPaths(category).map(p => [root.categoryTitle].concat(p)));\n    }, [] as string[][]);\n};\n\nexport const useToken = () => {\n    const getToken = () => {\n        const token = sessionStorage.getItem(\"token\");\n        return token ? token : \"\";\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken: (userToken: string) => void = userToken => {\n        sessionStorage.setItem(\"token\", userToken);\n        setToken(userToken);\n    };\n\n    return { token, setToken: saveToken };\n};\n\n// --------------------------------------------------------------------------------------\n\nexport const handleLogOut = (setToken: (userToken: string) => void) => {\n    setToken(\"\");\n    window.location.href = \"/\";\n};\n\nexport const getEmailFromToken = async (tokenId: string) => {\n    const client = new OAuth2Client(process.env.GOOGlE_CLIENT_ID);\n    const ticket = await client\n        .verifyIdToken({\n            idToken: tokenId,\n            audience: process.env.GOOGlE_CLIENT_ID,\n        })\n        .catch(console.log);\n\n    if (!ticket) return \"\";\n\n    return ticket!.getPayload()!.email;\n};\n\nexport const useWindowSize = () => {\n    const [size, setSize] = useState([window.innerWidth, 0]);\n\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n\n        window.addEventListener(\"resize\", updateSize);\n        updateSize();\n\n        return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n\n    return size;\n};\n\n// remember this, this is how we store tings in mongodb\nconst binaryToBlobUrl = (byteArray: Uint8Array, mimetype: string) => {\n    // console.log(\"barrya\", new Uint8Array(Object.values(byteArray)));\n    const blob = new Blob([new Uint8Array(Object.values(byteArray))], { type: mimetype });\n    return window.URL.createObjectURL(blob);\n};\n\n// const convertBlobsToLinks = (stn: Station<Uint8Array>): Station => {\n//     return {\n//         ...stn,\n//         questions: stn.questions.map(q => ({\n//             ...q,\n//             questionAudio: binaryToBlobUrl(q.questionAudio, \"audio/mpeg\"),\n//             exemplarAudio: binaryToBlobUrl(q.exemplarAudio, \"image/jpeg\"),\n//             img: binaryToBlobUrl(q.img, \"audio/mpeg\"),\n//             responseAudio: \"\",\n//         })),\n//     };\n// };\n\nexport const produceHeat = (n: number) => {\n    console.time(\"producing heat\");\n    let result = 0;\n    for (var i = Math.pow(n, 7); i >= 0; i--) {\n        result += Math.atan(i) * Math.tan(i);\n    }\n    console.timeEnd(\"producing heat\");\n};\n"],"sourceRoot":""}