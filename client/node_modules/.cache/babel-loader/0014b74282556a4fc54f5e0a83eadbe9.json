{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport AlphaHeader from \"./AlphaHeader\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar StationPage = function StationPage(props) {\n  _s();\n\n  var location = useLocation();\n  console.log(location.pathname);\n  var pageDetails = {\n    Brief: {\n      title: \"Brief\",\n      percentage: 5,\n      briefButton: false,\n      exitButton: false,\n      timer: -1\n    },\n    Question: {\n      title: \"Station One\",\n      percentage: 5,\n      briefButton: false,\n      exitButton: false,\n      timer: -1\n    }\n  };\n  if (props.station.id === \"NullStation\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/OSCE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 52\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AlphaHeader, {\n      station: props.station,\n      updateStation: props.updateStation,\n      timedHeader: true,\n      percentage: 50,\n      briefPrompt: \"\",\n      title: \"station\",\n      handleExit: props.handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/OSCE/Station\",\n        children: /*#__PURE__*/_jsxDEV(Brief, {\n          station: props.station,\n          updateStation: props.updateStation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this), props.station.questions.map(function (_, questionIdx) {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/OSCE/Station/\" + questionIdx,\n          children: function children(_ref) {\n            var match = _ref.match;\n            return /*#__PURE__*/_jsxDEV(QuestionPage, {\n              station: props.station,\n              updateStation: props.updateStation,\n              questionIdx: questionIdx,\n              handleExit: props.handleExit,\n              match: match !== null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, _this);\n          }\n        }, questionIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/OSCE/Station/Summary\",\n        children: /*#__PURE__*/_jsxDEV(Summary, {\n          station: props.station,\n          updateStation: props.updateStation,\n          handleExit: props.handleExit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this), props.station.questions.map(function (_, questionIdx) {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/OSCE/Station/Review\" + questionIdx,\n          children: /*#__PURE__*/_jsxDEV(QuestionReviewPage, {\n            station: props.station,\n            updateStation: props.updateStation,\n            questionIdx: questionIdx,\n            handleExit: props.handleExit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, _this)\n        }, props.station.questions[questionIdx].question, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/OSCE/Station/MarkReview\",\n        children: /*#__PURE__*/_jsxDEV(MarkReviewPage, {\n          station: props.station,\n          updateStation: props.updateStation,\n          reviewMode: props.reviewMode,\n          handleExit: props.handleExit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(StationPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = StationPage;\nexport default StationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx"],"names":["Redirect","Route","Switch","useLocation","AlphaHeader","Brief","MarkReviewPage","QuestionPage","QuestionReviewPage","Summary","StationPage","props","location","console","log","pathname","pageDetails","title","percentage","briefButton","exitButton","timer","Question","station","id","updateStation","handleExit","questions","map","_","questionIdx","match","question","reviewMode"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport AlphaHeader from \"./AlphaHeader\";\nimport Brief from \"./Brief\";\nimport Header from \"./Header\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { AnsweredStationDetails, Question, Station } from \"./types\";\n\ntype StationPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    answeredStations: AnsweredStationDetails[];\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst StationPage = (props: StationPageProps) => {\n    const location = useLocation();\n\n    console.log(location.pathname);\n\n    const pageDetails = {\n        Brief: { title: \"Brief\", percentage: 5, briefButton: false, exitButton: false, timer: -1 },\n        Question: {\n            title: \"Station One\",\n            percentage: 5,\n            briefButton: false,\n            exitButton: false,\n            timer: -1,\n        },\n    };\n\n    if (props.station.id === \"NullStation\") return <Redirect to=\"/OSCE\" />;\n\n    return (\n        <>\n            <AlphaHeader\n                station={props.station}\n                updateStation={props.updateStation}\n                timedHeader={true}\n                percentage={50}\n                briefPrompt={\"\"}\n                title=\"station\"\n                handleExit={props.handleExit}\n            />\n\n            <Switch>\n                <Route exact path=\"/OSCE/Station\">\n                    <Brief station={props.station} updateStation={props.updateStation} />\n                </Route>\n\n                {props.station.questions.map((_, questionIdx) => (\n                    <Route path={\"/OSCE/Station/\" + questionIdx} key={questionIdx}>\n                        {({ match }) => (\n                            <QuestionPage\n                                station={props.station}\n                                updateStation={props.updateStation}\n                                questionIdx={questionIdx}\n                                handleExit={props.handleExit}\n                                match={match !== null}\n                            />\n                        )}\n                    </Route>\n                ))}\n\n                <Route path=\"/OSCE/Station/Summary\">\n                    <Summary\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                {props.station.questions.map((_, questionIdx) => (\n                    <Route\n                        path={\"/OSCE/Station/Review\" + questionIdx}\n                        key={props.station.questions[questionIdx].question}\n                    >\n                        <QuestionReviewPage\n                            station={props.station}\n                            updateStation={props.updateStation}\n                            questionIdx={questionIdx}\n                            handleExit={props.handleExit}\n                        />\n                    </Route>\n                ))}\n\n                <Route path=\"/OSCE/Station/MarkReview\">\n                    <MarkReviewPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n            </Switch>\n        </>\n    );\n};\n\nexport default StationPage;\n"]},"metadata":{},"sourceType":"module"}