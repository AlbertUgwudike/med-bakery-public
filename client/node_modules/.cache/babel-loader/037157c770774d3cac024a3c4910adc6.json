{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useLayoutEffect } from \"react\";\nimport { OAuth2Client } from 'google-auth-library';\nexport const updateCategory = (root, path, value) => {\n  if (path.length === 0) {\n    return { ...root,\n      selected: value,\n      subcategories: root.subcategories.map(falsifyCategorySelection)\n    };\n  }\n\n  const nextCategoryIdx = root.subcategories.findIndex(sc => sc.categoryTitle === path[0]);\n  return { ...root,\n    selected: false,\n    subcategories: root.subcategories.map((sc, idx) => idx === nextCategoryIdx ? updateCategory(sc, path.slice(1), value) : sc)\n  };\n};\nexport const falsifyCategorySelection = category => {\n  return { ...category,\n    selected: false,\n    subcategories: category.subcategories.map(falsifyCategorySelection)\n  };\n};\nexport const getAllPaths = root => {\n  if (root.subcategories.length === 0) return [[root.categoryTitle]];\n  return root.subcategories.reduce((categoryList, category) => {\n    return categoryList.concat(getAllPaths(category).map(p => [root.categoryTitle].concat(p)));\n  }, []);\n};\nexport const getPaths = root => {\n  if (root.selected) return getAllPaths(root);\n  if (root.subcategories.length === 0) return root.selected ? [[root.categoryTitle]] : [];\n  return root.subcategories.reduce((categoryList, category) => {\n    return categoryList.concat(getPaths(category).map(p => [root.categoryTitle].concat(p)));\n  }, []);\n};\nexport const useToken = () => {\n  _s();\n\n  const getToken = () => {\n    const token = sessionStorage.getItem('token');\n    return token ? token : \"\";\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    sessionStorage.setItem('token', userToken);\n    setToken(userToken);\n  };\n\n  return {\n    token,\n    setToken: saveToken\n  };\n}; // --------------------------------------------------------------------------------------\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");\n\nexport const handleLogOut = setToken => {\n  setToken(\"\");\n  window.location.href = '/';\n};\nexport const refreshTokenSetup = (res, setToken) => {\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponse();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    setTimeout(refreshToken, refreshTiming);\n  };\n\n  setTimeout(refreshToken, refreshTiming);\n};\nexport const getEmailFromToken = async tokenId => {\n  const client = new OAuth2Client(process.env.GOOGlE_CLIENT_ID);\n  const ticket = await client.verifyIdToken({\n    idToken: tokenId,\n    audience: process.env.GOOGlE_CLIENT_ID\n  }).catch(console.log);\n  if (!ticket) return \"\";\n  const {\n    email\n  } = ticket.getPayload();\n  return ticket.getPayload().email;\n};\nexport const useWindowSize = () => {\n  _s2();\n\n  const [size, setSize] = useState([window.innerWidth, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n\n_s2(useWindowSize, \"v1jSzRwFuyLn1xxeBGMr8nW44N4=\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/functions.tsx"],"names":["useState","useLayoutEffect","OAuth2Client","updateCategory","root","path","value","length","selected","subcategories","map","falsifyCategorySelection","nextCategoryIdx","findIndex","sc","categoryTitle","idx","slice","category","getAllPaths","reduce","categoryList","concat","p","getPaths","useToken","getToken","token","sessionStorage","getItem","setToken","saveToken","userToken","setItem","handleLogOut","window","location","href","refreshTokenSetup","res","refreshTiming","tokenObj","expires_in","refreshToken","newAuthRes","reloadAuthResponse","setTimeout","getEmailFromToken","tokenId","client","process","env","GOOGlE_CLIENT_ID","ticket","verifyIdToken","idToken","audience","catch","console","log","email","getPayload","useWindowSize","size","setSize","innerWidth","updateSize","innerHeight","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { MasterCategory } from \"./types\";\nimport { useState, useLayoutEffect } from \"react\";\nimport { OAuth2Client } from 'google-auth-library';\n\nexport const updateCategory = (root: MasterCategory, path: string[], value: boolean): MasterCategory => {\n    if (path.length === 0) {\n        return {  ...root, selected: value, subcategories: root.subcategories.map(falsifyCategorySelection) }\n    }\n\n    const nextCategoryIdx = root.subcategories.findIndex(sc => sc.categoryTitle === path[0])!;\n\n    return {\n        ...root,\n        selected: false,\n        subcategories: root.subcategories.map((sc, idx) => idx === nextCategoryIdx ? updateCategory(sc, path.slice(1), value) : sc)\n    }\n}\n\nexport const falsifyCategorySelection = (category: MasterCategory): MasterCategory => {\n    return {\n        ...category,\n        selected: false,\n        subcategories: category.subcategories.map(falsifyCategorySelection)\n    }\n}\n\nexport const getAllPaths = (root: MasterCategory): string[][] => {\n    if (root.subcategories.length === 0) return [[root.categoryTitle]];\n\n    return root.subcategories.reduce( (categoryList, category) => {\n        return categoryList.concat(getAllPaths(category).map(p => [root.categoryTitle].concat(p)))\n    }, [] as string[][] )\n}\n\nexport const getPaths = (root: MasterCategory): string[][] => {\n    if (root.selected) return getAllPaths(root);\n\n    if (root.subcategories.length === 0) return root.selected ? [[root.categoryTitle]] : [];\n\n    return root.subcategories.reduce( (categoryList, category) => {\n        return categoryList.concat(getPaths(category).map(p => [root.categoryTitle].concat(p)))\n    }, [] as string[][] )\n\n}\n\nexport const useToken = () => {\n    const getToken = () => {\n        const token = sessionStorage.getItem('token');\n        return token ? token : \"\";\n    }\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken: (userToken: string) => void = userToken => {\n        sessionStorage.setItem('token', userToken);\n        setToken(userToken);\n    };\n\n    return { token, setToken: saveToken }\n}\n\n// --------------------------------------------------------------------------------------\n\nexport const handleLogOut = (setToken: (userToken: string) => void) => {\n    setToken(\"\");\n    window.location.href = '/';\n}\n\nexport const refreshTokenSetup = (res: any, setToken: (userToken: string) => void) => {\n    let refreshTiming = (res.tokenObj.expires_in || 3600  - 5 * 60) * 1000;\n\n    const refreshToken = async () => {\n        const newAuthRes = await res.reloadAuthResponse();\n        refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n        setTimeout(refreshToken, refreshTiming);\n    }\n\n    setTimeout(refreshToken, refreshTiming);\n}\n\nexport const getEmailFromToken = async (tokenId: string) => {\n    const client = new OAuth2Client(process.env.GOOGlE_CLIENT_ID);\n    const ticket = await client.verifyIdToken({\n        idToken: tokenId,\n        audience: process.env.GOOGlE_CLIENT_ID\n    }).catch(console.log);\n\n    if (!ticket) return \"\";\n\n    const { email } = ticket!.getPayload()!;\n\n    return ticket!.getPayload()!.email;\n}\n\n\nexport const useWindowSize = () => {\n    const [size, setSize] = useState([window.innerWidth, 0]);\n\n    useLayoutEffect(() => {\n\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n\n        window.addEventListener('resize', updateSize);\n        updateSize();\n\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    return size;\n}"]},"metadata":{},"sourceType":"module"}