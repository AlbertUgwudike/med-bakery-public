{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport { Box } from \"../Common\";\nimport { generateWaveSurfer } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TaskSection = function TaskSection(props) {\n  _s();\n\n  useEffect(function () {\n    var container = document.getElementById(\"waveform\" + props.questionIdx);\n    if (container) container.innerHTML = \"\";\n    props.updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        responseWaveSurfer: generateWaveSurfer(\"waveform\" + props.questionIdx, props.responseAudio)\n      });\n    });\n  }, [props.responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: !props.responseAudio ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        onClick: props.playing ? props.stopEverything : props.playResponse,\n        style: {\n          margin: \"10px 0\",\n          width: \"10%\",\n          backgroundColor: \"#242528\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          margin: \"10px 0\",\n          width: \"87%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"waveform\" + props.questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        onClick: props.playing ? props.stopEverything : props.playResponse,\n        style: {\n          margin: \"10px 0\",\n          width: \"10%\"\n        },\n        children: props.playing ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, _this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 56\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          margin: \"10px 0\",\n          width: \"87%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"waveform\" + props.questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskSection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TaskSection;\nexport default TaskSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSection\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx"],"names":["useEffect","FaPause","FaPlay","Box","generateWaveSurfer","TaskSection","props","container","document","getElementById","questionIdx","innerHTML","updateAudioState","as","responseWaveSurfer","responseAudio","display","justifyContent","playing","stopEverything","playResponse","margin","width","backgroundColor"],"mappings":";;;;;;AAAA,SAAmCA,SAAnC,QAAoD,OAApD;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAA0C,gBAA1C;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,kBAAT,QAAmC,UAAnC;;;;AAYA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAAA;;AAC7CN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMO,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAaH,KAAK,CAACI,WAA3C,CAAlB;AACA,QAAIH,SAAJ,EAAeA,SAAS,CAACI,SAAV,GAAsB,EAAtB;AAEfL,IAAAA,KAAK,CAACM,gBAAN,CAAuB,UAAAC,EAAE;AAAA,6CAClBA,EADkB;AAErBC,QAAAA,kBAAkB,EAAEV,kBAAkB,CAClC,aAAaE,KAAK,CAACI,WADe,EAElCJ,KAAK,CAACS,aAF4B;AAFjB;AAAA,KAAzB;AAOH,GAXQ,EAWN,CAACT,KAAK,CAACS,aAAP,CAXM,CAAT;AAaA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,cACK,CAACX,KAAK,CAACS,aAAP,gBACG;AAAA,8BACI,QAAC,GAAD;AACI,QAAA,OAAO,EAAET,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACa,cAAtB,GAAuCb,KAAK,CAACc,YAD1D;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE,KAA3B;AAAkCC,UAAAA,eAAe,EAAE;AAAnD;AAFX;AAAA;AAAA;AAAA;AAAA,eADJ,eAKI,QAAC,GAAD;AACI,QAAA,KAAK,EAAE;AACHF,UAAAA,MAAM,EAAE,QADL;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SADX;AAAA,+BAMI;AAAK,UAAA,EAAE,EAAE,aAAahB,KAAK,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,eALJ;AAAA,oBADH,gBAgBG;AAAA,8BACI,QAAC,GAAD;AACI,QAAA,OAAO,EAAEJ,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACa,cAAtB,GAAuCb,KAAK,CAACc,YAD1D;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAFX;AAAA,kBAIKhB,KAAK,CAACY,OAAN,gBAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,iBAAhB,gBAA8B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJnC;AAAA;AAAA;AAAA;AAAA,eADJ,eAOI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAAZ;AAAA,+BACI;AAAK,UAAA,EAAE,EAAE,aAAahB,KAAK,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAPJ;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,WADJ;AAgCH,CA9CD;;GAAML,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import { Dispatch, SetStateAction, useEffect } from \"react\";\nimport { FaPause, FaPlay, FaSquare } from \"react-icons/fa\";\nimport { Box } from \"../Common\";\nimport { generateWaveSurfer } from \"../hooks\";\nimport { AudioState } from \"./QuestionContent\";\n\ntype TaskSectionProps = {\n    playing: boolean;\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    updateAudioState: Dispatch<SetStateAction<AudioState>>;\n    questionIdx: number;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    useEffect(() => {\n        const container = document.getElementById(\"waveform\" + props.questionIdx);\n        if (container) container.innerHTML = \"\";\n\n        props.updateAudioState(as => ({\n            ...as,\n            responseWaveSurfer: generateWaveSurfer(\n                \"waveform\" + props.questionIdx,\n                props.responseAudio\n            ),\n        }));\n    }, [props.responseAudio]);\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {!props.responseAudio ? (\n                <>\n                    <Box\n                        onClick={props.playing ? props.stopEverything : props.playResponse}\n                        style={{ margin: \"10px 0\", width: \"10%\", backgroundColor: \"#242528\" }}\n                    ></Box>\n                    <Box\n                        style={{\n                            margin: \"10px 0\",\n                            width: \"87%\",\n                        }}\n                    >\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Box>\n                </>\n            ) : (\n                <>\n                    <Box\n                        onClick={props.playing ? props.stopEverything : props.playResponse}\n                        style={{ margin: \"10px 0\", width: \"10%\" }}\n                    >\n                        {props.playing ? <FaPause /> : <FaPlay />}\n                    </Box>\n                    <Box style={{ margin: \"10px 0\", width: \"87%\" }}>\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Box>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n"]},"metadata":{},"sourceType":"module"}