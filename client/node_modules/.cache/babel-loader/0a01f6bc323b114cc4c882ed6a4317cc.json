{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/AnswerPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7;\n\nimport styled from \"styled-components\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AnswerPage = function AnswerPage(props) {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedPoint = _useState2[0],\n      updateSelectedPoint = _useState2[1];\n\n  console.log(props.question);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Description, {\n        children: props.question.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"40%\"\n          },\n          children: props.question.sections.map(function (s, idx) {\n            return /*#__PURE__*/_jsxDEV(Point, {\n              selected: idx == selectedPoint,\n              onClick: function onClick() {\n                return updateSelectedPoint(idx);\n              },\n              children: s.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Img, {\n            src: pneumo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 26\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/DataInterpretation/Answer\",\n        children: /*#__PURE__*/_jsxDEV(ShowAnswer, {\n          children: \"Show Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 57\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(AnswerPage, \"K1jTbFgbzkbyImte9WR1bW9KHvU=\");\n\n_c = AnswerPage;\nexport default AnswerPage;\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin: 50px auto;\\n    max-width: 800px;\\n\"])));\n_c2 = Container;\nvar Description = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: grey;\\n    color: black;\\n    border-radius: 2px;\\n    padding: 10px;\\n\"])));\n_c3 = Description;\nvar Content = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-around;\\n    background-color: #2f3237;\\n    width: 100%;\\n    margin: 25px auto;\\n    padding: 25px;\\n    border-radius: 2px;\\n\"])));\n_c4 = Content;\nvar Point = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    background-color: \", \";\\n    color: \", \";\\n    width: 100%;\\n    margin: 10px 0px;\\n    border-radius: 2px;\\n    cursor: pointer;\\n\"])), function (props) {\n  return props.selected ? \"#ffb000\" : \"#2f3237\";\n}, function (props) {\n  return props.selected ? \"black\" : \"white\";\n});\n_c5 = Point;\nvar Img = styled.img(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    width: 200px;\\n\"])));\n_c6 = Img;\nvar PointDetail = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    background-color: #2f3237;\\n    width: 100%;\\n    margin: 25px 0px;\\n    padding: 25px;\\n    border-radius: 2px;\\n\"])));\nvar ShowAnswer = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    background-color: #ffb000;\\n    color: black;\\n    border-radius: 2px;\\n    padding: 10px;\\n    font-size: 20px;\\n    cursor: pointer;\\n\"])));\n_c7 = ShowAnswer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AnswerPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Point\");\n$RefreshReg$(_c6, \"Img\");\n$RefreshReg$(_c7, \"ShowAnswer\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/AnswerPage.tsx"],"names":["styled","pneumo","Link","useState","AnswerPage","props","selectedPoint","updateSelectedPoint","console","log","question","task","width","sections","map","s","idx","title","Container","div","Description","Content","Point","selected","Img","img","PointDetail","ShowAnswer"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAA4B;AAAA;;AAC3C,kBAA6CF,QAAQ,CAAC,CAAD,CAArD;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,mBAAtB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAlB;AACA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI,QAAC,WAAD;AAAA,kBAAcL,KAAK,CAACK,QAAN,CAAeC;AAA7B;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,OAAD;AAAA,gCACI;AAAK,UAAA,KAAK,EAAI;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAd;AAAA,oBACKP,KAAK,CAACK,QAAN,CAAeG,QAAf,CAAwBC,GAAxB,CAA4B,UAACC,CAAD,EAAIC,GAAJ;AAAA,gCACzB,QAAC,KAAD;AAAO,cAAA,QAAQ,EAAIA,GAAG,IAAIV,aAA1B;AAAyC,cAAA,OAAO,EAAI;AAAA,uBAAMC,mBAAmB,CAACS,GAAD,CAAzB;AAAA,eAApD;AAAA,wBACKD,CAAC,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,qBADyB;AAAA,WAA5B;AADL;AAAA;AAAA;AAAA;AAAA,iBADJ,eAOI;AAAA,iCAAK,QAAC,GAAD;AAAK,YAAA,GAAG,EAAIhB;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,iBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAWI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,4BAAX;AAAA,+BAAwC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,eAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkBH,CArBD;;GAAMG,U;;KAAAA,U;AAuBN,eAAeA,UAAf;AAEA,IAAMc,SAAS,GAAGlB,MAAM,CAACmB,GAAV,+IAAf;MAAMD,S;AAMN,IAAME,WAAW,GAAGpB,MAAM,CAACmB,GAAV,sKAAjB;MAAMC,W;AAON,IAAMC,OAAO,GAAGrB,MAAM,CAACmB,GAAV,wPAAb;MAAME,O;AAUN,IAAMC,KAAK,GAAGtB,MAAM,CAACmB,GAAV,iNACa,UAAAd,KAAK;AAAA,SAAIA,KAAK,CAACkB,QAAN,GAAiB,SAAjB,GAA6B,SAAjC;AAAA,CADlB,EAEE,UAAAlB,KAAK;AAAA,SAAIA,KAAK,CAACkB,QAAN,GAAiB,OAAjB,GAA2B,OAA/B;AAAA,CAFP,CAAX;MAAMD,K;AASN,IAAME,GAAG,GAAGxB,MAAM,CAACyB,GAAV,4FAAT;MAAMD,G;AAIN,IAAME,WAAW,GAAG1B,MAAM,CAACmB,GAAV,+LAAjB;AAQA,IAAMQ,UAAU,GAAG3B,MAAM,CAACmB,GAAV,qNAAhB;MAAMQ,U","sourcesContent":["import styled from \"styled-components\";\nimport { DataInterpQuestion } from \"./types\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\ntype AnswerPageProps = {\n    question: DataInterpQuestion;\n};\n\nconst AnswerPage = (props: AnswerPageProps) => {\n    const [selectedPoint, updateSelectedPoint] = useState(0);\n    console.log(props.question)\n    return (\n        <>\n            <Container>\n                <Description>{props.question.task}</Description>\n                <Content>\n                    <div style = {{ width: \"40%\" }}>\n                        {props.question.sections.map((s, idx) => \n                            <Point selected = {idx == selectedPoint} onClick = {() => updateSelectedPoint(idx)}>\n                                {s.title}\n                            </Point>)}\n                    </div>\n                    <div><Img src = {pneumo} /></div>\n                </Content>\n                <Link to = \"/DataInterpretation/Answer\"><ShowAnswer>Show Answer</ShowAnswer></Link>\n                \n            </Container>\n        </>\n    );\n};\n\nexport default AnswerPage;\n\nconst Container = styled.div`\n    text-align: center;\n    margin: 50px auto;\n    max-width: 800px;\n`\n\nconst Description = styled.div`\n    background-color: grey;\n    color: black;\n    border-radius: 2px;\n    padding: 10px;\n`\n\nconst Content = styled.div`\n    display: flex;\n    justify-content: space-around;\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px auto;\n    padding: 25px;\n    border-radius: 2px;\n`\n\nconst Point = styled.div<{selected: boolean}>`\n    background-color: ${props => props.selected ? \"#ffb000\" : \"#2f3237\"};\n    color: ${props => props.selected ? \"black\" : \"white\"};\n    width: 100%;\n    margin: 10px 0px;\n    border-radius: 2px;\n    cursor: pointer;\n`\n\nconst Img = styled.img`\n    width: 200px;\n`\n\nconst PointDetail = styled.div`\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px 0px;\n    padding: 25px;\n    border-radius: 2px;\n`\n\nconst ShowAnswer = styled.div`\n    background-color: #ffb000;\n    color: black;\n    border-radius: 2px;\n    padding: 10px;\n    font-size: 20px;\n    cursor: pointer;\n`\n"]},"metadata":{},"sourceType":"module"}