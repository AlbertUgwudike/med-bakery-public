{"ast":null,"code":"export var exemplarId=\"exemplar\";export var responseId=\"response\";export var promptId=\"prompt\";export var startAudioRecordingId=\"startAudioRecording\";export var mimeTypes={jpeg:\"image/jpeg\",mp3:\"audio/mpeg\",png:\"image/png\"};","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/types.tsx"],"names":["exemplarId","responseId","promptId","startAudioRecordingId","mimeTypes","jpeg","mp3","png"],"mappings":"AA6BA,MAAO,IAAMA,CAAAA,UAAU,CAAG,UAAnB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,UAAnB,CACP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAjB,CACP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,qBAA9B,CAiBP,MAAO,IAAMC,CAAAA,SAAoC,CAAG,CAChDC,IAAI,CAAE,YAD0C,CAEhDC,GAAG,CAAE,YAF2C,CAGhDC,GAAG,CAAE,WAH2C,CAA7C","sourcesContent":["export type MarkSchemeSection = {\n    title: string;\n    points: { point: string; selected: boolean; pointId: number }[];\n};\n\nexport type Station = {\n    id: string;\n    category: string;\n    isDemoStation: boolean;\n    title: string;\n    timePermitted: number;\n    timeRemaining: number;\n    brief: {\n        prompt: string;\n        timePermitted: number;\n        timeRemaining: number;\n    };\n    questions: Question[];\n};\n\nexport type Question = {\n    question: string;\n    questionAudio: string;\n    img: string;\n    responseAudio: string;\n    exemplarAudio: string;\n    markScheme: MarkSchemeSection[];\n};\n\nexport const exemplarId = \"exemplar\";\nexport const responseId = \"response\";\nexport const promptId = \"prompt\";\nexport const startAudioRecordingId = \"startAudioRecording\";\n\nexport type StationSummary = {\n    id: string;\n    thumbnail: string;\n    title: string;\n    category: string;\n    isDemoStation: boolean;\n};\n\nexport type AnsweredStationDetails = {\n    id: string; // id of the relevant master-station\n    markCode: number; // percentage correctenss\n    responseAudios: string[]; // Raw audio data of each reponse\n    dateAnswered: Date; // date question was answered\n};\n\nexport const mimeTypes: { [key: string]: string } = {\n    jpeg: \"image/jpeg\",\n    mp3: \"audio/mpeg\",\n    png: \"image/png\",\n};\n\nexport type HeaderDetails = {\n    title: string;\n    percentage: number;\n    exit: boolean;\n    navigator: boolean;\n    timer: boolean;\n    nextFunc: () => void;\n    prevFunc: () => void;\n};\n\nexport type UserDetailsOsce = {\n    answeredStations: AnsweredStationDetails[];\n    purchasedOsce: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}