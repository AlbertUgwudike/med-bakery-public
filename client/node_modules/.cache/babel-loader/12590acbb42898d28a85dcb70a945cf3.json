{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StationPage = props => {\n  if (props.station.title === \"Null Station\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/OSCE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 56\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/OSCE/Station\",\n      children: /*#__PURE__*/_jsxDEV(Brief, {\n        station: props.station,\n        updateStation: props.updateStation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), props.station.questions.map((_, questionIdx) => /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/OSCE/Station/\" + questionIdx,\n      children: /*#__PURE__*/_jsxDEV(QuestionPage, {\n        station: props.station,\n        updateStation: props.updateStation,\n        questionIdx: questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)\n    }, questionIdx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/OSCE/Station/Summary\",\n      children: /*#__PURE__*/_jsxDEV(Summary, {\n        station: props.station,\n        updateStation: props.updateStation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), props.station.questions.map((_, questionIdx) => /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/OSCE/Station/Review\" + questionIdx,\n      children: /*#__PURE__*/_jsxDEV(QuestionReviewPage, {\n        station: props.station,\n        updateStation: props.updateStation,\n        questionIdx: questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)\n    }, props.station.questions[questionIdx].question, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/OSCE/Station/MarkReview\",\n      children: /*#__PURE__*/_jsxDEV(MarkReviewPage, {\n        station: props.station\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StationPage;\nexport default StationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx"],"names":["Redirect","Route","Switch","Brief","MarkReviewPage","QuestionPage","QuestionReviewPage","Summary","StationPage","props","station","title","updateStation","questions","map","_","questionIdx","question"],"mappings":";AACA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAE7C,MAAIA,KAAK,CAACC,OAAN,CAAcC,KAAd,KAAwB,cAA5B,EAA4C,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AAE5C,sBACI,QAAC,MAAD;AAAA,4BAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,eAApB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAKF,KAAK,CAACC,OAAzB;AAAmC,QAAA,aAAa,EAAKD,KAAK,CAACG;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOQH,KAAK,CAACC,OAAN,CAAcG,SAAd,CAAwBC,GAAxB,CAA4B,CAACC,CAAD,EAAIC,WAAJ,kBACxB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAI,mBAAmBA,WAAlC;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,OAAO,EAAKP,KAAK,CAACC,OADtB;AAEI,QAAA,aAAa,EAAKD,KAAK,CAACG,aAF5B;AAGI,QAAA,WAAW,EAAKI;AAHpB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAwDA,WAAxD;AAAA;AAAA;AAAA;AAAA,YADJ,CAPR,eAkBI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,uBAAd;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAKP,KAAK,CAACC,OAA3B;AAAqC,QAAA,aAAa,EAAKD,KAAK,CAACG;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ,EAuBQH,KAAK,CAACC,OAAN,CAAcG,SAAd,CAAwBC,GAAxB,CAA4B,CAACC,CAAD,EAAIC,WAAJ,kBACxB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAI,yBAAyBA,WAAxC;AAAA,6BACI,QAAC,kBAAD;AACI,QAAA,OAAO,EAAKP,KAAK,CAACC,OADtB;AAEI,QAAA,aAAa,EAAKD,KAAK,CAACG,aAF5B;AAGI,QAAA,WAAW,EAAKI;AAHpB;AAAA;AAAA;AAAA;AAAA;AADJ,OAA6DP,KAAK,CAACC,OAAN,CAAcG,SAAd,CAAwBG,WAAxB,EAAqCC,QAAlG;AAAA;AAAA;AAAA;AAAA,YADJ,CAvBR,eAkCI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,0BAAd;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAKR,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA7CD;;KAAMF,W;AA+CN,eAAeA,WAAf","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { Station_new } from \"./types\"\n\ntype StationPageProps = {\n    station: Station_new;\n    updateStation: Dispatch<SetStateAction<Station_new>>;\n}\n\nconst StationPage = (props: StationPageProps) => {\n\n    if (props.station.title === \"Null Station\") return <Redirect to = \"/OSCE\" />\n\n    return (\n        <Switch>\n            \n            <Route exact path = \"/OSCE/Station\" >\n                <Brief station = { props.station } updateStation = { props.updateStation }  />\n            </Route>\n\n            { \n                props.station.questions.map((_, questionIdx) => (\n                    <Route path = {\"/OSCE/Station/\" + questionIdx}  key = { questionIdx }>\n                        <QuestionPage \n                            station = { props.station } \n                            updateStation = { props.updateStation }\n                            questionIdx = { questionIdx }\n                        /> \n                    </Route>\n                ))\n            }\n\n            <Route path = \"/OSCE/Station/Summary\" >\n                <Summary station = { props.station } updateStation = { props.updateStation } /> \n            </Route>\n\n            { \n                props.station.questions.map((_, questionIdx) => (\n                    <Route path = {\"/OSCE/Station/Review\" + questionIdx} key = { props.station.questions[questionIdx].question }>\n                        <QuestionReviewPage\n                            station = { props.station } \n                            updateStation = { props.updateStation }\n                            questionIdx = { questionIdx }\n                        /> \n                    </Route>\n                ))\n            }\n\n            <Route path = \"/OSCE/Station/MarkReview\" >\n                <MarkReviewPage station = { props.station } /> \n            </Route>\n            \n        </Switch>\n    )\n}\n\nexport default StationPage;"]},"metadata":{},"sourceType":"module"}