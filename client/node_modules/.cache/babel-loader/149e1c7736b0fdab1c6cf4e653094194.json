{"ast":null,"code":"// Implementation plan\n// From the server we shall retrieve teh content for each station\n// This will include the audio prompt, station text and a -- link? -- to exernal media\n// each osce set should include a \n// ---- brief\n// ---- a set of stations\n// for now we will save the station content as react compenents\n// will need to change this to raw unstyled html for the database\n// demo will use the CXR case, textual prompts for now\n//todo\n// ==> Fix timer (simply freeze options when timer expires)\n// ==> Add proper demo content, text prompts and audio files\n// ==> correct the styling (low priority)\n// ==> implement review functionality\n// ==> ake it so that audio is saved\n// redesign ----------------------------------\nexport const exemplarId = \"exemplar\";\nexport const responseId = \"response\";\nexport const promptId = \"prompt\";\nexport const startAudioRecordingId = \"startAudioRecording\";","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/types.tsx"],"names":["exemplarId","responseId","promptId","startAudioRecordingId"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA0BA;AA4BA,OAAO,MAAMA,UAAU,GAAG,UAAnB;AACP,OAAO,MAAMC,UAAU,GAAG,UAAnB;AACP,OAAO,MAAMC,QAAQ,GAAG,QAAjB;AACP,OAAO,MAAMC,qBAAqB,GAAG,qBAA9B","sourcesContent":["import { ReactElement, ReactHTMLElement } from \"react\";\n\n// Implementation plan\n// From the server we shall retrieve teh content for each station\n// This will include the audio prompt, station text and a -- link? -- to exernal media\n// each osce set should include a \n// ---- brief\n// ---- a set of stations\n// for now we will save the station content as react compenents\n// will need to change this to raw unstyled html for the database\n// demo will use the CXR case, textual prompts for now\n\n//todo\n// ==> Fix timer (simply freeze options when timer expires)\n// ==> Add proper demo content, text prompts and audio files\n// ==> correct the styling (low priority)\n// ==> implement review functionality\n// ==> ake it so that audio is saved\n\nexport type Case = {\n    completed: boolean,\n    brief: {\n        prompt: ReactElement;\n        timePermitted: number;\n        timeRemaining: number;\n    }\n    stations: Station[]\n}\n\nexport type Station = {\n    prompt: ReactElement;\n    imgsrc: string;\n    timeRemaining: number,\n    timePermitted: number,\n    tasks: Task[];\n}\n\nexport type Task = {\n    prompt: ReactElement;\n    response: string;\n    exemplar: string;\n}\n\n// redesign ----------------------------------\n\nexport type MarkSchemeSection = {\n    title: string,\n    points: { point: string; selected: boolean; pointId: number; }[]\n}\n\nexport type Station_new = {\n    title: string;\n    timePermitted: number;\n    timeRemaining: number;\n    brief: {\n        prompt: ReactElement;\n        timePermitted: number;\n        timeRemaining: number;\n    };\n    questions: Question[]\n}\n\nexport type Question = {\n    question: string;\n    questionUrl: string;\n    imgsrc: string;\n    responseUrl: string;\n    exemplarUrl: string;\n    markScheme: MarkSchemeSection[];\n}\n\nexport const exemplarId = \"exemplar\";\nexport const responseId = \"response\";\nexport const promptId = \"prompt\"\nexport const startAudioRecordingId = \"startAudioRecording\";\n\n\n"]},"metadata":{},"sourceType":"module"}