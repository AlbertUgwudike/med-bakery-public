{"ast":null,"code":"import _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport Brief from \"./Brief\";\nimport { NullStation } from \"./DemoStations/NullStation\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./Question/QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReview/QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar StationPage = function StationPage(props) {\n  _s();\n\n  var _location$state;\n\n  var _useState = useState({\n    prev: -1,\n    curr: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionIdx = _useState2[0],\n      updateQuestionIdx = _useState2[1];\n\n  var location = useLocation();\n  var las = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.lastAttemptedStation) ? location.state.lastAttemptedStation : NullStation;\n  var station;\n  if (props.station.id !== \"NullStation\") station = props.station;else if (las.id !== \"NullStation\") station = las;else return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/OSCE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 17\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/OSCE/Station/Brief\",\n        children: /*#__PURE__*/_jsxDEV(Brief, {\n          updateStation: props.updateStation,\n          station: station,\n          handleExit: props.handleExit,\n          questionIdx: questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/OSCE/Station/Question\",\n        children: /*#__PURE__*/_jsxDEV(QuestionPage, {\n          station: station,\n          updateStation: props.updateStation,\n          questionIdx: questionIdx,\n          updateQuestionIdx: updateQuestionIdx,\n          handleExit: props.handleExit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/OSCE/Station/Summary\",\n        children: /*#__PURE__*/_jsxDEV(Summary, {\n          updateStation: props.updateStation,\n          updateIdx: updateQuestionIdx,\n          station: station,\n          questionIdx: questionIdx,\n          handleExit: props.handleExit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/OSCE/Station/Review\",\n        children: /*#__PURE__*/_jsxDEV(QuestionReviewPage, {\n          station: station,\n          updateStation: props.updateStation,\n          questionIdx: questionIdx,\n          updateIdx: updateQuestionIdx,\n          reviewMode: props.reviewMode,\n          handleExit: props.handleExit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/OSCE/Station/MarkReview\",\n        children: /*#__PURE__*/_jsxDEV(MarkReviewPage, {\n          station: station,\n          updateStation: props.updateStation,\n          reviewMode: props.reviewMode,\n          handleExit: props.handleExit,\n          updateIdx: updateQuestionIdx,\n          questionIdx: questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StationPage, \"2B0FzFub+O1fPdUHFVkqZTqW/ug=\", false, function () {\n  return [useLocation];\n});\n\n_c = StationPage;\nexport default StationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx"],"names":["useState","Redirect","Route","Switch","useLocation","Brief","NullStation","MarkReviewPage","QuestionPage","QuestionReviewPage","Summary","StationPage","props","prev","curr","questionIdx","updateQuestionIdx","location","las","state","lastAttemptedStation","station","id","height","overflow","updateStation","handleExit","reviewMode"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport Brief from \"./Brief\";\nimport { NullStation } from \"./DemoStations/NullStation\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./Question/QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReview/QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { AnsweredStationDetails, Question, Station } from \"./types\";\n\ntype StationPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    answeredStations: AnsweredStationDetails[];\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst StationPage = (props: StationPageProps) => {\n    const [questionIdx, updateQuestionIdx] = useState({ prev: -1, curr: 0 });\n\n    const location = useLocation<{ lastAttemptedStation?: Station }>();\n    const las = location.state?.lastAttemptedStation\n        ? location.state.lastAttemptedStation\n        : NullStation;\n\n    let station: Station;\n    if (props.station.id !== \"NullStation\") station = props.station;\n    else if (las.id !== \"NullStation\") station = las;\n    else return <Redirect to=\"/OSCE\" />;\n\n    return (\n        <div\n            style={{\n                height: \"100vh\",\n                overflow: \"hidden\",\n            }}\n        >\n            <Switch>\n                <Route exact path=\"/OSCE/Station/Brief\">\n                    <Brief\n                        updateStation={props.updateStation}\n                        station={station}\n                        handleExit={props.handleExit}\n                        questionIdx={questionIdx}\n                    />\n                </Route>\n\n                <Route exact path={\"/OSCE/Station/Question\"}>\n                    <QuestionPage\n                        station={station}\n                        updateStation={props.updateStation}\n                        questionIdx={questionIdx}\n                        updateQuestionIdx={updateQuestionIdx}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path=\"/OSCE/Station/Summary\">\n                    <Summary\n                        updateStation={props.updateStation}\n                        updateIdx={updateQuestionIdx}\n                        station={station}\n                        questionIdx={questionIdx}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path={\"/OSCE/Station/Review\"}>\n                    <QuestionReviewPage\n                        station={station}\n                        updateStation={props.updateStation}\n                        questionIdx={questionIdx}\n                        updateIdx={updateQuestionIdx}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path=\"/OSCE/Station/MarkReview\">\n                    <MarkReviewPage\n                        station={station}\n                        updateStation={props.updateStation}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                        updateIdx={updateQuestionIdx}\n                        questionIdx={questionIdx}\n                    />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default StationPage;\n"]},"metadata":{},"sourceType":"module"}