{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  disableNormalization: false\n};\nexport var createConvolverNodeConstructor = function createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(ConvolverNode, _audioNodeConstructor);\n\n    var _super = _createSuper(ConvolverNode);\n\n    function ConvolverNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, ConvolverNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeConvolverNode, convolverNodeRenderer);\n      _this._isBufferNullified = false;\n      _this._nativeConvolverNode = nativeConvolverNode;\n\n      if (mergedOptions.buffer !== null) {\n        setAudioNodeTailTime(_assertThisInitialized(_this), mergedOptions.buffer.duration);\n      }\n\n      return _this;\n    }\n\n    _createClass(ConvolverNode, [{\n      key: \"buffer\",\n      get: function get() {\n        if (this._isBufferNullified) {\n          return null;\n        }\n\n        return this._nativeConvolverNode.buffer;\n      },\n      set: function set(value) {\n        this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.\n\n        if (value === null && this._nativeConvolverNode.buffer !== null) {\n          var nativeContext = this._nativeConvolverNode.context;\n          this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n          this._isBufferNullified = true;\n          setAudioNodeTailTime(this, 0);\n        } else {\n          this._isBufferNullified = false;\n          setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n        }\n      }\n    }, {\n      key: \"normalize\",\n      get: function get() {\n        return this._nativeConvolverNode.normalize;\n      },\n      set: function set(value) {\n        this._nativeConvolverNode.normalize = value;\n      }\n    }]);\n\n    return ConvolverNode;\n  }(audioNodeConstructor);\n};","map":null,"metadata":{},"sourceType":"module"}