{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx\",\n    _this = this,\n    _templateObject;\n\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TaskSection = function TaskSection(props) {\n  // useEffect(() => {\n  //     const container = document.getElementById(\"waveform\" + props.questionIdx);\n  //     if (container) container.innerHTML = \"\";\n  //     props.updateAudioState(as => ({\n  //         ...as,\n  //         responseWaveSurfer: generateWaveSurfer(\n  //             \"waveform\" + props.questionIdx,\n  //             props.responseAudio\n  //         ),\n  //     }));\n  // }, [props.responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: !props.responseAudio ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        style: {\n          margin: \"10px 0\",\n          width: \"10%\",\n          backgroundColor: \"#242528\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Panel, {\n        style: {\n          margin: \"10px 0\",\n          width: \"87%\",\n          backgroundColor: \"#242528\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"waveform\" + props.questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        onClick: props.playing ? props.stopEverything : props.playResponse,\n        style: {\n          margin: \"10px 0\",\n          width: \"10%\"\n        },\n        children: props.playing ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, _this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 56\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Panel, {\n        style: {\n          margin: \"10px 0\",\n          width: \"87%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"waveform\" + props.questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TaskSection;\nexport default TaskSection;\nvar Panel = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #303237;\\n    padding: 0 10px;\\n    border-radius: 10px;\\n\"])));\n_c2 = Panel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskSection\");\n$RefreshReg$(_c2, \"Panel\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx"],"names":["FaPause","FaPlay","styled","TaskSection","props","display","justifyContent","responseAudio","margin","width","backgroundColor","questionIdx","playing","stopEverything","playResponse","Panel","div"],"mappings":";;;;;;AACA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAaA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAC7C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,cACK,CAACF,KAAK,CAACG,aAAP,gBACG;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE,KAA3B;AAAkCC,UAAAA,eAAe,EAAE;AAAnD;AADX;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,QAAC,KAAD;AACI,QAAA,KAAK,EAAE;AACHF,UAAAA,MAAM,EAAE,QADL;AAEHC,UAAAA,KAAK,EAAE,KAFJ;AAGHC,UAAAA,eAAe,EAAE;AAHd,SADX;AAAA,+BAOI;AAAK,UAAA,EAAE,EAAE,aAAaN,KAAK,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA,oBADH,gBAgBG;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,GAAgBR,KAAK,CAACS,cAAtB,GAAuCT,KAAK,CAACU,YAD1D;AAEI,QAAA,KAAK,EAAE;AAAEN,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAFX;AAAA,kBAIKL,KAAK,CAACQ,OAAN,gBAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,iBAAhB,gBAA8B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJnC;AAAA;AAAA;AAAA;AAAA,eADJ,eAOI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEJ,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAAd;AAAA,+BACI;AAAK,UAAA,EAAE,EAAE,aAAaL,KAAK,CAACO;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAPJ;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,WADJ;AAgCH,CA9CD;;KAAMR,W;AAgDN,eAAeA,WAAf;AAEA,IAAMY,KAAK,GAAGb,MAAM,CAACc,GAAV,uJAAX;MAAMD,K","sourcesContent":["import { Dispatch, SetStateAction, useEffect } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { generateWaveSurfer } from \"../hooks\";\nimport { AudioState } from \"./QuestionContent\";\n\ntype TaskSectionProps = {\n    playing: boolean;\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    updateAudioState: Dispatch<SetStateAction<AudioState>>;\n    questionIdx: number;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    // useEffect(() => {\n    //     const container = document.getElementById(\"waveform\" + props.questionIdx);\n    //     if (container) container.innerHTML = \"\";\n\n    //     props.updateAudioState(as => ({\n    //         ...as,\n    //         responseWaveSurfer: generateWaveSurfer(\n    //             \"waveform\" + props.questionIdx,\n    //             props.responseAudio\n    //         ),\n    //     }));\n    // }, [props.responseAudio]);\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {!props.responseAudio ? (\n                <>\n                    <Panel\n                        style={{ margin: \"10px 0\", width: \"10%\", backgroundColor: \"#242528\" }}\n                    ></Panel>\n                    <Panel\n                        style={{\n                            margin: \"10px 0\",\n                            width: \"87%\",\n                            backgroundColor: \"#242528\",\n                        }}\n                    >\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            ) : (\n                <>\n                    <Panel\n                        onClick={props.playing ? props.stopEverything : props.playResponse}\n                        style={{ margin: \"10px 0\", width: \"10%\" }}\n                    >\n                        {props.playing ? <FaPause /> : <FaPlay />}\n                    </Panel>\n                    <Panel style={{ margin: \"10px 0\", width: \"87%\" }}>\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst Panel = styled.div`\n    background-color: #303237;\n    padding: 0 10px;\n    border-radius: 10px;\n`;\n"]},"metadata":{},"sourceType":"module"}