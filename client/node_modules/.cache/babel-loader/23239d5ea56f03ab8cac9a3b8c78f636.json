{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/RecordControl.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RecordControl = function RecordControl(props) {\n  _s();\n\n  var startTone = new Audio(startToneUrl);\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Control, {\n      onClick: function onClick() {\n        startTone.play();\n        props.recording ? props.stopEverything() : props.recordResponse();\n      },\n      narrowWindow: narrowWindow,\n      recording: props.recording,\n      children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, _this), \" \\xA0\", props.recording && \"Tap me when you've answered\", !props.recording && \"Tap to answer!!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RecordControl, \"veOw0VdmvVP6A+6/HalGX29hfpk=\");\n\n_c = RecordControl;\nexport default RecordControl;\nvar Control = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 45%;\\n    border: 1px solid \", \";\\n    color: \", \";\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.recording ? \"red\" : \"#414142\";\n}, function (props) {\n  return props.recording ? \"red\" : \"#FAD000\";\n}, function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c2 = Control;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecordControl\");\n$RefreshReg$(_c2, \"Control\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/RecordControl.tsx"],"names":["useContext","FaMicrophone","styled","MetaContext","startToneUrl","RecordControl","props","startTone","Audio","narrowWindow","display","justifyContent","play","recording","stopEverything","recordResponse","Control","button"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA+B;AAAA;;AACjD,MAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAUJ,YAAV,CAAlB;;AACA,oBAAyBJ,UAAU,CAACG,WAAD,CAAnC;AAAA,MAAQM,YAAR,eAAQA,YAAR;;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,2BACI,QAAC,OAAD;AACI,MAAA,OAAO,EAAE,mBAAM;AACXJ,QAAAA,SAAS,CAACK,IAAV;AACAN,QAAAA,KAAK,CAACO,SAAN,GAAkBP,KAAK,CAACQ,cAAN,EAAlB,GAA2CR,KAAK,CAACS,cAAN,EAA3C;AACH,OAJL;AAKI,MAAA,YAAY,EAAEN,YALlB;AAMI,MAAA,SAAS,EAAEH,KAAK,CAACO,SANrB;AAAA,8BAQI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eARJ,WASKP,KAAK,CAACO,SAAN,IAAmB,6BATxB,EAUK,CAACP,KAAK,CAACO,SAAP,IAAoB,iBAVzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CAnBD;;GAAMR,a;;KAAAA,a;AAqBN,eAAeA,aAAf;AAEA,IAAMW,OAAO,GAAGd,MAAM,CAACe,MAAV,yRAOW,UAAAX,KAAK;AAAA,SAAKA,KAAK,CAACO,SAAN,GAAkB,KAAlB,GAA0B,SAA/B;AAAA,CAPhB,EAQA,UAAAP,KAAK;AAAA,SAAKA,KAAK,CAACO,SAAN,GAAkB,KAAlB,GAA0B,SAA/B;AAAA,CARL,EASI,UAAAP,KAAK;AAAA,SAAKA,KAAK,CAACG,YAAN,GAAqB,MAArB,GAA8B,MAAnC;AAAA,CATT,CAAb;MAAMO,O","sourcesContent":["import { useContext, useState } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\n\ntype RecordControlProps = {\n    recording: boolean;\n    stopEverything: () => void;\n    recordResponse: () => void;\n};\n\nconst RecordControl = (props: RecordControlProps) => {\n    const startTone = new Audio(startToneUrl);\n    const { narrowWindow } = useContext(MetaContext);\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Control\n                onClick={() => {\n                    startTone.play();\n                    props.recording ? props.stopEverything() : props.recordResponse();\n                }}\n                narrowWindow={narrowWindow}\n                recording={props.recording}\n            >\n                <FaMicrophone /> &nbsp;\n                {props.recording && \"Tap me when you've answered\"}\n                {!props.recording && \"Tap to answer!!\"}\n            </Control>\n        </div>\n    );\n};\n\nexport default RecordControl;\n\nconst Control = styled.button<{ narrowWindow: boolean; recording: boolean }>`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 45%;\n    border: 1px solid ${props => (props.recording ? \"red\" : \"#414142\")};\n    color: ${props => (props.recording ? \"red\" : \"#FAD000\")};\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n"]},"metadata":{},"sourceType":"module"}