{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{GoogleLogin,GoogleLogout}from\"react-google-login\";import axios from\"../../myaxios\";import styled from\"styled-components\";import{FaSignOutAlt}from\"react-icons/fa\";import{useContext}from\"react\";import MetaContext from\"../../MetaContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var clientID=\"439563851182-mo2cj9djg7f0u19ctnjp1864tdaredkc.apps.googleusercontent.com\";export var Login=function Login(props){var _useContext=useContext(MetaContext),SERVER_URL=_useContext.SERVER_URL,setToken=_useContext.setToken;var onSuccess=function onSuccess(res){axios.post(SERVER_URL+\"/user/googlelogin\",{token:res.tokenId}).then(function(axres){if(axres.data.success){setToken(res.tokenId);if(props.successCallback)props.successCallback(res.tokenId);}});};var onFailure=function onFailure(res){console.log(\"err: \",res);};return/*#__PURE__*/_jsx(GoogleLogin,{clientId:clientID,buttonText:\"LOGIN\",onSuccess:onSuccess,onFailure:onFailure,isSignedIn:true,render:function render(propss){return/*#__PURE__*/_jsx(LoginButton,{onClick:propss.onClick,disabled:propss.disabled,id:\"loginboi\",children:/*#__PURE__*/_jsx(\"span\",{children:props.label})});}});};export var LoginButton=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\npadding: 10px 20px;\\nbackground-color: #fad000;\\nborder: none;\\nborder-radius: 5px;\\ncursor: pointer;\\nspan {\\n  color: black;\\n  font-weight: bold;\\n}\\n\"])));export var Logout=function Logout(props){var _useContext2=useContext(MetaContext),darkMode=_useContext2.darkMode;var onSuccess=function onSuccess(){console.log(\"we logged out!\");props.setToken(\"\");window.analytics.track({userId:clientID,event:\"User Logged out\"});};return/*#__PURE__*/_jsx(GoogleLogout,{clientId:clientID,buttonText:\"LOGOUT\",onLogoutSuccess:onSuccess,render:function render(prps){return/*#__PURE__*/_jsxs(LogoutButton,{darkMode:darkMode,onClick:prps.onClick,disabled:prps.disabled,children:[/*#__PURE__*/_jsx(FaSignOutAlt,{}),\" \\xA0 Logout \\xA0\"]});}});};var LogoutButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\npadding: 10px 20px;\\nbackground-color: #fad000;\\nborder: none;\\nborder-radius: 5px;\\ncursor: pointer;\\nspan {\\n  color: black;\\n  font-weight: bold;\\n}\\n\"])));","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/HomePage/LoginLogout.tsx"],"names":["GoogleLogin","GoogleLogout","axios","styled","FaSignOutAlt","useContext","MetaContext","clientID","Login","props","SERVER_URL","setToken","onSuccess","res","post","token","tokenId","then","axres","data","success","successCallback","onFailure","console","log","propss","onClick","disabled","label","LoginButton","button","Logout","darkMode","window","analytics","track","userId","event","prps","LogoutButton"],"mappings":"sLAAA,OACIA,WADJ,CAIIC,YAJJ,KAKO,oBALP,CAMA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,UAAT,KAAqC,OAArC,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,0EAAjB,CAOA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAuB,CACxC,gBAAiCJ,UAAU,CAACC,WAAD,CAA3C,CAAQI,UAAR,aAAQA,UAAR,CAAoBC,QAApB,aAAoBA,QAApB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAc,CAC5BX,KAAK,CAACY,IAAN,CAAWJ,UAAU,CAAG,mBAAxB,CAA6C,CAAEK,KAAK,CAAEF,GAAG,CAACG,OAAb,CAA7C,EAAqEC,IAArE,CAA0E,SAAAC,KAAK,CAAI,CAC/E,GAAIA,KAAK,CAACC,IAAN,CAAWC,OAAf,CAAwB,CACpBT,QAAQ,CAACE,GAAG,CAACG,OAAL,CAAR,CACA,GAAIP,KAAK,CAACY,eAAV,CAA2BZ,KAAK,CAACY,eAAN,CAAsBR,GAAG,CAACG,OAA1B,EAC9B,CACJ,CALD,EAMH,CAPD,CASA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,GAAD,CAAc,CAC5BU,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBX,GAArB,EACH,CAFD,CAIA,mBACI,KAAC,WAAD,EACI,QAAQ,CAAEN,QADd,CAEI,UAAU,CAAC,OAFf,CAGI,SAAS,CAAEK,SAHf,CAII,SAAS,CAAEU,SAJf,CAKI,UAAU,CAAE,IALhB,CAMI,MAAM,CAAE,gBAAAG,MAAM,qBACV,KAAC,WAAD,EAAa,OAAO,CAAEA,MAAM,CAACC,OAA7B,CAAsC,QAAQ,CAAED,MAAM,CAACE,QAAvD,CAAiE,EAAE,CAAC,UAApE,uBACI,sBAAOlB,KAAK,CAACmB,KAAb,EADJ,EADU,EANlB,EADJ,CAcH,CA9BM,CAgCP,MAAO,IAAMC,CAAAA,WAAW,CAAG1B,MAAM,CAAC2B,MAAV,4NAAjB,CAYP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACtB,KAAD,CAAyE,CAC3F,iBAAqBJ,UAAU,CAACC,WAAD,CAA/B,CAAQ0B,QAAR,cAAQA,QAAR,CAEA,GAAMpB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBW,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAf,KAAK,CAACE,QAAN,CAAe,EAAf,EACAsB,MAAM,CAACC,SAAP,CAAiBC,KAAjB,CAAuB,CACnBC,MAAM,CAAE7B,QADW,CAEnB8B,KAAK,CAAE,iBAFY,CAAvB,EAIH,CAPD,CASA,mBACI,KAAC,YAAD,EACI,QAAQ,CAAE9B,QADd,CAEI,UAAU,CAAC,QAFf,CAGI,eAAe,CAAEK,SAHrB,CAII,MAAM,CAAE,gBAAA0B,IAAI,qBACR,MAAC,YAAD,EAAc,QAAQ,CAAEN,QAAxB,CAAkC,OAAO,CAAEM,IAAI,CAACZ,OAAhD,CAAyD,QAAQ,CAAEY,IAAI,CAACX,QAAxE,wBACI,KAAC,YAAD,IADJ,uBADQ,EAJhB,EADJ,CAYH,CAxBM,CA0BP,GAAMY,CAAAA,YAAY,CAAGpC,MAAM,CAAC2B,MAAV,8NAAlB","sourcesContent":["import {\n    GoogleLogin,\n    GoogleLoginResponse,\n    GoogleLoginResponseOffline,\n    GoogleLogout,\n} from \"react-google-login\";\nimport axios from \"../../myaxios\";\nimport styled from \"styled-components\";\nimport { FaSignOutAlt } from \"react-icons/fa\";\nimport { useContext, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\n\nconst clientID = \"439563851182-mo2cj9djg7f0u19ctnjp1864tdaredkc.apps.googleusercontent.com\";\n\ntype LoginProps = {\n    label: string;\n    successCallback?: (token: string) => void;\n};\n\nexport const Login = (props: LoginProps) => {\n    const { SERVER_URL, setToken } = useContext(MetaContext);\n\n    const onSuccess = (res: any) => {\n        axios.post(SERVER_URL + \"/user/googlelogin\", { token: res.tokenId }).then(axres => {\n            if (axres.data.success) {\n                setToken(res.tokenId);\n                if (props.successCallback) props.successCallback(res.tokenId);\n            }\n        });\n    };\n\n    const onFailure = (res: any) => {\n        console.log(\"err: \", res);\n    };\n\n    return (\n        <GoogleLogin\n            clientId={clientID}\n            buttonText=\"LOGIN\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            isSignedIn={true}\n            render={propss => (\n                <LoginButton onClick={propss.onClick} disabled={propss.disabled} id=\"loginboi\">\n                    <span>{props.label}</span>\n                </LoginButton>\n            )}\n        />\n    );\n};\n\nexport const LoginButton = styled.button`\npadding: 10px 20px;\nbackground-color: #fad000;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\nspan {\n  color: black;\n  font-weight: bold;\n}\n`;\n\nexport const Logout = (props: { setToken: (userToken: string) => void; darkMode: boolean }) => {\n    const { darkMode } = useContext(MetaContext);\n\n    const onSuccess = () => {\n        console.log(\"we logged out!\");\n        props.setToken(\"\");\n        window.analytics.track({\n            userId: clientID,\n            event: \"User Logged out\",\n        });\n    };\n\n    return (\n        <GoogleLogout\n            clientId={clientID}\n            buttonText=\"LOGOUT\"\n            onLogoutSuccess={onSuccess}\n            render={prps => (\n                <LogoutButton darkMode={darkMode} onClick={prps.onClick} disabled={prps.disabled}>\n                    <FaSignOutAlt /> &nbsp; Logout &nbsp;\n                </LogoutButton>\n            )}\n        />\n    );\n};\n\nconst LogoutButton = styled.button<{ darkMode: boolean }>`\npadding: 10px 20px;\nbackground-color: #fad000;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\nspan {\n  color: black;\n  font-weight: bold;\n}\n`;\n\n"]},"metadata":{},"sourceType":"module"}