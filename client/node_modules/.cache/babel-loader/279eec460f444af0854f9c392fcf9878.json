{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/OSCESelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport StationSummaryCard from \"./StationSummaryCard\";\nimport styled from \"styled-components\";\nimport { useContext, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport CategorySelector from \"./CategorySelector\";\nimport FilterSelector from \"./FilterSelector\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar OSCESelector = function OSCESelector(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      token = _useContext.token,\n      narrowWindow = _useContext.narrowWindow;\n\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      updateCategory = _useState2[1];\n\n  var _useState3 = useState(\"No Filter\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filter = _useState4[0],\n      updateFilter = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.stationSummariesLoading ? /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      message: \"Loading Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#031B34\",\n        margin: \"5%\",\n        padding: \"5%\",\n        display: narrowWindow ? \"block\" : \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CategorySelector, {\n        updateCategory: updateCategory,\n        stationSummaries: props.stationSummarires,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FilterSelector, {\n          stationSummaries: props.stationSummarires,\n          updateFilter: updateFilter,\n          filter: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          },\n          children: props.stationSummarires.filter(function (ss) {\n            return ss.category === category || category === \"All\";\n          }).filter(function (ss) {\n            if (filter === \"Attempted\") return props.answeredStations.map(function (as) {\n              return as.id;\n            }).includes(ss.id);\n            if (filter === \"Free\") return ss.isDemoStation;\n            if (filter === \"Premium\") return !ss.isDemoStation;\n            return true; // filter === \"All\"\n          }).map(function (ss) {\n            return /*#__PURE__*/_jsxDEV(StationSummaryCard, {\n              openSubscribeModal: props.openSubscribeModal,\n              selectStation: props.selectStation,\n              answeredStations: props.answeredStations,\n              summary: ss,\n              available: token !== \"\" && props.purchasedOsce || ss.isDemoStation\n            }, ss.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(OSCESelector, \"uXW/cPVuThNAOiOfhQK06SPRnfA=\");\n\n_c = OSCESelector;\nexport default OSCESelector;\nvar StartOrReview = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin: 5px 10px 5px 0;\\n    border-radius: 5px;\\n    padding: 0 10px;\\n    height: 30px;\\n    border: 1px solid grey;\\n    color: #fad000;\\n    background-color: transparent;\\n\"])));\n\nvar _c;\n\n$RefreshReg$(_c, \"OSCESelector\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/OSCESelector.tsx"],"names":["StationSummaryCard","styled","useContext","useState","MetaContext","CategorySelector","FilterSelector","LoadingScreen","OSCESelector","props","token","narrowWindow","category","updateCategory","filter","updateFilter","stationSummariesLoading","background","margin","padding","display","stationSummarires","flexWrap","ss","answeredStations","map","as","id","includes","isDemoStation","openSubscribeModal","selectStation","purchasedOsce","StartOrReview","button"],"mappings":"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","sourcesContent":["import { AnsweredStationDetails, StationSummary, Station } from \"./types\";\nimport StationSummaryCard from \"./StationSummaryCard\";\nimport Navigator from \"../Navigator\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Dispatch, SetStateAction, useContext, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport CategorySelector from \"./CategorySelector\";\nimport { FaSpinner } from \"react-icons/fa\";\nimport SubscribePanel from \"./SubscribePanel\";\nimport FilterSelector, { Filter } from \"./FilterSelector\";\nimport LoadingScreen from \"./LoadingScreen\";\n\ntype OSCESelectorProps = {\n    stationSummarires: StationSummary[];\n    selectStation: (id: string, options: { review: boolean; marks: (0 | 1)[] }) => void;\n    station: Station;\n    answeredStations: AnsweredStationDetails[];\n    purchasedOsce: boolean;\n    stationSummariesLoading: boolean;\n    openSubscribeModal: () => void;\n};\n\nconst OSCESelector = (props: OSCESelectorProps) => {\n    const { token, narrowWindow } = useContext(MetaContext);\n    const [category, updateCategory] = useState(\"All\");\n    const [filter, updateFilter] = useState<Filter>(\"No Filter\");\n\n    return (\n        <div>\n            {props.stationSummariesLoading ? (\n                <LoadingScreen message=\"Loading Stations\" />\n            ) : (\n                <div\n                    style={{\n                        background: \"#031B34\",\n                        margin: \"5%\",\n                        padding: \"5%\",\n                        display: narrowWindow ? \"block\" : \"flex\",\n                    }}\n                >\n\n                    <CategorySelector\n                        updateCategory={updateCategory}\n                        stationSummaries={props.stationSummarires}\n                        category={category}\n                    />\n                    \n                    <div>\n                        <FilterSelector\n                            stationSummaries={props.stationSummarires}\n                            updateFilter={updateFilter}\n                            filter={filter}\n                        />\n\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexWrap: \"wrap\",\n                            }}\n                        >\n                            {props.stationSummarires\n                                .filter(ss => ss.category === category || category === \"All\")\n                                .filter(ss => {\n                                    if (filter === \"Attempted\")\n                                        return props.answeredStations\n                                            .map(as => as.id)\n                                            .includes(ss.id);\n                                    if (filter === \"Free\") return ss.isDemoStation;\n                                    if (filter === \"Premium\") return !ss.isDemoStation;\n                                    return true; // filter === \"All\"\n                                })\n                                .map(ss => (\n                                    <StationSummaryCard\n                                        openSubscribeModal={props.openSubscribeModal}\n                                        selectStation={props.selectStation}\n                                        answeredStations={props.answeredStations}\n                                        summary={ss}\n                                        available={\n                                            (token !== \"\" && props.purchasedOsce) ||\n                                            ss.isDemoStation\n                                        }\n                                        key={ss.id}\n                                    />\n                                ))}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default OSCESelector;\n\nconst StartOrReview = styled.button`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 5px;\n    padding: 0 10px;\n    height: 30px;\n    border: 1px solid grey;\n    color: #fad000;\n    background-color: transparent;\n`;\n"]},"metadata":{},"sourceType":"module"}