{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/QuestionSelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7;\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { questions } from \"./exampleQuestions\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar QuestionSelector = function QuestionSelector(props) {\n  _s();\n\n  // these will be null in the actual implementatiuon\n  // initalised once questions are retrieved\n  var _useState = useState(questions[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedQuestion = _useState2[0],\n      updateSelectedQuestion = _useState2[1];\n\n  var _useState3 = useState(questions[0].finding),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedFinding = _useState4[0],\n      updateSelectedFinding = _useState4[1];\n\n  var _useState5 = useState(questions[0].category),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedCategory = _useState6[0],\n      updateSelectedCategory = _useState6[1];\n\n  console.log(selectedCategory, selectedFinding); // load these using use effect and initialise selection\n  // for now using local dummy questions for UI testing\n  // useEffect( sommin => quesitons! )\n\n  var categories = Array.apply(void 0, _toConsumableArray(new Set(questions.map(function (q) {\n    return q.category;\n  }))));\n\n  var changeSelection = function changeSelection(category, finding, idx) {\n    updateSelectedCategory(category);\n    var filteredForCategory = questions.filter(function (q) {\n      return q.category === category;\n    }); // no finding selected, set question to first in category\n\n    if (finding === \"\") {\n      updateSelectedFinding(filteredForCategory[0].finding);\n      updateSelectedQuestion(filteredForCategory[0]);\n      return;\n    } // finding has been provided\n\n\n    updateSelectedFinding(finding);\n    var filteredForfinding = filteredForCategory.filter(function (q) {\n      return q.finding === finding;\n    }); // no specific index selected\n\n    if (idx === -1) {\n      updateSelectedQuestion(filteredForfinding[0]);\n      return;\n    } // valid idx has been selected\n\n\n    updateSelectedQuestion(filteredForfinding[idx]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"15%\"\n      },\n      children: categories.map(function (c) {\n        var findings = Array.apply(void 0, _toConsumableArray(new Set(questions.filter(function (q) {\n          return q.category === c;\n        }).map(function (q) {\n          return q.finding;\n        }))));\n        return /*#__PURE__*/_jsxDEV(CategoryPanel, {\n          selected: c === selectedCategory,\n          onClick: function onClick() {\n            return changeSelection(c, \"\", -1);\n          },\n          children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n            children: c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, _this), findings.map(function (f) {\n            return /*#__PURE__*/_jsxDEV(FindingOption, {\n              selected: f === selectedFinding && c === selectedCategory,\n              onClick: function onClick() {\n                return changeSelection(c, f, -1);\n              },\n              children: f\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        backgroundColor: \"#1c2124\",\n        width: \"80%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"25%\"\n        },\n        children: questions.filter(function (q) {\n          return q.category === selectedCategory && q.finding === selectedFinding;\n        }).map(function (q, i) {\n          return /*#__PURE__*/_jsxDEV(FindingOption, {\n            onClick: function onClick() {\n              return changeSelection(q.category, q.finding, i);\n            },\n            selected: q.category === selectedCategory && q.finding === selectedFinding,\n            children: q.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"60%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(QuestionSummary, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"30px\"\n            },\n            children: selectedQuestion.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Img, {\n            src: pneumo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Features, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"Key Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, _this), selectedQuestion.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionSelector, \"4zPaWjzowKk280sk4msKcaiYhIA=\");\n\n_c = QuestionSelector;\nexport default QuestionSelector;\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #2f3237;\\n    margin: 5%;\\n    padding: 20px 10px;\\n    display: flex;\\n    justify-content: space-around;\\n\"])));\n_c2 = Container;\nvar FindingOption = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: #2f3237;\\n    margin: 5%;\\n    padding: 5%;\\n    display: flex;\\n    cursor: pointer;\\n\"])));\n_c3 = FindingOption;\nvar CategoryTitle = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    font-size: 20px;\\n    margin: 5px;\\n\"])));\n_c4 = CategoryTitle;\nvar CategoryPanel = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin-bottom: 10px;\\n    padding: 10px 5px;\\n    background-color: #1c2124;\\n\"])));\n_c5 = CategoryPanel;\nvar QuestionSummary = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    background-color: #2f3237;\\n    margin: 10px;\\n\"])));\n_c6 = QuestionSummary;\nvar Img = styled.img(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    height: 300px;\\n\"])));\n_c7 = Img;\nvar Features = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    text-align: left;\\n    border: 2px solid grey;\\n    margin: 10px;\\n    padding: 20px;\\n\"])));\n_c8 = Features;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"QuestionSelector\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"FindingOption\");\n$RefreshReg$(_c4, \"CategoryTitle\");\n$RefreshReg$(_c5, \"CategoryPanel\");\n$RefreshReg$(_c6, \"QuestionSummary\");\n$RefreshReg$(_c7, \"Img\");\n$RefreshReg$(_c8, \"Features\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/QuestionSelector.tsx"],"names":["useState","styled","questions","pneumo","QuestionSelector","props","selectedQuestion","updateSelectedQuestion","finding","selectedFinding","updateSelectedFinding","category","selectedCategory","updateSelectedCategory","console","log","categories","Array","Set","map","q","changeSelection","idx","filteredForCategory","filter","filteredForfinding","width","c","findings","f","display","backgroundColor","i","title","fontSize","description","Container","div","FindingOption","CategoryTitle","CategoryPanel","QuestionSummary","Img","img","Features"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { updateCategory } from \"../../functions\";\nimport { questions } from \"./exampleQuestions\";\nimport pneumo from \"./Pneumothorax.png\";\n\ntype QuestionSelectorProps = {};\n\nconst QuestionSelector = (props: QuestionSelectorProps) => {\n    // these will be null in the actual implementatiuon\n    // initalised once questions are retrieved\n    const [selectedQuestion, updateSelectedQuestion] = useState(questions[0]);\n    const [selectedFinding, updateSelectedFinding] = useState(questions[0].finding);\n    const [selectedCategory, updateSelectedCategory] = useState(questions[0].category);\n\n    console.log(selectedCategory, selectedFinding);\n\n    // load these using use effect and initialise selection\n    // for now using local dummy questions for UI testing\n    // useEffect( sommin => quesitons! )\n\n    const categories = Array(...new Set(questions.map(q => q.category)));\n\n    const changeSelection = (category: string, finding: string, idx: number) => {\n        updateSelectedCategory(category);\n        const filteredForCategory = questions.filter(q => q.category === category);\n\n        // no finding selected, set question to first in category\n        if (finding === \"\") {\n            updateSelectedFinding(filteredForCategory[0].finding);\n            updateSelectedQuestion(filteredForCategory[0]);\n            return;\n        }\n\n        // finding has been provided\n        updateSelectedFinding(finding);\n        const filteredForfinding = filteredForCategory.filter(q => q.finding === finding);\n\n        // no specific index selected\n        if (idx === -1) {\n            updateSelectedQuestion(filteredForfinding[0]);\n            return;\n        }\n\n        // valid idx has been selected\n        updateSelectedQuestion(filteredForfinding[idx]);\n    };\n\n    return (\n        <Container>\n            <div style={{ width: \"15%\" }}>\n                {categories.map(c => {\n                    const findings = Array(\n                        ...new Set(questions.filter(q => q.category === c).map(q => q.finding))\n                    );\n\n                    return (\n                        <CategoryPanel\n                            selected={c === selectedCategory}\n                            onClick={() => changeSelection(c, \"\", -1)}\n                        >\n                            <CategoryTitle>{c}</CategoryTitle>\n                            {findings.map(f => (\n                                <FindingOption\n                                    selected={f === selectedFinding && c === selectedCategory}\n                                    onClick={() => changeSelection(c, f, -1)}\n                                >\n                                    {f}\n                                </FindingOption>\n                            ))}\n                        </CategoryPanel>\n                    );\n                })}\n            </div>\n            <div style={{ display: \"flex\", backgroundColor: \"#1c2124\", width: \"80%\" }}>\n                <div style={{ width: \"25%\" }}>\n                    {questions\n                        .filter(\n                            q => q.category === selectedCategory && q.finding === selectedFinding\n                        )\n                        .map((q, i) => (\n                            <FindingOption\n                                onClick={() => changeSelection(q.category, q.finding, i)}\n                                selected={\n                                    q.category === selectedCategory && q.finding === selectedFinding\n                                }\n                            >\n                                {q.title}\n                            </FindingOption>\n                        ))}\n                </div>\n                <div style={{ width: \"60%\" }}>\n                    <QuestionSummary>\n                        <div style={{ fontSize: \"30px\" }}>{selectedQuestion.title}</div>\n                        {/* image would be fetched from source in actual implementation */}\n                        <Img src={pneumo} />\n                        <Features>\n                            <div style={{ fontSize: \"20px\" }}>Key Features:</div>\n                            {selectedQuestion.description}\n                        </Features>\n                    </QuestionSummary>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionSelector;\n\nconst Container = styled.div`\n    background-color: #2f3237;\n    margin: 5%;\n    padding: 20px 10px;\n    display: flex;\n    justify-content: space-around;\n`;\n\nconst FindingOption = styled.div<{ selected: boolean }>`\n    background-color: #2f3237;\n    margin: 5%;\n    padding: 5%;\n    display: flex;\n    cursor: pointer;\n`;\n\nconst CategoryTitle = styled.div`\n    font-size: 20px;\n    margin: 5px;\n`;\n\nconst CategoryPanel = styled.div<{ selected: boolean }>`\n    text-align: center;\n    margin-bottom: 10px;\n    padding: 10px 5px;\n    background-color: #1c2124;\n`;\n\nconst QuestionSummary = styled.div`\n    text-align: center;\n    background-color: #2f3237;\n    margin: 10px;\n`;\n\nconst Img = styled.img`\n    height: 300px;\n`;\n\nconst Features = styled.div`\n    text-align: left;\n    border: 2px solid grey;\n    margin: 10px;\n    padding: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}