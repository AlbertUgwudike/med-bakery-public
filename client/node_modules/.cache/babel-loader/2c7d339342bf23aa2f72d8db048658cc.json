{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2;import{BrowserRouter as Router,Route,Switch}from\"react-router-dom\";import{useToken,useWindowSize}from\"./functions\";import{useState}from\"react\";import HomePage from\"./components/HomePage/HomePage\";import{createBrowserHistory}from\"history\";import styled from\"styled-components\";import MetaContext from\"./MetaContext\";import OSCEPage from\"./components/OSCEPage/OSCEPage\";import ExpiryLoginPage from\"./components/ExpiryLoginPage/ExpiryLoginPage\";import SubscribePage from\"./components/SubscribePage/SubscribePage\";import UserPage from\"./components/UserPage/UserPage\";import DataInterpPage from\"./components/DataInterpPage/DataInterpPage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useToken=useToken(),token=_useToken.token,setToken=_useToken.setToken;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),darkMode=_useState2[0],setDarkMode=_useState2[1];//initialise darkMode\nvar _useWindowSize=useWindowSize(),_useWindowSize2=_slicedToArray(_useWindowSize,2),w=_useWindowSize2[0],_=_useWindowSize2[1];var narrowWindow=w<650;// if we're on local host (development) then change url accordingly\nvar SERVER_URL=\"\";var CLIENT_URL=\"\";if(window.location.href.startsWith(\"http://localhost:3000/\")){SERVER_URL=\"http://localhost:3001\";CLIENT_URL=\"http://localhost:3000\";}if(window.location.href.startsWith(\"https://medbakery.co.uk\")){SERVER_URL=\"https://medbakery.co.uk\";CLIENT_URL=\"https://medbakery.co.uk\";}var history=createBrowserHistory();var prevPath=null;// listen and notify Segment of client-side page updates\nhistory.listen(function(location){if(location.pathname!==prevPath){prevPath=location.pathname;window.analytics.page();}});return/*#__PURE__*/_jsx(Container,{darkMode:darkMode,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsxs(MetaContext.Provider,{value:{darkMode:darkMode,SERVER_URL:SERVER_URL,CLIENT_URL:CLIENT_URL,token:token,setToken:setToken,narrowWindow:narrowWindow},children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/User\",children:/*#__PURE__*/_jsx(UserPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/OSCE\",children:/*#__PURE__*/_jsx(OSCEPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/DataInterpretation\",children:/*#__PURE__*/_jsx(DataInterpPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/Subscribe\",children:/*#__PURE__*/_jsx(SubscribePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/ExpiryLogin\",children:/*#__PURE__*/_jsx(ExpiryLoginPage,{})})]})})})});};export default App;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    color: \",\";\\n    fill: \",\";\\n    font-family: Proxima;\\n\"])),function(props){return props.darkMode?\"white\":\"black\";},function(props){return props.darkMode?\"#0072CE\":\"#C02222\";});var Background=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    background-color: \",\";\\n    background-image: url(\",\");\\n    background-size: 9%;\\n    background-attachment: fixed;\\n    position: fixed;\\n    filter: blur(0px);\\n    color: \",\";\\n    fill: \",\";\\n    font-family: Proxima;\\n    height: 100vh;\\n    width: 100%;\\n    z-index: -1;\\n\"])),function(props){return props.darkMode?\"#272727\":\"#ffffff\";},function(props){return props.darkMode?props.backlogodark:props.backlogolight;},function(props){return props.darkMode?\"white\":\"black\";},function(props){return props.darkMode?\"#0072CE\":\"#C02222\";});","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/App.tsx"],"names":["BrowserRouter","Router","Route","Switch","useToken","useWindowSize","useState","HomePage","createBrowserHistory","styled","MetaContext","OSCEPage","ExpiryLoginPage","SubscribePage","UserPage","DataInterpPage","App","token","setToken","darkMode","setDarkMode","w","_","narrowWindow","SERVER_URL","CLIENT_URL","window","location","href","startsWith","history","prevPath","listen","pathname","analytics","page","Container","div","props","Background","backlogodark","backlogolight"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useToken, useWindowSize } from \"./functions\";\nimport { useState } from \"react\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { createBrowserHistory } from \"history\";\nimport styled from \"styled-components\";\nimport MetaContext from \"./MetaContext\";\nimport OSCEPage from \"./components/OSCEPage/OSCEPage\";\nimport ExpiryLoginPage from \"./components/ExpiryLoginPage/ExpiryLoginPage\";\nimport SubscribePage from \"./components/SubscribePage/SubscribePage\";\nimport UserPage from \"./components/UserPage/UserPage\";\nimport Data from \"./components/Data Interp/Data\";\nimport DataInterpPage from \"./components/DataInterpPage/DataInterpPage\";\n\nconst App = () => {\n    const { token, setToken } = useToken();\n    const [darkMode, setDarkMode] = useState(true); //initialise darkMode\n    const [w, _] = useWindowSize();\n\n    const narrowWindow = w < 650;\n\n    // if we're on local host (development) then change url accordingly\n    let SERVER_URL = \"\";\n    let CLIENT_URL = \"\";\n\n    if (window.location.href.startsWith(\"http://localhost:3000/\")) {\n        SERVER_URL = \"http://localhost:3001\";\n        CLIENT_URL = \"http://localhost:3000\";\n    }\n\n    if (window.location.href.startsWith(\"https://medbakery.co.uk\")) {\n        SERVER_URL = \"https://medbakery.co.uk\";\n        CLIENT_URL = \"https://medbakery.co.uk\";\n    }\n\n    const history = createBrowserHistory();\n\n    let prevPath: any = null;\n\n    // listen and notify Segment of client-side page updates\n    history.listen(location => {\n        if (location.pathname !== prevPath) {\n            prevPath = location.pathname;\n            window.analytics.page();\n        }\n    });\n\n    return (\n        <Container darkMode={darkMode}>\n            <Router>\n                <Switch>\n                    <MetaContext.Provider\n                        value={{ darkMode, SERVER_URL, CLIENT_URL, token, setToken, narrowWindow }}\n                    >\n                        <Route exact path=\"/\">\n                            <HomePage />\n                        </Route>\n\n                        <Route exact path=\"/User\">\n                            <UserPage />\n                        </Route>\n\n                        <Route path=\"/OSCE\">\n                            <OSCEPage />\n                        </Route>\n\n                        <Route path=\"/DataInterpretation\">\n                            <DataInterpPage />\n                        </Route>\n\n                        <Route path=\"/Subscribe\">\n                            <SubscribePage />\n                        </Route>\n\n                        <Route path=\"/ExpiryLogin\">\n                            <ExpiryLoginPage />\n                        </Route>\n                    </MetaContext.Provider>\n                </Switch>\n            </Router>\n        </Container>\n    );\n};\n\nexport default App;\n\nconst Container = styled.div<{ darkMode: boolean }>`\n    color: ${props => (props.darkMode ? \"white\" : \"black\")};\n    fill: ${props => (props.darkMode ? \"#0072CE\" : \"#C02222\")};\n    font-family: Proxima;\n`;\n\nconst Background = styled.div<{ darkMode: boolean; backlogodark: string; backlogolight: string }>`\n    background-color: ${props => (props.darkMode ? \"#272727\" : \"#ffffff\")};\n    background-image: url(${props => (props.darkMode ? props.backlogodark : props.backlogolight)});\n    background-size: 9%;\n    background-attachment: fixed;\n    position: fixed;\n    filter: blur(0px);\n    color: ${props => (props.darkMode ? \"white\" : \"black\")};\n    fill: ${props => (props.darkMode ? \"#0072CE\" : \"#C02222\")};\n    font-family: Proxima;\n    height: 100vh;\n    width: 100%;\n    z-index: -1;\n`;\n"]},"metadata":{},"sourceType":"module"}