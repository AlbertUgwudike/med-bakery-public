{"ast":null,"code":"export var exemplarId = \"exemplar\";\nexport var responseId = \"response\";\nexport var promptId = \"prompt\";\nexport var startAudioRecordingId = \"startAudioRecording\";\nexport var mimeTypes = {\n  jpeg: \"image/jpeg\",\n  mp3: \"audio/mpeg\",\n  png: \"image/png\"\n};","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/types.tsx"],"names":["exemplarId","responseId","promptId","startAudioRecordingId","mimeTypes","jpeg","mp3","png"],"mappings":"AA6BA,OAAO,IAAMA,UAAU,GAAG,UAAnB;AACP,OAAO,IAAMC,UAAU,GAAG,UAAnB;AACP,OAAO,IAAMC,QAAQ,GAAG,QAAjB;AACP,OAAO,IAAMC,qBAAqB,GAAG,qBAA9B;AAgBP,OAAO,IAAMC,SAAoC,GAAG;AAChDC,EAAAA,IAAI,EAAE,YAD0C;AAEhDC,EAAAA,GAAG,EAAE,YAF2C;AAGhDC,EAAAA,GAAG,EAAE;AAH2C,CAA7C","sourcesContent":["export type MarkSchemeSection = {\n    title: string;\n    points: { point: string; selected: boolean; pointId: number }[];\n};\n\nexport type Station = {\n    id: string;\n    category: string;\n    isDemoStation: boolean;\n    title: string;\n    timePermitted: number;\n    timeRemaining: number;\n    brief: {\n        prompt: string;\n        timePermitted: number;\n        timeRemaining: number;\n    };\n    questions: Question[];\n};\n\nexport type Question = {\n    question: string;\n    questionAudio: string;\n    img: string;\n    responseAudio: string;\n    exemplarAudio: string;\n    markScheme: MarkSchemeSection[];\n};\n\nexport const exemplarId = \"exemplar\";\nexport const responseId = \"response\";\nexport const promptId = \"prompt\";\nexport const startAudioRecordingId = \"startAudioRecording\";\n\nexport type StationSummary = {\n    id: string;\n    thumbnail: string;\n    title: string;\n    category: string;\n    isDemoStation: boolean;\n};\n\nexport type AnsweredStationDetails = {\n    id: string; // id of the relevant master-station\n    markCode: number; // percentage correctenss\n    responseAudios: string[]; // Raw audio data of each reponse\n};\n\nexport const mimeTypes: { [key: string]: string } = {\n    jpeg: \"image/jpeg\",\n    mp3: \"audio/mpeg\",\n    png: \"image/png\",\n};\n\nexport type HeaderDetails = {\n    title: string;\n    percentage: number;\n    exit: boolean;\n    navigator: boolean;\n    timer: boolean;\n    nextFunc: () => void;\n    prevFunc: () => void;\n};\n\nexport type UserDetailsOsce = {\n    answeredStations: AnsweredStationDetails[];\n    purchasedOsce: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}