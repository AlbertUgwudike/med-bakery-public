{"ast":null,"code":"import _regeneratorRuntime from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { generateUniqueNumber } from 'fast-unique-numbers';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\nvar DESTROY_WORKER_FUNCTIONS = new Map();\nexport var extendWorkerImplementation = function extendWorkerImplementation(createWorker, partialWorkerImplementation, isSupportedFunction) {\n  return _objectSpread(_objectSpread({}, partialWorkerImplementation), {}, {\n    connect: function connect(_ref) {\n      var port = _ref.port;\n      port.start();\n      var destroyWorker = createWorker(port, partialWorkerImplementation);\n      var portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n      DESTROY_WORKER_FUNCTIONS.set(portId, function () {\n        destroyWorker();\n        port.close();\n        DESTROY_WORKER_FUNCTIONS.delete(portId);\n      });\n      return {\n        result: portId\n      };\n    },\n    disconnect: function disconnect(_ref2) {\n      var portId = _ref2.portId;\n      var destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n\n      if (destroyWorker === undefined) {\n        throw renderUnknownPortIdError({\n          portId: portId.toString()\n        });\n      }\n\n      destroyWorker();\n      return {\n        result: null\n      };\n    },\n    isSupported: function () {\n      var _isSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var isSelfSupported, result, synchronousResult;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return isSupportingTransferables();\n\n              case 2:\n                isSelfSupported = _context.sent;\n\n                if (!isSelfSupported) {\n                  _context.next = 14;\n                  break;\n                }\n\n                result = isSupportedFunction();\n\n                if (!(result instanceof Promise)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 8;\n                return result;\n\n              case 8:\n                _context.t0 = _context.sent;\n                _context.next = 12;\n                break;\n\n              case 11:\n                _context.t0 = result;\n\n              case 12:\n                synchronousResult = _context.t0;\n                return _context.abrupt(\"return\", {\n                  result: synchronousResult\n                });\n\n              case 14:\n                return _context.abrupt(\"return\", {\n                  result: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function isSupported() {\n        return _isSupported.apply(this, arguments);\n      }\n\n      return isSupported;\n    }()\n  });\n};","map":null,"metadata":{},"sourceType":"module"}