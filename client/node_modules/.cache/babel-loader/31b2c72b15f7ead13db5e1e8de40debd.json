{"ast":null,"code":"import { createMessageHandler } from './helpers/create-message-handler';\nimport { extendWorkerImplementation } from './helpers/extend-worker-implementation';\nimport { isSupportingTransferables } from './helpers/is-supporting-transferables';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nexport var createWorker = function createWorker(receiver, workerImplementation) {\n  var isSupportedFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return true;\n  };\n  var fullWorkerImplementation = extendWorkerImplementation(createWorker, workerImplementation, isSupportedFunction);\n  var messageHandler = createMessageHandler(receiver, fullWorkerImplementation);\n  receiver.addEventListener('message', messageHandler);\n  return function () {\n    return receiver.removeEventListener('message', messageHandler);\n  };\n};\nexport { isSupportingTransferables as isSupported };","map":{"version":3,"sources":["../../src/module.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAT,QAAqC,kCAArC;AACA,SAAS,0BAAT,QAA2C,wCAA3C;AACA,SAAS,yBAAT,QAA0C,uCAA1C;AAIA;;;AAGG;;AACH,cAAc,oBAAd;AACA,cAAc,eAAd;AAEA,OAAO,IAAM,YAAY,GAAG,SAAf,YAAe,CACxB,QADwB,EAExB,oBAFwB,EAIA;AAAA,MADxB,mBACwB,uEADgC;AAAA,WAAM,IAAN;AAAA,GAChC;AACxB,MAAM,wBAAwB,GAAG,0BAA0B,CAAI,YAAJ,EAAkB,oBAAlB,EAAwC,mBAAxC,CAA3D;AACA,MAAM,cAAc,GAAG,oBAAoB,CAAC,QAAD,EAAW,wBAAX,CAA3C;AAEA,EAAA,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,cAArC;AAEA,SAAO;AAAA,WAAM,QAAQ,CAAC,mBAAT,CAA6B,SAA7B,EAAwC,cAAxC,CAAN;AAAA,GAAP;AACH,CAXM;AAaP,SAAS,yBAAyB,IAAI,WAAtC","sourceRoot":"","sourcesContent":["import { createMessageHandler } from './helpers/create-message-handler';\nimport { extendWorkerImplementation } from './helpers/extend-worker-implementation';\nimport { isSupportingTransferables } from './helpers/is-supporting-transferables';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const createWorker = (receiver, workerImplementation, isSupportedFunction = () => true) => {\n    const fullWorkerImplementation = extendWorkerImplementation(createWorker, workerImplementation, isSupportedFunction);\n    const messageHandler = createMessageHandler(receiver, fullWorkerImplementation);\n    receiver.addEventListener('message', messageHandler);\n    return () => receiver.removeEventListener('message', messageHandler);\n};\nexport { isSupportingTransferables as isSupported };\n//# sourceMappingURL=module.js.map"]},"metadata":{},"sourceType":"module"}