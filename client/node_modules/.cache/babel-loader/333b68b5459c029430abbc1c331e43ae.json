{"ast":null,"code":"export var createIsSupportedPromise = function createIsSupportedPromise(window) {\n  if (window !== null && window.MediaStream !== undefined && (\n  /*\n   * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n   */\n  window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n    /*\n     * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n     * audio codec.\n     */\n    return new Promise(function (resolve) {\n      // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n      if (window.MediaRecorder === undefined) {\n        return resolve(true);\n      } // @todo captureStream() is not defined yet.\n\n\n      var canvasElement = document.createElement('canvas'); // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n\n      canvasElement.getContext('2d');\n\n      if (typeof canvasElement.captureStream !== 'function') {\n        return resolve(false);\n      }\n\n      var mediaStream = canvasElement.captureStream();\n      var mimeType = 'audio/webm';\n\n      try {\n        var mediaRecorder = new window.MediaRecorder(mediaStream, {\n          mimeType: mimeType\n        });\n        mediaRecorder.addEventListener('dataavailable', function (_ref) {\n          var data = _ref.data;\n          return resolve(data.type === mimeType);\n        });\n        mediaRecorder.start();\n        setTimeout(function () {\n          return mediaRecorder.stop();\n        }, 10);\n      } catch (err) {\n        resolve(err.name === 'NotSupportedError');\n      }\n    });\n  }\n\n  return Promise.resolve(false);\n};","map":{"version":3,"sources":["../../../src/factories/is-supported-promise.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,wBAAwB,GAA+B,SAAvD,wBAAuD,CAAC,MAAD,EAAW;AAC3E,MACI,MAAM,KAAK,IAAX,IACA,MAAM,CAAC,WAAP,KAAuB,SADvB;AAEA;;AAEG;AACF,EAAA,MAAM,CAAC,aAAP,KAAyB,SAAzB,IAAsC,MAAM,CAAC,aAAP,CAAqB,eAArB,KAAyC,SALhF,CADJ,EAOE;AACE;;;AAGG;AACH,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC3B;AACA,UAAI,MAAM,CAAC,aAAP,KAAyB,SAA7B,EAAwC;AACpC,eAAO,OAAO,CAAC,IAAD,CAAd;AACH,OAJ0B,CAM3B;;;AACA,UAAM,aAAa,GAA0D,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAA7E,CAP2B,CAS3B;;AACA,MAAA,aAAa,CAAC,UAAd,CAAyB,IAAzB;;AAEA,UAAI,OAAO,aAAa,CAAC,aAArB,KAAuC,UAA3C,EAAuD;AACnD,eAAO,OAAO,CAAC,KAAD,CAAd;AACH;;AAED,UAAM,WAAW,GAAG,aAAa,CAAC,aAAd,EAApB;AACA,UAAM,QAAQ,GAAG,YAAjB;;AAEA,UAAI;AACA,YAAM,aAAa,GAAG,IAAI,MAAM,CAAC,aAAX,CAAyB,WAAzB,EAAsC;AAAE,UAAA,QAAQ,EAAR;AAAF,SAAtC,CAAtB;AAEA,QAAA,aAAa,CAAC,gBAAd,CAA+B,eAA/B,EAAgD;AAAA,cAAG,IAAH,QAAG,IAAH;AAAA,iBAAc,OAAO,CAAC,IAAI,CAAC,IAAL,KAAc,QAAf,CAArB;AAAA,SAAhD;AACA,QAAA,aAAa,CAAC,KAAd;AAEA,QAAA,UAAU,CAAC;AAAA,iBAAM,aAAa,CAAC,IAAd,EAAN;AAAA,SAAD,EAA6B,EAA7B,CAAV;AACH,OAPD,CAOE,OAAO,GAAP,EAAY;AACV,QAAA,OAAO,CAAC,GAAG,CAAC,IAAJ,KAAa,mBAAd,CAAP;AACH;AACJ,KA7BM,CAAP;AA8BH;;AAED,SAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AACH,CA9CM","sourceRoot":"","sourcesContent":["export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            // @todo captureStream() is not defined yet.\n            const canvasElement = document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map"]},"metadata":{},"sourceType":"module"}