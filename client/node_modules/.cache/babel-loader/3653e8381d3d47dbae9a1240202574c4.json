{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/AlphaHeader.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Login, LoginButton } from \"../HomePage/LoginLogout\";\nimport { StartButton } from \"./Common\";\nimport TimerApparatus from \"./TimerApparatus\";\nimport TimerBar from \"./TimerBar\";\nimport htmlParser from \"react-html-parser\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar DefaultDetails = {\n  title: \"Brief\",\n  percentage: 5,\n  briefButton: false,\n  exitButton: false,\n  timer: false\n};\n\nvar Header = function Header(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      token = _useContext.token,\n      SERVER_URL = _useContext.SERVER_URL;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      briefShowing = _useState2[0],\n      updateBriefShowing = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayLoginOption = _useState4[0],\n      updateDisplayLoginOption = _useState4[1];\n\n  var _useState5 = useState(DefaultDetails),\n      _useState6 = _slicedToArray(_useState5, 2),\n      headerDetails = _useState6[0],\n      updateHeaderDetails = _useState6[1];\n\n  var location = useLocation();\n  var splitPaths = location.pathname.split(\"/\");\n  var lastPath = splitPaths[splitPaths.length - 1];\n  useEffect(function () {\n    if (lastPath === \"Station\") {\n      updateHeaderDetails({\n        title: \"Brief\",\n        percentage: 5,\n        briefButton: false,\n        exitButton: false,\n        timer: false\n      });\n    } else if (Number.isInteger(Number(lastPath))) {\n      var questionIdx = Number(lastPath);\n      var percentage = 10 + 100 * questionIdx / props.station.questions.length;\n      updateHeaderDetails({\n        title: \"Station One\",\n        percentage: percentage,\n        briefButton: true,\n        exitButton: true,\n        timer: true\n      });\n    } else if (lastPath === \"Summary\") {\n      updateHeaderDetails({\n        title: \"Station One\",\n        percentage: 100,\n        briefButton: true,\n        exitButton: true,\n        timer: false\n      });\n    } else if (lastPath.startsWith(\"Review\")) {\n      var _questionIdx = Number(lastPath.substring(lastPath.indexOf(\"w\") + 1));\n\n      var _percentage = 10 + 100 * _questionIdx / props.station.questions.length;\n\n      updateHeaderDetails({\n        title: \"Station One Review\",\n        percentage: _percentage,\n        briefButton: true,\n        exitButton: true,\n        timer: false\n      });\n    } else {\n      updateHeaderDetails({\n        title: \"Station One Review\",\n        percentage: 100,\n        briefButton: true,\n        exitButton: true,\n        timer: false\n      });\n    }\n  }, [location.pathname]);\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: headerDetails.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, _this), headerDetails.timer && /*#__PURE__*/_jsxDEV(TimerApparatus, {\n        station: props.station,\n        questionIdx: props.questionIdx,\n        updateStation: props.updateStation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TimerBar, {\n      percentage: headerDetails.percentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: function onClick() {\n            return updateBriefShowing(!briefShowing);\n          },\n          children: [briefShowing ? \"Hide\" : \"Show\", \" Brief\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, _this), token ? /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: function onClick() {\n          var _props$station;\n\n          return props.handleExit((_props$station = props.station) === null || _props$station === void 0 ? void 0 : _props$station.questions, token);\n        },\n        children: \"Exit Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: function onClick() {\n          return updateDisplayLoginOption(true);\n        },\n        children: \"Exit Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, _this), displayLoginOption ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        label: \"Login & Save!\",\n        successCallback: function successCallback(t) {\n          var _props$station2;\n\n          return props.handleExit((_props$station2 = props.station) === null || _props$station2 === void 0 ? void 0 : _props$station2.questions, t);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/OSCE\",\n        children: /*#__PURE__*/_jsxDEV(LoginButton, {\n          children: \"Exit without saving.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), briefShowing ? htmlParser(props.briefPrompt) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Header, \"MiGlZEgVcUv0oRZd3rVbXrIDS6M=\", false, function () {\n  return [useLocation];\n});\n\n_c = Header;\nexport default Header;\nvar HeaderContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    position: sticky;\\n    top: 0;\\n    max-width: 800px;\\n    margin: auto;\\n    background-color: #1c2124;\\n    padding: 50px 20px 0 20px;\\n    opacity: 0.98;\\n    z-index: 999;\\n\"])));\n_c2 = HeaderContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"HeaderContainer\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/AlphaHeader.tsx"],"names":["useContext","useEffect","useState","styled","MetaContext","Login","LoginButton","StartButton","TimerApparatus","TimerBar","htmlParser","Link","useLocation","DefaultDetails","title","percentage","briefButton","exitButton","timer","Header","props","token","SERVER_URL","briefShowing","updateBriefShowing","displayLoginOption","updateDisplayLoginOption","headerDetails","updateHeaderDetails","location","splitPaths","pathname","split","lastPath","length","Number","isInteger","questionIdx","station","questions","startsWith","substring","indexOf","display","justifyContent","updateStation","handleExit","textAlign","t","briefPrompt","HeaderContainer","div"],"mappings":"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","sourcesContent":["import axios from \"../../myaxios\";\nimport { Dispatch, ReactElement, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Login, LoginButton } from \"../HomePage/LoginLogout\";\nimport { StartButton } from \"./Common\";\nimport { NullStation } from \"./DemoStations/NullStation\";\nimport { binaryToCode, countPoints } from \"./hooks\";\nimport TimerApparatus from \"./TimerApparatus\";\nimport TimerBar from \"./TimerBar\";\nimport { Question, Station } from \"./types\";\nimport htmlParser from \"react-html-parser\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ntype HeaderProps = {\n    station: Station;\n    questionIdx?: number;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    timedHeader: boolean;\n    percentage: number;\n    briefPrompt: string;\n    title: string;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst DefaultDetails = {\n    title: \"Brief\",\n    percentage: 5,\n    briefButton: false,\n    exitButton: false,\n    timer: false,\n};\n\nconst Header = (props: HeaderProps) => {\n    const { token, SERVER_URL } = useContext(MetaContext);\n    const [briefShowing, updateBriefShowing] = useState(false);\n    const [displayLoginOption, updateDisplayLoginOption] = useState(false);\n    const [headerDetails, updateHeaderDetails] = useState(DefaultDetails);\n\n    const location = useLocation();\n    const splitPaths = location.pathname.split(\"/\");\n    const lastPath = splitPaths[splitPaths.length - 1];\n\n    useEffect(() => {\n        if (lastPath === \"Station\") {\n            updateHeaderDetails({\n                title: \"Brief\",\n                percentage: 5,\n                briefButton: false,\n                exitButton: false,\n                timer: false,\n            });\n        } else if (Number.isInteger(Number(lastPath))) {\n            const questionIdx = Number(lastPath);\n            const percentage = 10 + (100 * questionIdx) / props.station.questions.length;\n            updateHeaderDetails({\n                title: \"Station One\",\n                percentage,\n                briefButton: true,\n                exitButton: true,\n                timer: true,\n            });\n        } else if (lastPath === \"Summary\") {\n            updateHeaderDetails({\n                title: \"Station One\",\n                percentage: 100,\n                briefButton: true,\n                exitButton: true,\n                timer: false,\n            });\n        } else if (lastPath.startsWith(\"Review\")) {\n            const questionIdx = Number(lastPath.substring(lastPath.indexOf(\"w\") + 1));\n            const percentage = 10 + (100 * questionIdx) / props.station.questions.length;\n            updateHeaderDetails({\n                title: \"Station One Review\",\n                percentage,\n                briefButton: true,\n                exitButton: true,\n                timer: false,\n            });\n        } else {\n            updateHeaderDetails({\n                title: \"Station One Review\",\n                percentage: 100,\n                briefButton: true,\n                exitButton: true,\n                timer: false,\n            });\n        }\n    }, [location.pathname]);\n\n    return (\n        <HeaderContainer>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                    <h2>{headerDetails.title}</h2>\n                </div>\n                {headerDetails.timer && (\n                    <TimerApparatus\n                        station={props.station!}\n                        questionIdx={props.questionIdx!}\n                        updateStation={props.updateStation!}\n                    />\n                )}\n            </div>\n\n            <TimerBar percentage={headerDetails.percentage} />\n\n            <br />\n\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                    <StartButton onClick={() => updateBriefShowing(!briefShowing)}>\n                        {briefShowing ? \"Hide\" : \"Show\"} Brief\n                    </StartButton>\n                </div>\n\n                {token ? (\n                    <StartButton onClick={() => props.handleExit(props.station?.questions, token)}>\n                        Exit Demo\n                    </StartButton>\n                ) : (\n                    <StartButton onClick={() => updateDisplayLoginOption(true)}>\n                        Exit Demo\n                    </StartButton>\n                )}\n            </div>\n\n            <br />\n\n            {displayLoginOption ? (\n                <div style={{ textAlign: \"center\" }}>\n                    <Login\n                        label={\"Login & Save!\"}\n                        successCallback={t => props.handleExit(props.station?.questions, t)}\n                    />\n                    <Link to=\"/OSCE\">\n                        <LoginButton>Exit without saving.</LoginButton>\n                    </Link>\n                </div>\n            ) : (\n                <></>\n            )}\n\n            {briefShowing ? htmlParser(props.briefPrompt) : <></>}\n        </HeaderContainer>\n    );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n    position: sticky;\n    top: 0;\n    max-width: 800px;\n    margin: auto;\n    background-color: #1c2124;\n    padding: 50px 20px 0 20px;\n    opacity: 0.98;\n    z-index: 999;\n`;\n"]},"metadata":{},"sourceType":"module"}