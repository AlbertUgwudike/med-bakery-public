{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/Category.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport MetaContext from '../../MetaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n  const workingPath = props.workingPath.concat([props.category.categoryTitle]);\n  const percentage = Math.round(100 * props.category.answeredQuestionsCount / props.category.totalQuestionCount);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    darkMode: darkMode,\n    style: {\n      marginLeft: `${props.depth * 25}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(OuterDiv, {\n      selected: props.category.selected,\n      darkMode: darkMode,\n      onClick: () => props.handleSelection(workingPath, !props.category.selected),\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: props.category.categoryTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\",\n          marginLeft: \"10px\",\n          width: \"max-content\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ScoreDiv, {\n          darkMode: darkMode,\n          children: [\"Available: \", props.category.totalQuestionCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ScoreDiv, {\n          darkMode: darkMode,\n          children: [\"Answered: \", props.category.answeredQuestionsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OuterPill, {\n        children: /*#__PURE__*/_jsxDEV(InnerPill, {\n          percentage: percentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), props.category.subcategories.map(category => /*#__PURE__*/_jsxDEV(Category, {\n      category: category,\n      workingPath: workingPath,\n      depth: props.depth + 1,\n      handleSelection: props.handleSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = Category;\nexport default Category;\nconst Container = styled.div`\n    width: 93%;\n    margin-bottom: 20px;\n`;\n_c2 = Container;\nconst OuterDiv = styled.button`\n    background-color: ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    margin: 5px 10px 5px 10px;\n    border-style: none;\n    border-radius: 10px;\n    width: 100%;\n    padding:0.5%;\n    text-align: left;\n    &:hover {\n        background-color: ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#7735FD\" : \"#FBE9EE\"};\n    }\n`;\n_c3 = OuterDiv;\nconst Title = styled.div`\n    margin: 1px 0px 2px 10px;\n    font-size: 22px;\n`;\n_c4 = Title;\nconst ScoreDiv = styled.div`\n    font-size: 10px;\n    margin: 5px;\n`;\n_c5 = ScoreDiv;\nconst OuterPill = styled.div`\n    display: inline-block;\n    width: 75%;\n    height: 20px;\n    background-color: white;\n    border-radius: 5px;\n    margin: 0 0 5px 10px;\n`;\n_c6 = OuterPill;\nconst InnerPill = styled.div`\n    width: ${props => props.percentage}%;\n    height: 20px;\n    background-color: #FAD000;\n    border-radius: 5px;\n`;\n_c7 = InnerPill;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"OuterDiv\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"ScoreDiv\");\n$RefreshReg$(_c6, \"OuterPill\");\n$RefreshReg$(_c7, \"InnerPill\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/Category.tsx"],"names":["useContext","styled","MetaContext","Category","props","darkMode","workingPath","concat","category","categoryTitle","percentage","Math","round","answeredQuestionsCount","totalQuestionCount","marginLeft","depth","selected","handleSelection","display","width","subcategories","map","Container","div","OuterDiv","button","Title","ScoreDiv","OuterPill","InnerPill"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components'\nimport MetaContext from '../../MetaContext';\nimport { MasterCategory } from '../../types';\n\ntype CategoryProps = { \n    category: MasterCategory, \n    handleSelection: (path: string[], value: boolean) => void;\n    workingPath: string[];\n    depth: number;\n}\n\nconst Category = (props: CategoryProps) => {\n\n    const { darkMode } = useContext(MetaContext);\n\n    const workingPath = props.workingPath.concat([props.category.categoryTitle])\n    const percentage = Math.round(100 * props.category.answeredQuestionsCount / props.category.totalQuestionCount)\n\n    return (\n        <Container darkMode = { darkMode } style = {{ marginLeft: `${ props.depth * 25  }px` }}>\n\n            <OuterDiv selected = { props.category.selected } darkMode = { darkMode } onClick = { () => props.handleSelection(workingPath, !props.category.selected) }>                    \n                <Title>{ props.category.categoryTitle }</Title>\n                <div style = {{ display: \"inline-block\", marginLeft: \"10px\", width: \"max-content\" }}>\n                    <ScoreDiv darkMode = { darkMode }>Available: { props.category.totalQuestionCount }</ScoreDiv>\n                    <ScoreDiv darkMode = { darkMode }>Answered: { props.category.answeredQuestionsCount }</ScoreDiv>\n                </div>\n                <OuterPill>\n                    <InnerPill percentage = { percentage } />\n                </OuterPill>\n            </OuterDiv>\n\n            { \n                props.category.subcategories.map(category => \n                    <Category \n                        category = { category }\n                        workingPath = { workingPath }\n                        depth = { props.depth + 1 }\n                        handleSelection = { props.handleSelection }\n                    />\n                ) \n            }\n\n        </Container>\n    );\n}\n\nexport default Category;\n\nconst Container = styled.div<{ darkMode: boolean }>`\n    width: 93%;\n    margin-bottom: 20px;\n`\n\n\nconst OuterDiv = styled.button<{ selected: boolean, darkMode: boolean }>`\n    background-color: ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : ( props.darkMode ? \"#9546f05e\" : \"#b1def599\" ) };\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    margin: 5px 10px 5px 10px;\n    border-style: none;\n    border-radius: 10px;\n    width: 100%;\n    padding:0.5%;\n    text-align: left;\n    &:hover {\n        background-color: ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : (props.darkMode ? \"#7735FD\" : \"#FBE9EE\") };\n    }\n`\n\nconst Title = styled.div`\n    margin: 1px 0px 2px 10px;\n    font-size: 22px;\n`\n\nconst ScoreDiv = styled.div<{ darkMode: boolean }>`\n    font-size: 10px;\n    margin: 5px;\n` \n\nconst OuterPill = styled.div`\n    display: inline-block;\n    width: 75%;\n    height: 20px;\n    background-color: white;\n    border-radius: 5px;\n    margin: 0 0 5px 10px;\n`\n\nconst InnerPill = styled.div<{ percentage: number }>`\n    width: ${ props => props.percentage }%;\n    height: 20px;\n    background-color: #FAD000;\n    border-radius: 5px;\n`\n"]},"metadata":{},"sourceType":"module"}