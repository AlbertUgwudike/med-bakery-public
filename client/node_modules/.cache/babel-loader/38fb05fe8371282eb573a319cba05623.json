{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReviewPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport { generateWaveSurfer } from \"./hooks\";\nimport MarkScheme from \"./MarkScheme\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport TaskSectionReview from \"./TaskSectionReview\";\nimport { exemplarId, responseId, promptId } from \"./types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initalAudioState = {\n  promptAudio: null,\n  promptPlaying: true,\n  exemplarWaveSurfer: undefined,\n  responseWaveSurfer: undefined,\n  exemplarPlaying: false,\n  responsePlaiyng: false\n};\n\nvar QuestionReviewPage = function QuestionReviewPage(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      SERVER_URL = _useContext.SERVER_URL;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageExpanded = _useState2[0],\n      updateImageExpanded = _useState2[1];\n\n  var _useState3 = useState(initalAudioState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioState = _useState4[0],\n      updateAudioState = _useState4[1];\n\n  var location = useLocation();\n  var question = props.station.questions[props.questionIdx];\n  var pathToNext = props.questionIdx === props.station.questions.length - 1 ? \"/OSCE/Station/MarkReview\" : \"/OSCE/Station/Review\" + (props.questionIdx + 1);\n  var pathToPrev = props.questionIdx === 0 ? \"/OSCE/Station/Summary\" : \"/OSCE/Station/Review\" + (props.questionIdx - 1);\n\n  var stopAllPlayback = function stopAllPlayback() {\n    var _audioState$promptAud, _audioState$exemplarW, _audioState$responseW;\n\n    (_audioState$promptAud = audioState.promptAudio) === null || _audioState$promptAud === void 0 ? void 0 : _audioState$promptAud.pause();\n    (_audioState$exemplarW = audioState.exemplarWaveSurfer) === null || _audioState$exemplarW === void 0 ? void 0 : _audioState$exemplarW.stop();\n    (_audioState$responseW = audioState.responseWaveSurfer) === null || _audioState$responseW === void 0 ? void 0 : _audioState$responseW.stop();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        exemplarPlaying: false,\n        responsePlaiyng: false,\n        promptPlaying: false\n      });\n    });\n  };\n\n  var _play = function play(id) {\n    var _audioState$exemplarW2, _audioState$promptAud2, _audioState$responseW2;\n\n    stopAllPlayback();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: id == promptId,\n        exemplarPlaying: id === exemplarId,\n        responsePlaiyng: id === responseId\n      });\n    });\n    if (id === exemplarId) (_audioState$exemplarW2 = audioState.exemplarWaveSurfer) === null || _audioState$exemplarW2 === void 0 ? void 0 : _audioState$exemplarW2.play();\n    if (id === promptId) (_audioState$promptAud2 = audioState.promptAudio) === null || _audioState$promptAud2 === void 0 ? void 0 : _audioState$promptAud2.play();\n    if (id === responseId) (_audioState$responseW2 = audioState.responseWaveSurfer) === null || _audioState$responseW2 === void 0 ? void 0 : _audioState$responseW2.play();\n  };\n\n  useEffect(function () {\n    [exemplarId, responseId].forEach(function (id) {\n      var container = document.getElementById(id);\n      if (container) container.innerHTML = \"\";\n    });\n    updateAudioState(_objectSpread(_objectSpread({}, initalAudioState), {}, {\n      promptAudio: document.getElementById(promptId),\n      exemplarWaveSurfer: generateWaveSurfer(exemplarId, question.exemplarAudio, stopAllPlayback),\n      responseWaveSurfer: generateWaveSurfer(responseId, question.responseAudio, stopAllPlayback)\n    }));\n  }, []); // cease playback when compnent unmounts <=== six hour bug :)\n\n  useEffect(function () {\n    return stopAllPlayback;\n  }, [audioState.exemplarWaveSurfer, audioState.responseWaveSurfer]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: \"page\",\n    timeout: 1000,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        style: {},\n        children: [/*#__PURE__*/_jsxDEV(QuestionPrompt, {\n          question: question,\n          toggle: function toggle() {\n            audioState.promptPlaying ? stopAllPlayback() : _play(promptId);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Img, {\n            src: question.img,\n            imageExpanded: imageExpanded,\n            onClick: function onClick() {\n              return updateImageExpanded(!imageExpanded);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: -25,\n              width: \"100%\",\n              color: \"grey\"\n            },\n            children: [\"Click to \", imageExpanded ? \"shrink\" : \"expand\", \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"grey\"\n          },\n          children: \"Exemplar Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TaskSectionReview, {\n          containerId: exemplarId,\n          playing: audioState.exemplarPlaying,\n          play: function play() {\n            return _play(exemplarId);\n          },\n          stop: stopAllPlayback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"grey\"\n          },\n          children: \"Your Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TaskSectionReview, {\n          containerId: responseId,\n          playing: audioState.responsePlaiyng,\n          play: function play() {\n            return _play(responseId);\n          },\n          stop: stopAllPlayback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(MarkScheme, {\n          questionIdx: props.questionIdx,\n          markScheme: question.markScheme,\n          updateStation: props.updateStation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: pathToPrev,\n              children: /*#__PURE__*/_jsxDEV(MoveOn, {\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: pathToNext,\n              children: /*#__PURE__*/_jsxDEV(MoveOn, {\n                children: \"Move On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, _this)\n  }, props.questionIdx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionReviewPage, \"Na9najwpnN/Hgs/F31TSE/prcqg=\", false, function () {\n  return [useLocation];\n});\n\n_c = QuestionReviewPage;\nexport default QuestionReviewPage;\nvar Img = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    width: \", \";\\n    transition: width 0.2s;\\n    &:hover {\\n        cursor: pointer;\\n    }\\n\"])), function (props) {\n  return props.imageExpanded ? \"100%\" : \"60%\";\n});\n_c2 = Img;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuestionReviewPage\");\n$RefreshReg$(_c2, \"Img\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReviewPage.tsx"],"names":["useContext","useEffect","useState","Link","useLocation","styled","MetaContext","Box","MoveOn","Container","generateWaveSurfer","MarkScheme","QuestionPrompt","TaskSectionReview","exemplarId","responseId","promptId","CSSTransition","initalAudioState","promptAudio","promptPlaying","exemplarWaveSurfer","undefined","responseWaveSurfer","exemplarPlaying","responsePlaiyng","QuestionReviewPage","props","SERVER_URL","imageExpanded","updateImageExpanded","audioState","updateAudioState","location","question","station","questions","questionIdx","pathToNext","length","pathToPrev","stopAllPlayback","pause","stop","as","play","id","forEach","container","document","getElementById","innerHTML","exemplarAudio","responseAudio","textAlign","position","img","top","width","color","markScheme","updateStation","display","justifyContent","Img"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport MetaContext from \"../../MetaContext\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport { generateWaveSurfer } from \"./hooks\";\nimport MarkScheme from \"./MarkScheme\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport TaskSectionReview from \"./TaskSectionReview\";\nimport { Station, exemplarId, responseId, promptId, Question } from \"./types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./styles.css\";\n\ntype QuestionReviewPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    questionIdx: number;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\ntype AudioState = {\n    promptAudio: HTMLAudioElement | null;\n    promptPlaying: boolean;\n    exemplarWaveSurfer: WaveSurfer | undefined;\n    responseWaveSurfer: WaveSurfer | undefined;\n    exemplarPlaying: boolean;\n    responsePlaiyng: boolean;\n};\n\nconst initalAudioState: AudioState = {\n    promptAudio: null,\n    promptPlaying: true,\n    exemplarWaveSurfer: undefined,\n    responseWaveSurfer: undefined,\n    exemplarPlaying: false,\n    responsePlaiyng: false,\n};\n\nconst QuestionReviewPage = (props: QuestionReviewPageProps) => {\n    const { SERVER_URL } = useContext(MetaContext);\n    const [imageExpanded, updateImageExpanded] = useState(false);\n    const [audioState, updateAudioState] = useState<AudioState>(initalAudioState);\n\n    const location = useLocation();\n    const question = props.station.questions[props.questionIdx];\n    const pathToNext =\n        props.questionIdx === props.station.questions.length - 1\n            ? \"/OSCE/Station/MarkReview\"\n            : \"/OSCE/Station/Review\" + (props.questionIdx + 1);\n    const pathToPrev =\n        props.questionIdx === 0\n            ? \"/OSCE/Station/Summary\"\n            : \"/OSCE/Station/Review\" + (props.questionIdx - 1);\n\n    const stopAllPlayback = () => {\n        audioState.promptAudio?.pause();\n        audioState.exemplarWaveSurfer?.stop();\n        audioState.responseWaveSurfer?.stop();\n        updateAudioState(as => ({\n            ...as,\n            exemplarPlaying: false,\n            responsePlaiyng: false,\n            promptPlaying: false,\n        }));\n    };\n\n    const play = (id: string) => {\n        stopAllPlayback();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: id == promptId,\n            exemplarPlaying: id === exemplarId,\n            responsePlaiyng: id === responseId,\n        }));\n\n        if (id === exemplarId) audioState.exemplarWaveSurfer?.play();\n        if (id === promptId) audioState.promptAudio?.play();\n        if (id === responseId) audioState.responseWaveSurfer?.play();\n    };\n\n    useEffect(() => {\n        [exemplarId, responseId].forEach(id => {\n            const container = document.getElementById(id);\n            if (container) container.innerHTML = \"\";\n        });\n\n        updateAudioState({\n            ...initalAudioState,\n            promptAudio: document.getElementById(promptId) as HTMLAudioElement,\n            exemplarWaveSurfer: generateWaveSurfer(\n                exemplarId,\n                question.exemplarAudio,\n                stopAllPlayback\n            ),\n            responseWaveSurfer: generateWaveSurfer(\n                responseId,\n                question.responseAudio,\n                stopAllPlayback\n            ),\n        });\n    }, []);\n\n    // cease playback when compnent unmounts <=== six hour bug :)\n    useEffect(\n        () => stopAllPlayback,\n        [audioState.exemplarWaveSurfer, audioState.responseWaveSurfer]\n    );\n\n    return (\n        <CSSTransition key={props.questionIdx} classNames=\"page\" timeout={1000}>\n            <Container style={{ textAlign: \"center\" }} className=\"page\">\n                <Box style={{}}>\n                    <QuestionPrompt\n                        question={question}\n                        toggle={() => {\n                            audioState.promptPlaying ? stopAllPlayback() : play(promptId);\n                        }}\n                    />\n\n                    <br />\n                    <br />\n\n                    <div style={{ textAlign: \"center\", position: \"relative\" }}>\n                        <Img\n                            src={question.img}\n                            imageExpanded={imageExpanded}\n                            onClick={() => updateImageExpanded(!imageExpanded)}\n                        ></Img>\n\n                        <div\n                            style={{ position: \"absolute\", top: -25, width: \"100%\", color: \"grey\" }}\n                        >\n                            Click to {imageExpanded ? \"shrink\" : \"expand\"}!\n                        </div>\n                    </div>\n\n                    <br />\n\n                    <div style={{ color: \"grey\" }}>Exemplar Answer</div>\n\n                    <TaskSectionReview\n                        containerId={exemplarId}\n                        playing={audioState.exemplarPlaying}\n                        play={() => play(exemplarId)}\n                        stop={stopAllPlayback}\n                    />\n\n                    <br />\n\n                    <div style={{ color: \"grey\" }}>Your Answer</div>\n\n                    <TaskSectionReview\n                        containerId={responseId}\n                        playing={audioState.responsePlaiyng}\n                        play={() => play(responseId)}\n                        stop={stopAllPlayback}\n                    />\n\n                    <br />\n                    <br />\n\n                    <MarkScheme\n                        questionIdx={props.questionIdx}\n                        markScheme={question.markScheme}\n                        updateStation={props.updateStation}\n                    />\n\n                    <br />\n\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <div style={{ width: \"100px\" }}>\n                            <Link to={pathToPrev}>\n                                <MoveOn>Go Back</MoveOn>\n                            </Link>\n                        </div>\n\n                        <div style={{ width: \"100px\" }}>\n                            <Link to={pathToNext}>\n                                <MoveOn>Move On</MoveOn>\n                            </Link>\n                        </div>\n                    </div>\n                </Box>\n            </Container>\n        </CSSTransition>\n    );\n};\n\nexport default QuestionReviewPage;\n\nconst Img = styled.img<{ imageExpanded: boolean }>`\n    display: block;\n    margin: auto;\n    width: ${props => (props.imageExpanded ? \"100%\" : \"60%\")};\n    transition: width 0.2s;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}