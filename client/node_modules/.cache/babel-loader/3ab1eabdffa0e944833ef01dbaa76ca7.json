{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/TaskSection.tsx\",\n    _this = this,\n    _templateObject,\n    _templateObject2,\n    _templateObject3;\n\nimport { FaMicrophone, FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { responseId } from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TaskSection = function TaskSection(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlaybackControl, {\n      busy: props.playing,\n      onClick: props.playing ? props.stopEverything : props.playResponse,\n      display: props.responseAvailable,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n          busy: props.playing,\n          children: props.playing ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 42\n          }, _this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 56\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: responseId,\n        style: {\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MicControl, {\n      busy: props.recording,\n      onClick: props.recording ? props.stopEverything : props.recordResponse,\n      display: !props.responseAvailable,\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        busy: props.recording,\n        children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this), props.loadingRecorder && \"Please Wait....\", props.recording && \"Answer now!\", !(props.loadingRecorder || props.recording) && \"Click to answer!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TaskSection;\nexport default TaskSection;\nvar MicControl = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: \", \";\\n    border-style: none;\\n    background-color: transparent;\\n    border: 1px solid \", \";\\n    border-radius: 5px;\\n    color: \", \";\\n    margin: auto;\\n    width: 100%;\\n\"])), function (props) {\n  return props.display ? \"block\" : \"none\";\n}, function (props) {\n  return props.busy ? \"red\" : \"grey\";\n}, function (props) {\n  return props.busy ? \"red\" : \"#FAD000\";\n});\n_c2 = MicControl;\nvar PlaybackControl = styled.button(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    display: \", \";\\n    align-items: center;\\n    justify-content: center;\\n    border-style: none;\\n    background-color: transparent;\\n    border: 1px solid \", \";\\n    border-radius: 5px;\\n    color: \", \";\\n    margin: auto;\\n    width: 100%;\\n\"])), function (props) {\n  return props.display ? \"flex\" : \"none\";\n}, function (props) {\n  return props.busy ? \"red\" : \"grey\";\n}, function (props) {\n  return props.busy ? \"red\" : \"#FAD000\";\n});\n_c3 = PlaybackControl;\nvar ToggleButton = styled.button(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    height: 35px;\\n    width: 35px;\\n    border-radius: 50%;\\n    border: 1px solid \", \";\\n    color: \", \";\\n    margin: 10px;\\n    background-color: transparent;\\n\"])), function (props) {\n  return props.busy ? \"red\" : \"#FAD000\";\n}, function (props) {\n  return props.busy ? \"red\" : \"#FAD000\";\n});\n_c4 = ToggleButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TaskSection\");\n$RefreshReg$(_c2, \"MicControl\");\n$RefreshReg$(_c3, \"PlaybackControl\");\n$RefreshReg$(_c4, \"ToggleButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/TaskSection.tsx"],"names":["FaMicrophone","FaPause","FaPlay","styled","responseId","TaskSection","props","playing","stopEverything","playResponse","responseAvailable","width","recording","recordResponse","loadingRecorder","MicControl","button","display","busy","PlaybackControl","ToggleButton"],"mappings":"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","sourcesContent":["import { FaMicrophone, FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { responseId } from \"./types\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\n\ntype TaskSectionProps = {\n    recording: boolean;\n    recordResponse: () => void;\n    playing: boolean;\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAvailable: boolean;\n    loadingRecorder: boolean;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    return (\n        <div>\n            <PlaybackControl\n                busy={props.playing}\n                onClick={props.playing ? props.stopEverything : props.playResponse}\n                display={props.responseAvailable}\n            >\n                <div style={{ width: \"20%\" }}>\n                    <ToggleButton busy={props.playing}>\n                        {props.playing ? <FaPause /> : <FaPlay />}\n                    </ToggleButton>\n                </div>\n\n                <div id={responseId} style={{ width: \"50%\" }}></div>\n            </PlaybackControl>\n\n            <br />\n\n            <MicControl\n                busy={props.recording}\n                onClick={props.recording ? props.stopEverything : props.recordResponse}\n                display={!props.responseAvailable}\n            >\n                <ToggleButton busy={props.recording}>\n                    <FaMicrophone />\n                </ToggleButton>\n                {props.loadingRecorder && \"Please Wait....\"}\n                {props.recording && \"Answer now!\"}\n                {!(props.loadingRecorder || props.recording) && \"Click to answer!\"}\n            </MicControl>\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst MicControl = styled.button<{ busy: boolean; display: boolean }>`\n    display: ${props => (props.display ? \"block\" : \"none\")};\n    border-style: none;\n    background-color: transparent;\n    border: 1px solid ${props => (props.busy ? \"red\" : \"grey\")};\n    border-radius: 5px;\n    color: ${props => (props.busy ? \"red\" : \"#FAD000\")};\n    margin: auto;\n    width: 100%;\n`;\n\nconst PlaybackControl = styled.button<{ busy: boolean; display: boolean }>`\n    display: ${props => (props.display ? \"flex\" : \"none\")};\n    align-items: center;\n    justify-content: center;\n    border-style: none;\n    background-color: transparent;\n    border: 1px solid ${props => (props.busy ? \"red\" : \"grey\")};\n    border-radius: 5px;\n    color: ${props => (props.busy ? \"red\" : \"#FAD000\")};\n    margin: auto;\n    width: 100%;\n`;\n\nconst ToggleButton = styled.button<{ busy: boolean }>`\n    height: 35px;\n    width: 35px;\n    border-radius: 50%;\n    border: 1px solid ${props => (props.busy ? \"red\" : \"#FAD000\")};\n    color: ${props => (props.busy ? \"red\" : \"#FAD000\")};\n    margin: 10px;\n    background-color: transparent;\n`;\n"]},"metadata":{},"sourceType":"module"}