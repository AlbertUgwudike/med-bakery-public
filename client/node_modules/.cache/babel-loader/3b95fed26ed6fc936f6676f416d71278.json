{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  gain: 1\n};\nexport var createGainNodeConstructor = function createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(GainNode, _audioNodeConstructor);\n\n    var _super = _createSuper(GainNode);\n\n    function GainNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, GainNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Safari does not export the correct values for maxValue and minValue.\n\n      _this._gain = createAudioParam(_assertThisInitialized(_this), isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      return _this;\n    }\n\n    _createClass(GainNode, [{\n      key: \"gain\",\n      get: function get() {\n        return this._gain;\n      }\n    }]);\n\n    return GainNode;\n  }(audioNodeConstructor);\n};","map":null,"metadata":{},"sourceType":"module"}