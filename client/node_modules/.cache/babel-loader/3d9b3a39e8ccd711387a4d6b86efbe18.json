{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/LearningPointsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LearningPointsPage = props => {\n  _s();\n\n  const {\n    darkMode,\n    SERVER_URL,\n    token\n  } = useContext(MetaContext);\n  const [learningPointCategories, updateLearningPointCategories] = useState([]);\n  useEffect(() => {\n    axios.post(SERVER_URL + \"/questions/learningpoints\", {\n      token\n    }).then(res => {\n      updateLearningPointCategories(res.data);\n    });\n  }, []);\n\n  const renderLearningPoint = learningPoint => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(InfoDiv, {\n        darkMode: darkMode,\n        children: [learningPoint.learningPoint, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ScoreDiv, {\n            darkMode: darkMode,\n            children: [\"Attempted: \", learningPoint.totalAttempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ScoreDiv, {\n            darkMode: darkMode,\n            children: [\"Correct: \", learningPoint.correctAttempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderLearingPointCategory = (category, idx) => {\n    const toggleLearningPoints = () => {\n      updateLearningPointCategories(learningPointCategories.map((c, i) => i === idx ? { ...c,\n        selected: !c.selected\n      } : c));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(OptionButton, {\n        darkMode: darkMode,\n        onClick: toggleLearningPoints,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left'\n            },\n            children: category.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", category.selected ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 69\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Explanation, {\n          darkMode: darkMode,\n          expanded: category.selected,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              padding: 0,\n              listStyleType: \"none\"\n            },\n            children: category.learningPoints.map(renderLearningPoint)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: darkMode ? \"#FAD000\" : \"#7babff\"\n        },\n        children: \" Finals \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), \" Questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      darkMode: darkMode,\n      children: \" Learning Points \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        padding: 0,\n        margin: 0,\n        listStyleType: \"none\"\n      },\n      children: learningPointCategories.map(renderLearingPointCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LearningPointsPage, \"vXT21Fula+qt8xoDWMevNPT9VFg=\");\n\n_c = LearningPointsPage;\nexport default LearningPointsPage;\nconst OptionButton = styled.button`\n    display: block;\n    max-width: 800px;\n    border-radius: 10px;\n    font-size: 15px;\n    margin: 20px auto;\n    border: none;\n    padding: 8px 20px;\n    font-family: Proxima;\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    background-color: ${props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    &:hover {\n        background-color: ${props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\"}; \n    }\n`;\n_c2 = OptionButton;\nconst Explanation = styled.div`\n    background-color: ${props => props.darkMode ? \"#0D163C\" : \"#E6E5E0\"};\n    border-radius: 10px;\n    margin-top: ${props => props.expanded ? \"10px\" : \"0\"};\n    padding: ${props => props.expanded ? \"10px\" : 0};\n    font-size: 15px;\n    max-height: ${props => props.expanded ? \"300px\" : \"0\"};\n    overflow: ${props => props.expanded ? \"scroll\" : \"hidden\"};\n    text-align: left;\n`;\n_c3 = Explanation;\nconst InfoDiv = styled.div`\n    background-color: ${props => props.darkMode ? \"rgb(27, 39, 94)\" : \"#F6F5F0\"};\n    border-radius: 10px;\n    margin: 10px;\n    padding: 10px;\n`;\n_c4 = InfoDiv;\nconst ScoreDiv = styled.div`\n    background-color: ${props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\"}; \n    border-radius: 5px;\n    font-size: 10px;\n    display: inline-block;\n    margin: 5px;\n    padding: 5px;\n`;\n_c5 = ScoreDiv;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"LearningPointsPage\");\n$RefreshReg$(_c2, \"OptionButton\");\n$RefreshReg$(_c3, \"Explanation\");\n$RefreshReg$(_c4, \"InfoDiv\");\n$RefreshReg$(_c5, \"ScoreDiv\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/LearningPointsPage.tsx"],"names":["axios","useContext","useEffect","useState","styled","FaArrowUp","FaArrowDown","Title","Subtitle","MetaContext","LearningPointsPage","props","darkMode","SERVER_URL","token","learningPointCategories","updateLearningPointCategories","post","then","res","data","renderLearningPoint","learningPoint","totalAttempts","correctAttempts","renderLearingPointCategory","category","idx","toggleLearningPoints","map","c","i","selected","display","justifyContent","textAlign","title","padding","listStyleType","learningPoints","color","margin","OptionButton","button","Explanation","div","expanded","InfoDiv","ScoreDiv"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport MetaContext from \"../../MetaContext\";\n\ntype LearningPointsPageProps = { }\n\ntype LearningPoint = {\n    learningPointIdx: number;\n    learningPoint: string;\n    timeLastUpdated: number;\n    categories: string[];\n    correctAttempts: number;\n    totalAttempts: number;\n}\n\ntype LearningPointCategory = {\n    title: string;\n    learningPoints: LearningPoint[];\n    selected: boolean;\n}\n\nconst LearningPointsPage = (props: LearningPointsPageProps) => {\n\n    const { darkMode, SERVER_URL, token } = useContext(MetaContext);\n    const [learningPointCategories, updateLearningPointCategories] = useState([] as LearningPointCategory[])\n\n    useEffect( () => {\n        axios.post(SERVER_URL + \"/questions/learningpoints\", { token })\n            .then(res => {\n                updateLearningPointCategories(res.data)\n            });\n    }, [] )\n\n    const renderLearningPoint = (learningPoint: LearningPoint) => {\n        return (\n            <li>\n                <InfoDiv darkMode = { darkMode }>\n                    { learningPoint.learningPoint }\n                    <div>\n                        <ScoreDiv darkMode = { darkMode }>Attempted: { learningPoint.totalAttempts }</ScoreDiv>\n                        <ScoreDiv darkMode = { darkMode }>Correct: { learningPoint.correctAttempts }</ScoreDiv>\n                    </div>\n                </InfoDiv>\n            </li>\n        )\n    }\n\n    const renderLearingPointCategory = (category: LearningPointCategory, idx: number) => {\n\n        const toggleLearningPoints = () => {\n            updateLearningPointCategories(learningPointCategories.map((c, i) => i === idx ? { ...c, selected: !c.selected } : c));\n        }\n\n        return (\n            <li>\n                <OptionButton darkMode = { darkMode } onClick = { toggleLearningPoints } >\n\n                    <div style = {{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <div style = {{ textAlign: 'left' }}>{ category.title }</div>\n                        <div> { category.selected ? <FaArrowUp /> : <FaArrowDown /> } </div>\n                    </div>\n                    \n                    <Explanation darkMode = { darkMode } expanded = { category.selected }>\n                        <ul style = {{ padding: 0, listStyleType: \"none\" }}>\n                            { category.learningPoints.map(renderLearningPoint) }\n                        </ul>\n                    </Explanation>\n\n                </OptionButton>\n            </li>\n        )\n    }\n\n    return (\n        <>\n\n            <Title darkMode = { darkMode }>\n                <span style = {{ color: (darkMode ? \"#FAD000\" : \"#7babff\") }}> Finals </span> Questions\n            </Title>\n            \n            <Subtitle darkMode = { darkMode }> Learning Points </Subtitle>\n\n            <ul style = {{ padding: 0, margin: 0, listStyleType: \"none\" }}>\n                { learningPointCategories.map(renderLearingPointCategory) }\n            </ul>\n\n        </>\n    )\n}\n\nexport default LearningPointsPage;\n\nconst OptionButton = styled.button<{ darkMode: boolean }>`\n    display: block;\n    max-width: 800px;\n    border-radius: 10px;\n    font-size: 15px;\n    margin: 20px auto;\n    border: none;\n    padding: 8px 20px;\n    font-family: Proxima;\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    background-color: ${ props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"  };\n    &:hover {\n        background-color: ${ props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\" }; \n    }\n`\n\nconst Explanation = styled.div<{ darkMode: boolean, expanded: boolean }>`\n    background-color: ${ props => props.darkMode ? \"#0D163C\" : \"#E6E5E0\" };\n    border-radius: 10px;\n    margin-top: ${ props => props.expanded ? \"10px\" : \"0\" };\n    padding: ${ props => props.expanded ? \"10px\" : 0 };\n    font-size: 15px;\n    max-height: ${ props => props.expanded ? \"300px\" : \"0\" };\n    overflow: ${ props => props.expanded ? \"scroll\" : \"hidden\" };\n    text-align: left;\n`\n\nconst InfoDiv = styled.div<{ darkMode: boolean }>`\n    background-color: ${ props => props.darkMode ? \"rgb(27, 39, 94)\" : \"#F6F5F0\" };\n    border-radius: 10px;\n    margin: 10px;\n    padding: 10px;\n` \n\nconst ScoreDiv = styled.div<{ darkMode: boolean }>`\n    background-color: ${ props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\" }; \n    border-radius: 5px;\n    font-size: 10px;\n    display: inline-block;\n    margin: 5px;\n    padding: 5px;\n` "]},"metadata":{},"sourceType":"module"}