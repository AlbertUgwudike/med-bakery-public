{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/AlphaTimer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { Timer } from \"./Common\";\nimport { useLoopTime, convertToString } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimerApparatus = function TimerApparatus(props) {\n  _s();\n\n  var secondTicker = useLoopTime(props.startTime - 1);\n  useEffect(function () {\n    return function () {\n      props.updateStation(function (station) {\n        return _objectSpread(_objectSpread({}, station), {}, {\n          timePermitted: secondTicker\n        });\n      });\n    };\n  });\n  if (secondTicker <= 0) props.nextFunc();\n  return /*#__PURE__*/_jsxDEV(Timer, {\n    children: [\" \", convertToString(secondTicker)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(TimerApparatus, \"wBXWkymg+BNQRqOUS05bbT4yHLY=\", false, function () {\n  return [useLoopTime];\n});\n\n_c = TimerApparatus;\nexport default TimerApparatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerApparatus\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/AlphaTimer.tsx"],"names":["useEffect","Timer","useLoopTime","convertToString","TimerApparatus","props","secondTicker","startTime","updateStation","station","timePermitted","nextFunc"],"mappings":";;;;;;AAAA,SAAmCA,SAAnC,QAAoD,OAApD;AAEA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,SAA7C;;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAgC;AAAA;;AACnD,MAAMC,YAAY,GAAGJ,WAAW,CAACG,KAAK,CAACE,SAAN,GAAkB,CAAnB,CAAhC;AAEAP,EAAAA,SAAS,CAAC;AAAA,WAAM,YAAM;AAClBK,MAAAA,KAAK,CAACG,aAAN,CAAoB,UAAAC,OAAO;AAAA,+CACpBA,OADoB;AAEvBC,UAAAA,aAAa,EAAEJ;AAFQ;AAAA,OAA3B;AAIH,KALS;AAAA,GAAD,CAAT;AAOA,MAAIA,YAAY,IAAI,CAApB,EAAuBD,KAAK,CAACM,QAAN;AAEvB,sBAAO,QAAC,KAAD;AAAA,oBAASR,eAAe,CAACG,YAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAbD;;GAAMF,c;UACmBF,W;;;KADnBE,c;AAeN,eAAeA,cAAf","sourcesContent":["import { Dispatch, SetStateAction, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Timer } from \"./Common\";\nimport { useLoopTime, convertToString } from \"./hooks\";\nimport { Station } from \"./types\";\n\ntype TimerApparatusProps = {\n    startTime: number;\n    nextFunc: () => void;\n    updateStation: Dispatch<SetStateAction<Station>>;\n};\n\nconst TimerApparatus = (props: TimerApparatusProps) => {\n    const secondTicker = useLoopTime(props.startTime - 1);\n\n    useEffect(() => () => {\n        props.updateStation(station => ({\n            ...station,\n            timePermitted: secondTicker,\n        }));\n    });\n\n    if (secondTicker <= 0) props.nextFunc();\n\n    return <Timer> {convertToString(secondTicker)}</Timer>;\n};\n\nexport default TimerApparatus;\n"]},"metadata":{},"sourceType":"module"}