{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReview/QuestionReviewPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Container } from \"../Common\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionReviewContent from \"./QuestionReviewContent\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar QuestionReviewPage = function QuestionReviewPage(props) {\n  _s();\n\n  var history = useHistory();\n  var idx = props.questionIdx;\n  var questionCount = props.station.questions.length;\n\n  var nextFunc = function nextFunc() {\n    return idx.curr === questionCount - 1 ? history.push(\"/OSCE/Station/MarkReview\") : props.updateIdx({\n      prev: idx.curr,\n      curr: idx.curr + 1\n    });\n  };\n\n  var prevFunc = function prevFunc() {\n    return idx.curr === 0 ? {} : props.updateIdx({\n      prev: idx.curr,\n      curr: idx.curr - 1\n    });\n  };\n\n  var transitionStyles = props.questionIdx.curr < props.questionIdx.prev ? {\n    entering: {\n      transform: \"translateY(-150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(150%)\"\n    },\n    exited: {\n      transform: \"translateY(-150%)\"\n    }\n  } : {\n    entering: {\n      transform: \"translateY(150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(-150%)\"\n    },\n    exited: {\n      transform: \"translateY(150%)\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        updateStation: props.updateStation,\n        station: props.station,\n        handleExit: props.handleExit,\n        questionIdx: props.questionIdx,\n        title: \"Review\",\n        percentage: 10 + 100 * idx.curr / questionCount,\n        timer: false,\n        nextFunc: nextFunc,\n        prevFunc: prevFunc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), props.station.questions.map(function (q, questionIdx) {\n        return /*#__PURE__*/_jsxDEV(Transition, {\n          in: questionIdx === props.questionIdx.curr,\n          timeout: 500,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: function children(state) {\n            return /*#__PURE__*/_jsxDEV(QuestionReviewContent, {\n              question: q,\n              questionIdx: questionIdx,\n              transitionStyle: transitionStyles[state],\n              updateStation: props.updateStation,\n              reviewMode: props.reviewMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionReviewPage, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = QuestionReviewPage;\nexport default QuestionReviewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionReviewPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReview/QuestionReviewPage.tsx"],"names":["Container","Transition","QuestionReviewContent","useHistory","Header","QuestionReviewPage","props","history","idx","questionIdx","questionCount","station","questions","length","nextFunc","curr","push","updateIdx","prev","prevFunc","transitionStyles","entering","transform","entered","exiting","exited","textAlign","display","gridTemplateColumns","updateStation","handleExit","map","q","state","reviewMode"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Container } from \"../Common\";\nimport { Question, Station } from \"../types\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionReviewContent from \"./QuestionReviewContent\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../Header\";\n\ntype QuestionReviewPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    questionIdx: { prev: number; curr: number };\n    updateIdx: Dispatch<SetStateAction<{ prev: number; curr: number }>>;\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst QuestionReviewPage = (props: QuestionReviewPageProps) => {\n    const history = useHistory();\n    const idx = props.questionIdx;\n    const questionCount = props.station.questions.length;\n\n    const nextFunc = () =>\n        idx.curr === questionCount - 1\n            ? history.push(\"/OSCE/Station/MarkReview\")\n            : props.updateIdx({ prev: idx.curr, curr: idx.curr + 1 });\n\n    const prevFunc = () =>\n        idx.curr === 0 ? {} : props.updateIdx({ prev: idx.curr, curr: idx.curr - 1 });\n\n    const transitionStyles: { [key: string]: any } =\n        props.questionIdx.curr < props.questionIdx.prev\n            ? {\n                  entering: { transform: \"translateY(-150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(150%)\" },\n                  exited: { transform: \"translateY(-150%)\" },\n              }\n            : {\n                  entering: { transform: \"translateY(150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(-150%)\" },\n                  exited: { transform: \"translateY(150%)\" },\n              };\n\n    return (\n        <Container style={{ textAlign: \"center\" }}>\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr\",\n                }}\n            >\n                <Header\n                    updateStation={props.updateStation}\n                    station={props.station}\n                    handleExit={props.handleExit}\n                    questionIdx={props.questionIdx}\n                    title={\"Review\"}\n                    percentage={10 + (100 * idx.curr) / questionCount}\n                    timer={false}\n                    nextFunc={nextFunc}\n                    prevFunc={prevFunc}\n                />\n                {props.station.questions.map((q, questionIdx) => (\n                    <Transition\n                        in={questionIdx === props.questionIdx.curr}\n                        timeout={500}\n                        mountOnEnter\n                        unmountOnExit\n                    >\n                        {state => (\n                            <QuestionReviewContent\n                                question={q}\n                                questionIdx={questionIdx}\n                                transitionStyle={transitionStyles[state]}\n                                updateStation={props.updateStation}\n                                reviewMode={props.reviewMode}\n                            />\n                        )}\n                    </Transition>\n                ))}\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionReviewPage;\n"]},"metadata":{},"sourceType":"module"}