{"ast":null,"code":"import _slicedToArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{Redirect,Route,Switch}from\"react-router-dom\";import Brief from\"./Brief\";import MarkReviewPage from\"./MarkReviewPage\";import QuestionPage from\"./Question/QuestionPage\";import QuestionReviewPage from\"./QuestionReview/QuestionReviewPage\";import Summary from\"./Summary\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StationPage=function StationPage(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),questionIdx=_useState2[0],updateQuestionIdx=_useState2[1];if(props.station.id===\"NullStation\")return/*#__PURE__*/_jsx(Redirect,{to:\"/OSCE\"});return/*#__PURE__*/_jsx(\"div\",{style:{height:\"100vh\",overflow:\"hidden\"},children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/OSCE/Station/Brief\",children:/*#__PURE__*/_jsx(Brief,{updateStation:props.updateStation,station:props.station,handleExit:props.handleExit,questionIdx:questionIdx})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/OSCE/Station/Question\",children:/*#__PURE__*/_jsx(QuestionPage,{station:props.station,updateStation:props.updateStation,questionIdx:questionIdx,updateQuestionIdx:updateQuestionIdx,handleExit:props.handleExit})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/OSCE/Station/Summary\",children:/*#__PURE__*/_jsx(Summary,{updateStation:props.updateStation,updateIdx:updateQuestionIdx,station:props.station,questionIdx:questionIdx,handleExit:props.handleExit})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/OSCE/Station/Review\",children:/*#__PURE__*/_jsx(QuestionReviewPage,{station:props.station,updateStation:props.updateStation,questionIdx:questionIdx,updateIdx:updateQuestionIdx,reviewMode:props.reviewMode,handleExit:props.handleExit})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/OSCE/Station/MarkReview\",children:/*#__PURE__*/_jsx(MarkReviewPage,{station:props.station,updateStation:props.updateStation,reviewMode:props.reviewMode,handleExit:props.handleExit,updateIdx:updateQuestionIdx,questionIdx:questionIdx})})]})});};export default StationPage;","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx"],"names":["useState","Redirect","Route","Switch","Brief","MarkReviewPage","QuestionPage","QuestionReviewPage","Summary","StationPage","props","questionIdx","updateQuestionIdx","station","id","height","overflow","updateStation","handleExit","reviewMode"],"mappings":"iIAAA,OAA8CA,QAA9C,KAA8D,OAA9D,CACA,OAAwBC,QAAxB,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAoE,kBAApE,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qCAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAWA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA6B,CAC7C,cAAyCV,QAAQ,CAAC,CAAD,CAAjD,wCAAOW,WAAP,eAAoBC,iBAApB,eAEA,GAAIF,KAAK,CAACG,OAAN,CAAcC,EAAd,GAAqB,aAAzB,CAAwC,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EAAP,CAExC,mBACI,YACI,KAAK,CAAE,CACHC,MAAM,CAAE,OADL,CAEHC,QAAQ,CAAE,QAFP,CADX,uBAMI,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,qBAAlB,uBACI,KAAC,KAAD,EACI,aAAa,CAAEN,KAAK,CAACO,aADzB,CAEI,OAAO,CAAEP,KAAK,CAACG,OAFnB,CAGI,UAAU,CAAEH,KAAK,CAACQ,UAHtB,CAII,WAAW,CAAEP,WAJjB,EADJ,EADJ,cAUI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAE,wBAAnB,uBACI,KAAC,YAAD,EACI,OAAO,CAAED,KAAK,CAACG,OADnB,CAEI,aAAa,CAAEH,KAAK,CAACO,aAFzB,CAGI,WAAW,CAAEN,WAHjB,CAII,iBAAiB,CAAEC,iBAJvB,CAKI,UAAU,CAAEF,KAAK,CAACQ,UALtB,EADJ,EAVJ,cAoBI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,uBAAlB,uBACI,KAAC,OAAD,EACI,aAAa,CAAER,KAAK,CAACO,aADzB,CAEI,SAAS,CAAEL,iBAFf,CAGI,OAAO,CAAEF,KAAK,CAACG,OAHnB,CAII,WAAW,CAAEF,WAJjB,CAKI,UAAU,CAAED,KAAK,CAACQ,UALtB,EADJ,EApBJ,cA8BI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAE,sBAAnB,uBACI,KAAC,kBAAD,EACI,OAAO,CAAER,KAAK,CAACG,OADnB,CAEI,aAAa,CAAEH,KAAK,CAACO,aAFzB,CAGI,WAAW,CAAEN,WAHjB,CAII,SAAS,CAAEC,iBAJf,CAKI,UAAU,CAAEF,KAAK,CAACS,UALtB,CAMI,UAAU,CAAET,KAAK,CAACQ,UANtB,EADJ,EA9BJ,cAyCI,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,0BAAlB,uBACI,KAAC,cAAD,EACI,OAAO,CAAER,KAAK,CAACG,OADnB,CAEI,aAAa,CAAEH,KAAK,CAACO,aAFzB,CAGI,UAAU,CAAEP,KAAK,CAACS,UAHtB,CAII,UAAU,CAAET,KAAK,CAACQ,UAJtB,CAKI,SAAS,CAAEN,iBALf,CAMI,WAAW,CAAED,WANjB,EADJ,EAzCJ,GANJ,EADJ,CA6DH,CAlED,CAoEA,cAAeF,CAAAA,WAAf","sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./Question/QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReview/QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { AnsweredStationDetails, Question, Station } from \"./types\";\n\ntype StationPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    answeredStations: AnsweredStationDetails[];\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst StationPage = (props: StationPageProps) => {\n    const [questionIdx, updateQuestionIdx] = useState(0);\n\n    if (props.station.id === \"NullStation\") return <Redirect to=\"/OSCE\" />;\n\n    return (\n        <div\n            style={{\n                height: \"100vh\",\n                overflow: \"hidden\",\n            }}\n        >\n            <Switch>\n                <Route exact path=\"/OSCE/Station/Brief\">\n                    <Brief\n                        updateStation={props.updateStation}\n                        station={props.station}\n                        handleExit={props.handleExit}\n                        questionIdx={questionIdx}\n                    />\n                </Route>\n\n                <Route exact path={\"/OSCE/Station/Question\"}>\n                    <QuestionPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        questionIdx={questionIdx}\n                        updateQuestionIdx={updateQuestionIdx}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path=\"/OSCE/Station/Summary\">\n                    <Summary\n                        updateStation={props.updateStation}\n                        updateIdx={updateQuestionIdx}\n                        station={props.station}\n                        questionIdx={questionIdx}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path={\"/OSCE/Station/Review\"}>\n                    <QuestionReviewPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        questionIdx={questionIdx}\n                        updateIdx={updateQuestionIdx}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                    />\n                </Route>\n\n                <Route exact path=\"/OSCE/Station/MarkReview\">\n                    <MarkReviewPage\n                        station={props.station}\n                        updateStation={props.updateStation}\n                        reviewMode={props.reviewMode}\n                        handleExit={props.handleExit}\n                        updateIdx={updateQuestionIdx}\n                        questionIdx={questionIdx}\n                    />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default StationPage;\n"]},"metadata":{},"sourceType":"module"}