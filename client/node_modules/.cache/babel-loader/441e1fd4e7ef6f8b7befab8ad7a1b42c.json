{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport TaskSection from \"./TaskSection\";\nimport { promptId, responseId, startAudioRecordingId } from \"./types\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport { generateWaveSurfer, playStartTone } from \"./hooks\";\nimport recordingStartAudioUrl from \"./media/start.mp3\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { copy } from \"../ECGPage/Functions/utility\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar initialAudioState = {\n  promptAudio: null,\n  responseWaveSurfer: undefined,\n  promptPlaying: true,\n  responsePlaying: false,\n  recording: false\n};\n\nvar QuestionPage = function QuestionPage(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageExpanded = _useState2[0],\n      updateImageExpanded = _useState2[1];\n\n  var _useState3 = useState(initialAudioState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioState = _useState4[0],\n      updateAudioState = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingRecorder = _useState6[0],\n      updateLoadingRecorder = _useState6[1];\n\n  var _useReactMediaRecorde = useReactMediaRecorder({\n    audio: true,\n    onStart: function onStart() {\n      updateLoadingRecorder(false);\n      updateAudioState(function (as) {\n        return _objectSpread(_objectSpread({}, as), {}, {\n          recording: true\n        });\n      });\n      playStartTone();\n    },\n    onStop: function onStop(blobUrl, _) {\n      playStartTone();\n      updateLoadingRecorder(false);\n      props.updateStation(function (s) {\n        s.questions[props.questionIdx].responseAudio = blobUrl ? blobUrl : \"\";\n        return copy(s); // because object is nested, react shallow compares\n      });\n    }\n  }),\n      startRecording = _useReactMediaRecorde.startRecording,\n      stopRecording = _useReactMediaRecorde.stopRecording;\n\n  var pathToNext = props.questionIdx === props.station.questions.length - 1 ? \"/OSCE/Station/Summary\" : \"/OSCE/Station/\" + (props.questionIdx + 1);\n  var question = props.station.questions[props.questionIdx];\n\n  var stopEverything = function stopEverything() {\n    var _audioState$promptAud, _audioState$responseW;\n\n    (_audioState$promptAud = audioState.promptAudio) === null || _audioState$promptAud === void 0 ? void 0 : _audioState$promptAud.pause();\n    (_audioState$responseW = audioState.responseWaveSurfer) === null || _audioState$responseW === void 0 ? void 0 : _audioState$responseW.stop();\n    if (audioState.recording) stopRecording();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: false,\n        responsePlaying: false,\n        recording: false\n      });\n    });\n  };\n\n  var play = function play(id) {\n    var _audioState$promptAud2, _audioState$responseW2;\n\n    stopEverything();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: id === promptId,\n        responsePlaying: id === responseId\n      });\n    });\n    if (id === promptId) (_audioState$promptAud2 = audioState.promptAudio) === null || _audioState$promptAud2 === void 0 ? void 0 : _audioState$promptAud2.play();else (_audioState$responseW2 = audioState.responseWaveSurfer) === null || _audioState$responseW2 === void 0 ? void 0 : _audioState$responseW2.play();\n  };\n\n  var record = function record() {\n    stopEverything();\n    updateLoadingRecorder(true);\n    startRecording();\n  };\n\n  useEffect(function () {\n    var container = document.getElementById(responseId);\n    if (container) container.innerHTML = \"\";\n    updateAudioState(_objectSpread(_objectSpread({}, initialAudioState), {}, {\n      promptAudio: document.getElementById(promptId),\n      responseWaveSurfer: generateWaveSurfer(responseId, question.responseAudio, stopEverything)\n    }));\n  }, [question.responseAudio]); // cease playback when compnent unmounts <=== six hour bug :)\n\n  useEffect(function () {\n    return stopEverything;\n  }, [audioState.promptAudio, audioState.responseWaveSurfer]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: props.match,\n    timeout: 300,\n    classNames: \"page\",\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(QuestionPrompt, {\n            question: question,\n            toggle: function toggle() {\n              audioState.promptPlaying ? stopEverything() : play(promptId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Img, {\n              src: question.img,\n              imageExpanded: imageExpanded,\n              onClick: function onClick() {\n                return updateImageExpanded(!imageExpanded);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, _this), \"Click to \", imageExpanded ? \"shrink\" : \"expand\", \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TaskSection, {\n            recording: audioState.recording,\n            recordResponse: record,\n            playing: audioState.responsePlaying,\n            playResponse: function playResponse() {\n              return play(responseId);\n            },\n            stopEverything: stopEverything,\n            responseAvailable: question.responseAudio !== \"\",\n            loadingRecorder: loadingRecorder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, _this), question.responseAudio !== \"\" || audioState.recording ? /*#__PURE__*/_jsxDEV(Link, {\n            to: pathToNext,\n            onClick: stopEverything,\n            children: /*#__PURE__*/_jsxDEV(MoveOn, {\n              children: \"Move On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: recordingStartAudioUrl,\n          id: startAudioRecordingId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionPage, \"IoYcGLBrXDHOJ7wp4BiMEvGuZ7k=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = QuestionPage;\nexport default QuestionPage;\nvar Img = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    width: \", \";\\n    transition: width 0.2s;\\n    &:hover {\\n        cursor: pointer;\\n    }\\n\"])), function (props) {\n  return props.imageExpanded ? \"100%\" : \"60%\";\n});\n_c2 = Img;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuestionPage\");\n$RefreshReg$(_c2, \"Img\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionPage.tsx"],"names":["useEffect","useState","Link","styled","Box","MoveOn","Container","TaskSection","promptId","responseId","startAudioRecordingId","QuestionPrompt","generateWaveSurfer","playStartTone","recordingStartAudioUrl","useReactMediaRecorder","CSSTransition","copy","initialAudioState","promptAudio","responseWaveSurfer","undefined","promptPlaying","responsePlaying","recording","QuestionPage","props","imageExpanded","updateImageExpanded","audioState","updateAudioState","loadingRecorder","updateLoadingRecorder","audio","onStart","as","onStop","blobUrl","_","updateStation","s","questions","questionIdx","responseAudio","startRecording","stopRecording","pathToNext","station","length","question","stopEverything","pause","stop","play","id","record","container","document","getElementById","innerHTML","match","textAlign","img","Img"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport TaskSection from \"./TaskSection\";\nimport { promptId, Question, responseId, startAudioRecordingId, Station } from \"./types\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport { generateWaveSurfer, playStartTone } from \"./hooks\";\nimport recordingStartAudioUrl from \"./media/start.mp3\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { copy } from \"../ECGPage/Functions/utility\";\nimport \"./styles.css\";\n\ntype QuestionProps = {\n    station: Station;\n    questionIdx: number;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    handleExit: (questions: Question[], tok: string) => void;\n    match: boolean;\n};\n\ntype AudioState = {\n    promptAudio: HTMLAudioElement | null;\n    responseWaveSurfer: WaveSurfer | undefined;\n    promptPlaying: boolean;\n    responsePlaying: boolean;\n    recording: boolean;\n};\n\nconst initialAudioState: AudioState = {\n    promptAudio: null,\n    responseWaveSurfer: undefined,\n    promptPlaying: true,\n    responsePlaying: false,\n    recording: false,\n};\n\nconst QuestionPage = (props: QuestionProps) => {\n    const [imageExpanded, updateImageExpanded] = useState(false);\n    const [audioState, updateAudioState] = useState<AudioState>(initialAudioState);\n    const [loadingRecorder, updateLoadingRecorder] = useState(false);\n\n    const { startRecording, stopRecording } = useReactMediaRecorder({\n        audio: true,\n        onStart: () => {\n            updateLoadingRecorder(false);\n            updateAudioState(as => ({ ...as, recording: true }));\n            playStartTone();\n        },\n        onStop: (blobUrl, _) => {\n            playStartTone();\n            updateLoadingRecorder(false);\n            props.updateStation(s => {\n                s.questions[props.questionIdx].responseAudio = blobUrl ? blobUrl : \"\";\n                return copy(s); // because object is nested, react shallow compares\n            });\n        },\n    });\n\n    const pathToNext =\n        props.questionIdx === props.station.questions.length - 1\n            ? \"/OSCE/Station/Summary\"\n            : \"/OSCE/Station/\" + (props.questionIdx + 1);\n    const question = props.station.questions[props.questionIdx];\n\n    const stopEverything = () => {\n        audioState.promptAudio?.pause();\n        audioState.responseWaveSurfer?.stop();\n        if (audioState.recording) stopRecording();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: false,\n            responsePlaying: false,\n            recording: false,\n        }));\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: id === promptId,\n            responsePlaying: id === responseId,\n        }));\n\n        if (id === promptId) audioState.promptAudio?.play();\n        else audioState.responseWaveSurfer?.play();\n    };\n\n    const record = () => {\n        stopEverything();\n        updateLoadingRecorder(true);\n        startRecording();\n    };\n\n    useEffect(() => {\n        const container = document.getElementById(responseId);\n        if (container) container.innerHTML = \"\";\n\n        updateAudioState({\n            ...initialAudioState,\n            promptAudio: document.getElementById(promptId) as HTMLAudioElement,\n            responseWaveSurfer: generateWaveSurfer(\n                responseId,\n                question.responseAudio,\n                stopEverything\n            ),\n        });\n    }, [question.responseAudio]);\n\n    // cease playback when compnent unmounts <=== six hour bug :)\n    useEffect(() => stopEverything, [audioState.promptAudio, audioState.responseWaveSurfer]);\n\n    return (\n        <CSSTransition in={props.match} timeout={300} classNames=\"page\" unmountOnExit>\n            <div className=\"page\">\n                <Container className=\"page\">\n                    <Box style={{ textAlign: \"center\" }}>\n                        <QuestionPrompt\n                            question={question}\n                            toggle={() => {\n                                audioState.promptPlaying ? stopEverything() : play(promptId);\n                            }}\n                        />\n\n                        <br></br>\n\n                        <div style={{ textAlign: \"center\" }}>\n                            <Img\n                                src={question.img}\n                                imageExpanded={imageExpanded}\n                                onClick={() => updateImageExpanded(!imageExpanded)}\n                            ></Img>\n                            Click to {imageExpanded ? \"shrink\" : \"expand\"}!\n                        </div>\n\n                        <br></br>\n\n                        <TaskSection\n                            recording={audioState.recording}\n                            recordResponse={record}\n                            playing={audioState.responsePlaying}\n                            playResponse={() => play(responseId)}\n                            stopEverything={stopEverything}\n                            responseAvailable={question.responseAudio !== \"\"}\n                            loadingRecorder={loadingRecorder}\n                        />\n\n                        <br></br>\n\n                        {question.responseAudio !== \"\" || audioState.recording ? (\n                            <Link to={pathToNext} onClick={stopEverything}>\n                                <MoveOn>Move On</MoveOn>\n                            </Link>\n                        ) : (\n                            <></>\n                        )}\n                    </Box>\n\n                    <audio src={recordingStartAudioUrl} id={startAudioRecordingId} />\n                </Container>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default QuestionPage;\n\nconst Img = styled.img<{ imageExpanded: boolean }>`\n    display: block;\n    margin: auto;\n    width: ${props => (props.imageExpanded ? \"100%\" : \"60%\")};\n    transition: width 0.2s;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}