{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/HomePage/LoginLogout.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport { refreshTokenSetup } from '../../functions';\nimport styled from 'styled-components';\nimport { FaSignOutAlt } from 'react-icons/fa';\nimport { useContext } from 'react';\nimport MetaContext from '../../MetaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = \"439563851182-mo2cj9djg7f0u19ctnjp1864tdaredkc.apps.googleusercontent.com\";\nexport const Login = props => {\n  _s();\n\n  const {\n    SERVER_URL\n  } = useContext(MetaContext);\n\n  const onSuccess = res => {\n    axios.post(SERVER_URL + \"/users/googlelogin\", {\n      token: res.tokenId\n    }).then(axres => {\n      if (axres.data.success) {\n        props.setToken(res.tokenId);\n        refreshTokenSetup(res, props.setToken);\n        window.location.href = \"/User\";\n      }\n    });\n  };\n\n  const onFailure = res => {\n    console.log(\"err: \", res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: clientID,\n    buttonText: \"LOGIN\",\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    isSignedIn: true,\n    render: props => /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: props.onClick,\n      disabled: props.disabled,\n      id: \"loginboi\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login / Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"eICSKTBQ36V3gAq74Fgx3hoxWBI=\");\n\n_c = Login;\nexport const LoginButton = styled.button`\n    display: inline-block;\n    height: 50px;\n    width: 300px;\n    margin: 10px;\n    padding: 0;\n    font-size: 30px;\n    border: 2px solid #FAD000;\n    border-radius: 10px;\n    background-color: transparent;\n    color: #FAD000;\n    &:hover {\n        background-color: #FAD000;\n        color: black;\n    }\n\n    @media (max-width: 600px) {\n        height: 40px;\n        width: 150px;\n        font-size: 15px;\n    }\n`;\n_c2 = LoginButton;\nexport const Logout = props => {\n  _s2();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n\n  const onSuccess = () => {\n    console.log(\"we logged out!\");\n    props.setToken(\"\");\n    window.location.href = '/';\n    window.analytics.track({\n      userId: clientID,\n      event: \"User Logged out\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogout, {\n    clientId: clientID,\n    buttonText: \"LOGOUT\",\n    onLogoutSuccess: onSuccess,\n    render: prps => /*#__PURE__*/_jsxDEV(LogoutButton, {\n      darkMode: darkMode,\n      onClick: prps.onClick,\n      disabled: prps.disabled,\n      children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), \" \\xA0 Logout \\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Logout, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c3 = Logout;\nconst LogoutButton = styled.button`\n    border-style: none;\n    background-color: transparent;\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    width: 100%;\n    text-align: left;\n    padding: 10px 20px;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n_c4 = LogoutButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginButton\");\n$RefreshReg$(_c3, \"Logout\");\n$RefreshReg$(_c4, \"LogoutButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/HomePage/LoginLogout.tsx"],"names":["GoogleLogin","GoogleLogout","axios","refreshTokenSetup","styled","FaSignOutAlt","useContext","MetaContext","clientID","Login","props","SERVER_URL","onSuccess","res","post","token","tokenId","then","axres","data","success","setToken","window","location","href","onFailure","console","log","onClick","disabled","LoginButton","button","Logout","darkMode","analytics","track","userId","event","prps","LogoutButton"],"mappings":"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","sourcesContent":["import { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nimport { refreshTokenSetup } from '../../functions';\nimport styled from 'styled-components';\nimport { FaSignOutAlt } from 'react-icons/fa';\nimport { useContext, useState } from 'react';\nimport MetaContext from '../../MetaContext';\n\nconst clientID = \"439563851182-mo2cj9djg7f0u19ctnjp1864tdaredkc.apps.googleusercontent.com\";\n\nexport const Login = (props: { setToken: (tokenId: string) => void }) => {\n\n    const { SERVER_URL } = useContext(MetaContext);\n\n    const onSuccess = (res: any) => {\n        axios.post(SERVER_URL + \"/users/googlelogin\", { token: res.tokenId })\n             .then(axres => {\n                 if (axres.data.success) {\n                    props.setToken(res.tokenId);\n                    refreshTokenSetup(res, props.setToken)\n                    window.location.href = \"/User\";\n                 }\n             });\n    }\n\n    const onFailure = (res: any) => {\n        console.log(\"err: \", res);\n    }\n    \n    return (\n        <GoogleLogin\n            clientId = { clientID }\n            buttonText = \"LOGIN\"\n            onSuccess = { onSuccess }\n            onFailure = { onFailure }\n            isSignedIn = { true }\n            render = { \n                props => \n                    <LoginButton onClick = { props.onClick } disabled = { props.disabled } id = \"loginboi\">\n                        <div>Login / Sign Up</div>\n                    </LoginButton>\n            }\n        />\n    );\n}\n\nexport const LoginButton = styled.button`\n    display: inline-block;\n    height: 50px;\n    width: 300px;\n    margin: 10px;\n    padding: 0;\n    font-size: 30px;\n    border: 2px solid #FAD000;\n    border-radius: 10px;\n    background-color: transparent;\n    color: #FAD000;\n    &:hover {\n        background-color: #FAD000;\n        color: black;\n    }\n\n    @media (max-width: 600px) {\n        height: 40px;\n        width: 150px;\n        font-size: 15px;\n    }\n`\n\nexport const Logout = (props: { setToken: (userToken: string) => void, darkMode: boolean }) => {\n\n    const { darkMode } = useContext(MetaContext);\n\n    const onSuccess = () => {\n        console.log(\"we logged out!\");\n        props.setToken(\"\");\n        window.location.href = '/';\n        window.analytics.track({\n            userId: clientID,\n            event: \"User Logged out\"\n        })\n        \n    }\n    \n    return (\n        <GoogleLogout\n            clientId = { clientID }\n            buttonText = \"LOGOUT\"\n            onLogoutSuccess = { onSuccess }\n            render = { \n                prps => \n                    <LogoutButton darkMode = { darkMode } onClick = { prps.onClick } disabled = { prps.disabled }>\n                        <FaSignOutAlt /> &nbsp; Logout &nbsp;\n                    </LogoutButton>\n            }\n        />\n    );\n}\n\nconst LogoutButton = styled.button<{ darkMode: boolean }>`\n    border-style: none;\n    background-color: transparent;\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    width: 100%;\n    text-align: left;\n    padding: 10px 20px;\n    white-space: nowrap;\n    overflow: hidden;\n`"]},"metadata":{},"sourceType":"module"}