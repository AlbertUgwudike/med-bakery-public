{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport TaskSection from \"./TaskSection\";\nimport { promptId, responseId, startAudioRecordingId } from \"./types\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport { generateWaveSurfer, playStartTone } from \"./hooks\";\nimport recordingStartAudioUrl from \"./media/start.mp3\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport { Transition } from \"react-transition-group\";\nimport { copy } from \"../ECGPage/Functions/utility\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar initialAudioState = {\n  promptAudio: null,\n  responseWaveSurfer: undefined,\n  promptPlaying: true,\n  responsePlaying: false,\n  recording: false\n};\n\nvar QuestionPage = function QuestionPage(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageExpanded = _useState2[0],\n      updateImageExpanded = _useState2[1];\n\n  var _useState3 = useState(initialAudioState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioState = _useState4[0],\n      updateAudioState = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingRecorder = _useState6[0],\n      updateLoadingRecorder = _useState6[1];\n\n  var _useReactMediaRecorde = useReactMediaRecorder({\n    audio: true,\n    onStart: function onStart() {\n      updateLoadingRecorder(false);\n      updateAudioState(function (as) {\n        return _objectSpread(_objectSpread({}, as), {}, {\n          recording: true\n        });\n      });\n      playStartTone();\n    },\n    onStop: function onStop(blobUrl, _) {\n      playStartTone();\n      updateLoadingRecorder(false);\n      props.updateStation(function (s) {\n        s.questions[props.questionIdx.curr].responseAudio = blobUrl ? blobUrl : \"\";\n        return copy(s); // because object is nested, react shallow compares\n      });\n    }\n  }),\n      startRecording = _useReactMediaRecorde.startRecording,\n      stopRecording = _useReactMediaRecorde.stopRecording;\n\n  var pathToNext = props.questionIdx.curr === props.station.questions.length - 1 ? \"/OSCE/Station/Summary\" : \"/OSCE/Station/\" + (props.questionIdx.curr + 1);\n  var question = props.station.questions[props.questionIdx.curr];\n\n  var stopEverything = function stopEverything() {\n    var _audioState$promptAud, _audioState$responseW;\n\n    (_audioState$promptAud = audioState.promptAudio) === null || _audioState$promptAud === void 0 ? void 0 : _audioState$promptAud.pause();\n    (_audioState$responseW = audioState.responseWaveSurfer) === null || _audioState$responseW === void 0 ? void 0 : _audioState$responseW.stop();\n    if (audioState.recording) stopRecording();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: false,\n        responsePlaying: false,\n        recording: false\n      });\n    });\n  };\n\n  var play = function play(id) {\n    var _audioState$promptAud2, _audioState$responseW2;\n\n    stopEverything();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: id === promptId,\n        responsePlaying: id === responseId\n      });\n    });\n    if (id === promptId) (_audioState$promptAud2 = audioState.promptAudio) === null || _audioState$promptAud2 === void 0 ? void 0 : _audioState$promptAud2.play();else (_audioState$responseW2 = audioState.responseWaveSurfer) === null || _audioState$responseW2 === void 0 ? void 0 : _audioState$responseW2.play();\n  };\n\n  var record = function record() {\n    stopEverything();\n    updateLoadingRecorder(true);\n    startRecording();\n  };\n\n  useEffect(function () {\n    var container = document.getElementById(responseId);\n    if (container) container.innerHTML = \"\";\n    updateAudioState(_objectSpread(_objectSpread({}, initialAudioState), {}, {\n      promptAudio: document.getElementById(promptId),\n      responseWaveSurfer: generateWaveSurfer(responseId, question.responseAudio, stopEverything)\n    }));\n  }, [question.responseAudio]); // cease playback when compnent unmounts <=== six hour bug :)\n\n  useEffect(function () {\n    return stopEverything;\n  }, [audioState.promptAudio, audioState.responseWaveSurfer]);\n  var defaultStyle = {\n    gridRowStart: 1,\n    gridColumnStart: 1,\n    transition: \"transform \".concat(500, \"ms\")\n  };\n  var transitionStyles = props.questionIdx.curr < props.questionIdx.prev ? {\n    entering: {\n      transform: \"translateY(-150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(150%)\"\n    },\n    exited: {\n      transform: \"translateY(-150%)\"\n    }\n  } : {\n    entering: {\n      transform: \"translateY(150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(-150%)\"\n    },\n    exited: {\n      transform: \"translateY(150%)\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\"\n      },\n      children: [props.station.questions.map(function (q, questionIdx) {\n        return /*#__PURE__*/_jsxDEV(Transition, {\n          in: questionIdx === props.questionIdx.curr,\n          timeout: 500,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: function children(state) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: _objectSpread(_objectSpread({}, defaultStyle), transitionStyles[state]),\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(QuestionPrompt, {\n                  question: question,\n                  toggle: function toggle() {\n                    audioState.promptPlaying ? stopEverything() : play(promptId);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Img, {\n                    src: question.img,\n                    imageExpanded: imageExpanded\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridRowStart: 2,\n          zIndex: 1000,\n          backgroundColor: \"#1c2124\",\n          height: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TaskSection, {\n          recording: audioState.recording,\n          recordResponse: record,\n          playing: audioState.responsePlaying,\n          playResponse: function playResponse() {\n            return play(responseId);\n          },\n          stopEverything: stopEverything,\n          responseAvailable: question.responseAudio !== \"\",\n          loadingRecorder: loadingRecorder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, _this), question.responseAudio !== \"\" || audioState.recording ? /*#__PURE__*/_jsxDEV(Link, {\n          to: pathToNext,\n          onClick: stopEverything,\n          children: /*#__PURE__*/_jsxDEV(MoveOn, {\n            children: \"Move On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: recordingStartAudioUrl,\n        id: startAudioRecordingId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionPage, \"IoYcGLBrXDHOJ7wp4BiMEvGuZ7k=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = QuestionPage;\nexport default QuestionPage;\nvar Img = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    width: \", \";\\n    transition: width 0.2s;\\n\"])), function (props) {\n  return props.imageExpanded ? \"100%\" : \"60%\";\n});\n_c2 = Img;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuestionPage\");\n$RefreshReg$(_c2, \"Img\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionPage.tsx"],"names":["useEffect","useState","Link","styled","Box","MoveOn","Container","TaskSection","promptId","responseId","startAudioRecordingId","QuestionPrompt","generateWaveSurfer","playStartTone","recordingStartAudioUrl","useReactMediaRecorder","Transition","copy","initialAudioState","promptAudio","responseWaveSurfer","undefined","promptPlaying","responsePlaying","recording","QuestionPage","props","imageExpanded","updateImageExpanded","audioState","updateAudioState","loadingRecorder","updateLoadingRecorder","audio","onStart","as","onStop","blobUrl","_","updateStation","s","questions","questionIdx","curr","responseAudio","startRecording","stopRecording","pathToNext","station","length","question","stopEverything","pause","stop","play","id","record","container","document","getElementById","innerHTML","defaultStyle","gridRowStart","gridColumnStart","transition","transitionStyles","prev","entering","transform","entered","exiting","exited","display","gridTemplateColumns","map","q","state","textAlign","img","zIndex","backgroundColor","height","Img"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport TaskSection from \"./TaskSection\";\nimport { promptId, Question, responseId, startAudioRecordingId, Station } from \"./types\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport { generateWaveSurfer, playStartTone } from \"./hooks\";\nimport recordingStartAudioUrl from \"./media/start.mp3\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport { CSSTransition, Transition } from \"react-transition-group\";\nimport { copy } from \"../ECGPage/Functions/utility\";\n\ntype QuestionProps = {\n    station: Station;\n    questionIdx: { prev: number; curr: number };\n    updateStation: Dispatch<SetStateAction<Station>>;\n};\n\ntype AudioState = {\n    promptAudio: HTMLAudioElement | null;\n    responseWaveSurfer: WaveSurfer | undefined;\n    promptPlaying: boolean;\n    responsePlaying: boolean;\n    recording: boolean;\n};\n\nconst initialAudioState: AudioState = {\n    promptAudio: null,\n    responseWaveSurfer: undefined,\n    promptPlaying: true,\n    responsePlaying: false,\n    recording: false,\n};\n\nconst QuestionPage = (props: QuestionProps) => {\n    const [imageExpanded, updateImageExpanded] = useState(false);\n    const [audioState, updateAudioState] = useState<AudioState>(initialAudioState);\n    const [loadingRecorder, updateLoadingRecorder] = useState(false);\n\n    const { startRecording, stopRecording } = useReactMediaRecorder({\n        audio: true,\n        onStart: () => {\n            updateLoadingRecorder(false);\n            updateAudioState(as => ({ ...as, recording: true }));\n            playStartTone();\n        },\n        onStop: (blobUrl, _) => {\n            playStartTone();\n            updateLoadingRecorder(false);\n            props.updateStation(s => {\n                s.questions[props.questionIdx.curr].responseAudio = blobUrl ? blobUrl : \"\";\n                return copy(s); // because object is nested, react shallow compares\n            });\n        },\n    });\n\n    const pathToNext =\n        props.questionIdx.curr === props.station.questions.length - 1\n            ? \"/OSCE/Station/Summary\"\n            : \"/OSCE/Station/\" + (props.questionIdx.curr + 1);\n    const question = props.station.questions[props.questionIdx.curr];\n\n    const stopEverything = () => {\n        audioState.promptAudio?.pause();\n        audioState.responseWaveSurfer?.stop();\n        if (audioState.recording) stopRecording();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: false,\n            responsePlaying: false,\n            recording: false,\n        }));\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: id === promptId,\n            responsePlaying: id === responseId,\n        }));\n\n        if (id === promptId) audioState.promptAudio?.play();\n        else audioState.responseWaveSurfer?.play();\n    };\n\n    const record = () => {\n        stopEverything();\n        updateLoadingRecorder(true);\n        startRecording();\n    };\n\n    useEffect(() => {\n        const container = document.getElementById(responseId);\n        if (container) container.innerHTML = \"\";\n\n        updateAudioState({\n            ...initialAudioState,\n            promptAudio: document.getElementById(promptId) as HTMLAudioElement,\n            responseWaveSurfer: generateWaveSurfer(\n                responseId,\n                question.responseAudio,\n                stopEverything\n            ),\n        });\n    }, [question.responseAudio]);\n\n    // cease playback when compnent unmounts <=== six hour bug :)\n    useEffect(() => stopEverything, [audioState.promptAudio, audioState.responseWaveSurfer]);\n\n    const defaultStyle = {\n        gridRowStart: 1,\n        gridColumnStart: 1,\n        transition: `transform ${500}ms`,\n    };\n\n    const transitionStyles: { [key: string]: any } =\n        props.questionIdx.curr < props.questionIdx.prev\n            ? {\n                  entering: { transform: \"translateY(-150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(150%)\" },\n                  exited: { transform: \"translateY(-150%)\" },\n              }\n            : {\n                  entering: { transform: \"translateY(150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(-150%)\" },\n                  exited: { transform: \"translateY(150%)\" },\n              };\n\n    return (\n        <Container className=\"page\">\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr\",\n                }}\n            >\n                {props.station.questions.map((q, questionIdx) => (\n                    <Transition\n                        in={questionIdx === props.questionIdx.curr}\n                        timeout={500}\n                        mountOnEnter\n                        unmountOnExit\n                    >\n                        {state => (\n                            <div\n                                style={{\n                                    ...defaultStyle,\n                                    ...transitionStyles[state],\n                                }}\n                            >\n                                <Box style={{ textAlign: \"center\" }}>\n                                    <QuestionPrompt\n                                        question={question}\n                                        toggle={() => {\n                                            audioState.promptPlaying\n                                                ? stopEverything()\n                                                : play(promptId);\n                                        }}\n                                    />\n\n                                    <br></br>\n\n                                    <div style={{ textAlign: \"center\" }}>\n                                        <Img src={question.img} imageExpanded={imageExpanded}></Img>\n                                    </div>\n                                </Box>\n                            </div>\n                        )}\n                    </Transition>\n                ))}\n\n                <div\n                    style={{\n                        gridRowStart: 2,\n                        zIndex: 1000,\n                        backgroundColor: \"#1c2124\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <TaskSection\n                        recording={audioState.recording}\n                        recordResponse={record}\n                        playing={audioState.responsePlaying}\n                        playResponse={() => play(responseId)}\n                        stopEverything={stopEverything}\n                        responseAvailable={question.responseAudio !== \"\"}\n                        loadingRecorder={loadingRecorder}\n                    />\n\n                    {question.responseAudio !== \"\" || audioState.recording ? (\n                        <Link to={pathToNext} onClick={stopEverything}>\n                            <MoveOn>Move On</MoveOn>\n                        </Link>\n                    ) : (\n                        <></>\n                    )}\n                </div>\n\n                <audio src={recordingStartAudioUrl} id={startAudioRecordingId} />\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionPage;\n\nconst Img = styled.img<{ imageExpanded: boolean }>`\n    display: block;\n    margin: auto;\n    width: ${props => (props.imageExpanded ? \"100%\" : \"60%\")};\n    transition: width 0.2s;\n`;\n"]},"metadata":{},"sourceType":"module"}