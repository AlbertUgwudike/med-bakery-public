{"ast":null,"code":"import _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/DataInterpPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Navigator from \"../Navigator\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TaskPage from \"./TaskPage\";\nimport QuestionSelector from \"./QuestionSelector\";\nimport { useEffect, useState } from \"react\";\nimport { NullQuestion } from \"./exampleQuestions\";\nimport AnswerPage from \"./AnswerPAge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar DataInterpPage = function DataInterpPage(props) {\n  _s();\n\n  var _useState = useState(NullQuestion),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestion = _useState2[0],\n      updateCurrentQuestion = _useState2[1]; // what exactly is this for\n\n\n  useEffect(function () {\n    console.log(\"This is wild\");\n  }, [currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/DataInterpretation\",\n        children: [/*#__PURE__*/_jsxDEV(Navigator, {\n          selection: \"Data Interpretation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(QuestionSelector, {\n          updateCurrentQuestion: updateCurrentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/DataInterpretation/Question\",\n        children: /*#__PURE__*/_jsxDEV(TaskPage, {\n          question: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/DataInterpretation/Answer\",\n        children: /*#__PURE__*/_jsxDEV(AnswerPage, {\n          question: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(DataInterpPage, \"dfi0HabcNmhglvGm0gFFj0ozTO8=\");\n\n_c = DataInterpPage;\nexport default DataInterpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataInterpPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/DataInterpPage.tsx"],"names":["Navigator","Route","Switch","TaskPage","QuestionSelector","useEffect","useState","NullQuestion","AnswerPage","DataInterpPage","props","currentQuestion","updateCurrentQuestion","console","log"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAe;AAAA;;AAClC,kBAAiDJ,QAAQ,CAACC,YAAD,CAAzD;AAAA;AAAA,MAAOI,eAAP;AAAA,MAAwBC,qBAAxB,iBADkC,CAGlC;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAFQ,EAEN,CAACH,eAAD,CAFM,CAAT;AAIA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,qBAApB;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAG;AAAvB;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,gBAAD;AAAkB,UAAA,qBAAqB,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,8BAAZ;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAID;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eANJ,eAUI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,4BAAZ;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAIA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkBH,CA1BD;;GAAMF,c;;KAAAA,c;AA4BN,eAAeA,cAAf","sourcesContent":["import Navigator from \"../Navigator\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TaskPage from \"./TaskPage\";\nimport QuestionSelector from \"./QuestionSelector\";\nimport { useEffect, useState } from \"react\";\nimport { NullQuestion } from \"./exampleQuestions\";\nimport AnswerPage from \"./AnswerPAge\";\n\nconst DataInterpPage = (props: {}) => {\n    const [currentQuestion, updateCurrentQuestion] = useState(NullQuestion);\n\n    // what exactly is this for\n    useEffect(() => {\n        console.log(\"This is wild\")\n    }, [currentQuestion]);\n\n    return (\n        <>\n            <Switch>\n                <Route exact path = \"/DataInterpretation\">\n                    <Navigator selection={ \"Data Interpretation\" } />\n                    <QuestionSelector updateCurrentQuestion={updateCurrentQuestion} />\n                </Route>\n\n                <Route path=\"/DataInterpretation/Question\">\n                    <TaskPage question = {currentQuestion}/>\n                </Route>\n\n                <Route path=\"/DataInterpretation/Answer\">\n                    <AnswerPage question = {currentQuestion}/>\n                </Route>\n            </Switch>\n        </>\n    );\n};\n\nexport default DataInterpPage;\n"]},"metadata":{},"sourceType":"module"}