{"ast":null,"code":"export var createIntersections = function createIntersections(emitNotSupportedError, window, wrapSubscribeFunction) {\n  return function (htmlElement, options) {\n    return wrapSubscribeFunction(function (observer) {\n      if (window === null || window.IntersectionObserver === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var intersectionObserverObserver = new window.IntersectionObserver(function (entries) {\n        return observer.next(entries);\n      }, options);\n\n      try {\n        intersectionObserverObserver.observe(htmlElement);\n      } catch (err) {\n        observer.error(err);\n      }\n\n      return function () {\n        return intersectionObserverObserver.disconnect();\n      };\n    });\n  };\n};","map":{"version":3,"sources":["../../../src/factories/intersections.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,mBAAmB,GAA0B,SAA7C,mBAA6C,CAAC,qBAAD,EAAwB,MAAxB,EAAgC,qBAAhC,EAAyD;AAC/G,SAAO,UAAC,WAAD,EAAc,OAAd;AAAA,WACH,qBAAqB,CAAC,UAAC,QAAD,EAAa;AAC/B,UAAI,MAAM,KAAK,IAAX,IAAmB,MAAM,CAAC,oBAAP,KAAgC,SAAvD,EAAkE;AAC9D,eAAO,qBAAqB,CAAC,QAAD,CAA5B;AACH;;AAED,UAAM,4BAA4B,GAAG,IAAI,MAAM,CAAC,oBAAX,CAAgC,UAAC,OAAD;AAAA,eAAa,QAAQ,CAAC,IAAT,CAAc,OAAd,CAAb;AAAA,OAAhC,EAAqE,OAArE,CAArC;;AAEA,UAAI;AACA,QAAA,4BAA4B,CAAC,OAA7B,CAAqC,WAArC;AACH,OAFD,CAEE,OAAO,GAAP,EAAY;AACV,QAAA,QAAQ,CAAC,KAAT,CAAe,GAAf;AACH;;AAED,aAAO;AAAA,eAAM,4BAA4B,CAAC,UAA7B,EAAN;AAAA,OAAP;AACH,KAdoB,CADlB;AAAA,GAAP;AAgBH,CAjBM","sourceRoot":"","sourcesContent":["export const createIntersections = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.IntersectionObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n        try {\n            intersectionObserverObserver.observe(htmlElement);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => intersectionObserverObserver.disconnect();\n    });\n};\n//# sourceMappingURL=intersections.js.map"]},"metadata":{},"sourceType":"module"}