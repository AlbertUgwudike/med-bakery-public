{"ast":null,"code":"import _classCallCheck from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var createEventTargetConstructor = function createEventTargetConstructor(createEventTarget, wrapEventListener) {\n  return /*#__PURE__*/function () {\n    function EventTarget() {\n      var nativeEventTarget = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      _classCallCheck(this, EventTarget);\n\n      this._listeners = new WeakMap();\n      this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n    }\n\n    _createClass(EventTarget, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, listener, options) {\n        if (listener !== null) {\n          var wrappedEventListener = this._listeners.get(listener);\n\n          if (wrappedEventListener === undefined) {\n            wrappedEventListener = wrapEventListener(this, listener);\n\n            if (typeof listener === 'function') {\n              this._listeners.set(listener, wrappedEventListener);\n            }\n          }\n\n          this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        return this._nativeEventTarget.dispatchEvent(event);\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, listener, options) {\n        var wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n        this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n      }\n    }]);\n\n    return EventTarget;\n  }();\n};","map":{"version":3,"sources":["../../../src/factories/event-target-constructor.ts"],"names":[],"mappings":";;AAGA,OAAO,IAAM,4BAA4B,GAAmC,SAA/D,4BAA+D,CAAC,iBAAD,EAAoB,iBAApB,EAAyC;AACjH;AAKI,2BAA+D;AAAA,UAAnD,iBAAmD,uEAAJ,IAAI;;AAAA;;AAC3D,WAAK,UAAL,GAAkB,IAAI,OAAJ,EAAlB;AACA,WAAK,kBAAL,GAA0B,iBAAiB,KAAK,IAAtB,GAA6B,iBAAiB,EAA9C,GAAmD,iBAA7E;AACH;;AARL;AAAA;AAAA,aAUW,0BACH,IADG,EAEH,QAFG,EAGH,OAHG,EAGwC;AAE3C,YAAI,QAAQ,KAAK,IAAjB,EAAuB;AACnB,cAAI,oBAAoB,GAAG,KAAK,UAAL,CAAgB,GAAhB,CAAoB,QAApB,CAA3B;;AAEA,cAAI,oBAAoB,KAAK,SAA7B,EAAwC;AACpC,YAAA,oBAAoB,GAAG,iBAAiB,CAAC,IAAD,EAAO,QAAP,CAAxC;;AAEA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,mBAAK,UAAL,CAAgB,GAAhB,CAAoB,QAApB,EAA8B,oBAA9B;AACH;AACJ;;AAED,eAAK,kBAAL,CAAwB,gBAAxB,CAAyC,IAAzC,EAA+C,oBAA/C,EAAqE,OAArE;AACH;AACJ;AA5BL;AAAA;AAAA,aA8BW,uBAAc,KAAd,EAA0B;AAC7B,eAAO,KAAK,kBAAL,CAAwB,aAAxB,CAAsC,KAAtC,CAAP;AACH;AAhCL;AAAA;AAAA,aAkCW,6BACH,IADG,EAEH,QAFG,EAGH,OAHG,EAGqC;AAExC,YAAM,oBAAoB,GAAG,QAAQ,KAAK,IAAb,GAAoB,SAApB,GAAgC,KAAK,UAAL,CAAgB,GAAhB,CAAoB,QAApB,CAA7D;;AAEA,aAAK,kBAAL,CAAwB,mBAAxB,CAA4C,IAA5C,EAAkD,oBAAoB,KAAK,SAAzB,GAAqC,IAArC,GAA4C,oBAA9F,EAAoH,OAApH;AACH;AA1CL;;AAAA;AAAA;AA4CH,CA7CM","sourceRoot":"","sourcesContent":["export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map"]},"metadata":{},"sourceType":"module"}