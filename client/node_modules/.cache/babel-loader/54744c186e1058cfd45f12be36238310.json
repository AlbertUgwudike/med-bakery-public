{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import{useContext,useEffect,useState}from\"react\";import{useReactMediaRecorder}from\"react-media-recorder\";import styled from\"styled-components\";import{copy}from\"../../../old-components/ECGPage/Functions/utility\";import{Box}from\"../Common\";import QuestionPrompt from\"../QuestionPrompt\";import RecordControl from\"./RecordControl\";import WaveSurfer from\"./WaveSurfer\";import{promptId}from\"../types\";import MetaContext from\"../../../MetaContext\";import startToneUrl from\"../media/start.mp3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuestionContent=function QuestionContent(props){var _useContext=useContext(MetaContext),narrowWindow=_useContext.narrowWindow;var _useReactMediaRecorde=useReactMediaRecorder({audio:true,onStop:function onStop(blobUrl,_){console.log(\"recording stopped\");props.updateStation(function(s){console.log(props.questionIdx);s.questions[props.questionIdx].responseAudio=blobUrl?blobUrl:\"\";return copy(s);// because object is nested, react shallow compares\n});var endTone=new Audio(startToneUrl);endTone.onended=props.nextFunc;endTone.play();}}),startRecording=_useReactMediaRecorde.startRecording,stopRecording=_useReactMediaRecorde.stopRecording,status=_useReactMediaRecorde.status;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),responseWaveSurfer=_useState2[0],updateResponseWaveSurfer=_useState2[1];var getPromptAudio=function getPromptAudio(){return document.getElementById(promptId+props.questionIdx);};var stopEverything=function stopEverything(){var _getPromptAudio;(_getPromptAudio=getPromptAudio())===null||_getPromptAudio===void 0?void 0:_getPromptAudio.pause();responseWaveSurfer===null||responseWaveSurfer===void 0?void 0:responseWaveSurfer.stop();if(status===\"recording\")stopRecording();};var play=function play(id){var _getPromptAudio2;stopEverything();if(id===promptId)(_getPromptAudio2=getPromptAudio())===null||_getPromptAudio2===void 0?void 0:_getPromptAudio2.play();else responseWaveSurfer===null||responseWaveSurfer===void 0?void 0:responseWaveSurfer.play();};useEffect(function(){var _getPromptAudio3;getPromptAudio().currentTime=0;props.active?(_getPromptAudio3=getPromptAudio())===null||_getPromptAudio3===void 0?void 0:_getPromptAudio3.play():stopEverything();},[props.active]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{gridRowStart:2,gridColumnStart:1,height:\"60vh\",transition:\"transform \".concat(500,\"ms\")},children:[/*#__PURE__*/_jsx(QuestionPrompt,{question:props.question,toggle:function toggle(){var _getPromptAudio4;!((_getPromptAudio4=getPromptAudio())===null||_getPromptAudio4===void 0?void 0:_getPromptAudio4.paused)?stopEverything():play(promptId);},promptId:promptId+props.questionIdx}),/*#__PURE__*/_jsxs(Box,{style:{display:\"flex\",alignItems:\"center\",height:\"49vh\"},children:[/*#__PURE__*/_jsx(Img,{src:props.question.img,narrowWindow:narrowWindow}),/*#__PURE__*/_jsx(\"br\",{})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{gridRowStart:4,gridColumnStart:1,zIndex:700,backgroundColor:\"#\",height:\"15vh\"},children:[/*#__PURE__*/_jsx(WaveSurfer,{playResponse:function playResponse(){return play(\"waveform\"+props.questionIdx);},stopEverything:stopEverything,responseAudio:props.question.responseAudio,questionIdx:props.questionIdx,updateResponseWaveSurfer:updateResponseWaveSurfer}),/*#__PURE__*/_jsx(RecordControl,{recording:status===\"recording\",stopEverything:stopEverything,startRecording:startRecording,questionIdx:props.questionIdx})]})]});};export default QuestionContent;var Img=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    max-width: 100%;\\n    max-height: 100%;\\n    transition: width 0.2s;\\n\"])));","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionContent.tsx"],"names":["useContext","useEffect","useState","useReactMediaRecorder","styled","copy","Box","QuestionPrompt","RecordControl","WaveSurfer","promptId","MetaContext","startToneUrl","QuestionContent","props","narrowWindow","audio","onStop","blobUrl","_","console","log","updateStation","s","questionIdx","questions","responseAudio","endTone","Audio","onended","nextFunc","play","startRecording","stopRecording","status","undefined","responseWaveSurfer","updateResponseWaveSurfer","getPromptAudio","document","getElementById","stopEverything","pause","stop","id","currentTime","active","gridRowStart","gridColumnStart","height","transition","question","paused","display","alignItems","img","zIndex","backgroundColor","Img"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport styled from \"styled-components\";\nimport { copy } from \"../../../old-components/ECGPage/Functions/utility\";\nimport { Box } from \"../Common\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport RecordControl from \"./RecordControl\";\nimport WaveSurfer from \"./WaveSurfer\";\nimport { promptId, Question, Station } from \"../types\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\n\ntype QuestionContentProps = {\n    question: Question;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    active: boolean;\n    questionIdx: number;\n    nextFunc: () => void;\n};\n\nconst QuestionContent = (props: QuestionContentProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    const { startRecording, stopRecording, status } = useReactMediaRecorder({\n        audio: true,\n        onStop: (blobUrl, _) => {\n            console.log(\"recording stopped\");\n            props.updateStation(s => {\n                console.log(props.questionIdx);\n                s.questions[props.questionIdx].responseAudio = blobUrl ? blobUrl : \"\";\n                return copy(s); // because object is nested, react shallow compares\n            });\n\n            const endTone = new Audio(startToneUrl);\n            endTone.onended = props.nextFunc;\n            endTone.play();\n        },\n    });\n\n    const [responseWaveSurfer, updateResponseWaveSurfer] = useState<WaveSurfer | undefined>(\n        undefined\n    );\n\n    const getPromptAudio = () =>\n        document.getElementById(promptId + props.questionIdx) as HTMLAudioElement | null;\n\n    const stopEverything = () => {\n        getPromptAudio()?.pause();\n        responseWaveSurfer?.stop();\n        if (status === \"recording\") stopRecording();\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        if (id === promptId) getPromptAudio()?.play();\n        else responseWaveSurfer?.play();\n    };\n\n    useEffect(() => {\n        getPromptAudio()!.currentTime = 0;\n        props.active ? getPromptAudio()?.play() : stopEverything();\n    }, [props.active]);\n\n    return (\n        <div>\n            <div\n                style={{\n                    gridRowStart: 2,\n                    gridColumnStart: 1,\n                    height: \"60vh\",\n                    transition: `transform ${500}ms`,\n                }}\n            >\n                <QuestionPrompt\n                    question={props.question}\n                    toggle={() => {\n                        !getPromptAudio()?.paused ? stopEverything() : play(promptId);\n                    }}\n                    promptId={promptId + props.questionIdx}\n                />\n                <Box\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        height: \"49vh\",\n                    }}\n                >\n                    <Img src={props.question.img} narrowWindow={narrowWindow}></Img>\n                    <br />\n                </Box>\n            </div>\n            <div\n                style={{\n                    gridRowStart: 4,\n                    gridColumnStart: 1,\n                    zIndex: 700,\n                    backgroundColor: \"#\",\n                    height: \"15vh\",\n                }}\n            >\n                <WaveSurfer\n                    playResponse={() => play(\"waveform\" + props.questionIdx)}\n                    stopEverything={stopEverything}\n                    responseAudio={props.question.responseAudio}\n                    questionIdx={props.questionIdx}\n                    updateResponseWaveSurfer={updateResponseWaveSurfer}\n                />\n\n                <RecordControl\n                    recording={status === \"recording\"}\n                    stopEverything={stopEverything}\n                    startRecording={startRecording}\n                    questionIdx={props.questionIdx}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionContent;\n\nconst Img = styled.img<{ narrowWindow: boolean }>`\n    display: block;\n    margin: auto;\n    max-width: 100%;\n    max-height: 100%;\n    transition: width 0.2s;\n`;\n"]},"metadata":{},"sourceType":"module"}