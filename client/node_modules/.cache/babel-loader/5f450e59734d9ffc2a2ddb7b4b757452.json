{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import{useEffect,useState}from\"react\";import{FaPause,FaPlay}from\"react-icons/fa\";import styled from\"styled-components\";import{generateWaveSurfer}from\"../hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskSection=function TaskSection(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),responsePlaying=_useState2[0],updateResponsePlaying=_useState2[1];useEffect(function(){var container=document.getElementById(\"waveform\"+props.questionIdx);if(container)container.innerHTML=\"\";var ws=generateWaveSurfer(\"waveform\"+props.questionIdx,props.responseAudio);ws.on(\"play\",function(){return updateResponsePlaying(true);});ws.on(\"finish\",function(){return updateResponsePlaying(false);});ws.on(\"pause\",function(){return updateResponsePlaying(false);});props.updateResponseWaveSurfer(ws);},[props.responseAudio]);return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"},children:!props.responseAudio?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Panel,{style:{margin:\"10px 0\",width:\"10%\",backgroundColor:\"#031B34\"}}),/*#__PURE__*/_jsx(Panel,{style:{margin:\"10px 0\",width:\"87%\",backgroundColor:\"#031B34\"},children:/*#__PURE__*/_jsx(\"div\",{id:\"waveform\"+props.questionIdx})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Panel,{onClick:responsePlaying?props.stopEverything:props.playResponse,style:{margin:\"10px 0\",width:\"10%\"},children:responsePlaying?/*#__PURE__*/_jsx(FaPause,{}):/*#__PURE__*/_jsx(FaPlay,{})}),/*#__PURE__*/_jsx(Panel,{style:{margin:\"10px 0\",width:\"87%\"},children:/*#__PURE__*/_jsx(\"div\",{id:\"waveform\"+props.questionIdx})})]})});};export default TaskSection;var Panel=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    background-color: #303237;\\n    padding: 0 10px;\\n    border-radius: 10px;\\n\"])));","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx"],"names":["useEffect","useState","FaPause","FaPlay","styled","generateWaveSurfer","TaskSection","props","responsePlaying","updateResponsePlaying","container","document","getElementById","questionIdx","innerHTML","ws","responseAudio","on","updateResponseWaveSurfer","display","justifyContent","margin","width","backgroundColor","stopEverything","playResponse","Panel","div"],"mappings":"sSAAA,OAAqDA,SAArD,CAAgEC,QAAhE,KAAgF,OAAhF,CACA,OAASC,OAAT,CAAkBC,MAAlB,KAAgC,gBAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,kBAAT,KAAmC,UAAnC,C,6IAUA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA6B,CAC7C,cAAiDN,QAAQ,CAAC,KAAD,CAAzD,wCAAOO,eAAP,eAAwBC,qBAAxB,eAEAT,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,SAAS,CAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAaL,KAAK,CAACM,WAA3C,CAAlB,CACA,GAAIH,SAAJ,CAAeA,SAAS,CAACI,SAAV,CAAsB,EAAtB,CAEf,GAAMC,CAAAA,EAAE,CAAGV,kBAAkB,CAAC,WAAaE,KAAK,CAACM,WAApB,CAAiCN,KAAK,CAACS,aAAvC,CAA7B,CACAD,EAAE,CAACE,EAAH,CAAM,MAAN,CAAc,iBAAMR,CAAAA,qBAAqB,CAAC,IAAD,CAA3B,EAAd,EACAM,EAAE,CAACE,EAAH,CAAM,QAAN,CAAgB,iBAAMR,CAAAA,qBAAqB,CAAC,KAAD,CAA3B,EAAhB,EACAM,EAAE,CAACE,EAAH,CAAM,OAAN,CAAe,iBAAMR,CAAAA,qBAAqB,CAAC,KAAD,CAA3B,EAAf,EAEAF,KAAK,CAACW,wBAAN,CAA+BH,EAA/B,EACH,CAVQ,CAUN,CAACR,KAAK,CAACS,aAAP,CAVM,CAAT,CAYA,mBACI,YAAK,KAAK,CAAE,CAAEG,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,eAAnC,CAAZ,UACK,CAACb,KAAK,CAACS,aAAP,cACG,wCACI,KAAC,KAAD,EACI,KAAK,CAAE,CAAEK,MAAM,CAAE,QAAV,CAAoBC,KAAK,CAAE,KAA3B,CAAkCC,eAAe,CAAE,SAAnD,CADX,EADJ,cAII,KAAC,KAAD,EACI,KAAK,CAAE,CACHF,MAAM,CAAE,QADL,CAEHC,KAAK,CAAE,KAFJ,CAGHC,eAAe,CAAE,SAHd,CADX,uBAOI,YAAK,EAAE,CAAE,WAAahB,KAAK,CAACM,WAA5B,EAPJ,EAJJ,GADH,cAgBG,wCACI,KAAC,KAAD,EACI,OAAO,CAAEL,eAAe,CAAGD,KAAK,CAACiB,cAAT,CAA0BjB,KAAK,CAACkB,YAD5D,CAEI,KAAK,CAAE,CAAEJ,MAAM,CAAE,QAAV,CAAoBC,KAAK,CAAE,KAA3B,CAFX,UAIKd,eAAe,cAAG,KAAC,OAAD,IAAH,cAAiB,KAAC,MAAD,IAJrC,EADJ,cAOI,KAAC,KAAD,EAAO,KAAK,CAAE,CAAEa,MAAM,CAAE,QAAV,CAAoBC,KAAK,CAAE,KAA3B,CAAd,uBACI,YAAK,EAAE,CAAE,WAAaf,KAAK,CAACM,WAA5B,EADJ,EAPJ,GAjBR,EADJ,CAgCH,CA/CD,CAiDA,cAAeP,CAAAA,WAAf,CAEA,GAAMoB,CAAAA,KAAK,CAAGtB,MAAM,CAACuB,GAAV,mJAAX","sourcesContent":["import { Dispatch, MutableRefObject, SetStateAction, useEffect, useState } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { generateWaveSurfer } from \"../hooks\";\n\ntype TaskSectionProps = {\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    questionIdx: number;\n    updateResponseWaveSurfer: Dispatch<SetStateAction<WaveSurfer | undefined>>;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    const [responsePlaying, updateResponsePlaying] = useState(false);\n\n    useEffect(() => {\n        const container = document.getElementById(\"waveform\" + props.questionIdx);\n        if (container) container.innerHTML = \"\";\n\n        const ws = generateWaveSurfer(\"waveform\" + props.questionIdx, props.responseAudio);\n        ws.on(\"play\", () => updateResponsePlaying(true));\n        ws.on(\"finish\", () => updateResponsePlaying(false));\n        ws.on(\"pause\", () => updateResponsePlaying(false));\n\n        props.updateResponseWaveSurfer(ws);\n    }, [props.responseAudio]);\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {!props.responseAudio ? (\n                <>\n                    <Panel\n                        style={{ margin: \"10px 0\", width: \"10%\", backgroundColor: \"#031B34\" }}\n                    ></Panel>\n                    <Panel\n                        style={{\n                            margin: \"10px 0\",\n                            width: \"87%\",\n                            backgroundColor: \"#031B34\",\n                        }}\n                    >\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            ) : (\n                <>\n                    <Panel\n                        onClick={responsePlaying ? props.stopEverything : props.playResponse}\n                        style={{ margin: \"10px 0\", width: \"10%\" }}\n                    >\n                        {responsePlaying ? <FaPause /> : <FaPlay />}\n                    </Panel>\n                    <Panel style={{ margin: \"10px 0\", width: \"87%\" }}>\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst Panel = styled.div`\n    background-color: #303237;\n    padding: 0 10px;\n    border-radius: 10px;\n`;\n"]},"metadata":{},"sourceType":"module"}