{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/TextBookPage/TextBookPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Switch, Route } from \"react-router-dom\";\nimport TopicPage from \"./TopicPage\";\nimport TopicSelector from \"./TopicSelector\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextBookPage = props => {\n  _s();\n\n  const {\n    SERVER_URL,\n    token\n  } = useContext(MetaContext);\n  const [topics, updateTopics] = useState([]);\n  const [currentTopic, updateCurrentTopic] = useState({\n    _id: \"\",\n    topicTitle: \"\",\n    learningPointIdx: [],\n    topicIdx: -1,\n    categoryPath: [],\n    sections: []\n  });\n  useEffect(() => {\n    axios.post(SERVER_URL + \"/products/finals/textbook\", {\n      token\n    }).then(res => updateTopics(res.data)).catch(console.log);\n  });\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/User/Finals/TextBook\",\n      children: /*#__PURE__*/_jsxDEV(TopicSelector, {\n        topics: topics,\n        updateCurrentTopic: updateCurrentTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/User/Finals/TextBook/Subject\",\n      children: /*#__PURE__*/_jsxDEV(TopicPage, {\n        topic: currentTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextBookPage, \"iwvBNEvV9/fzYYGN0e893JPTAjc=\");\n\n_c = TextBookPage;\nexport default TextBookPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextBookPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/TextBookPage/TextBookPage.tsx"],"names":["Switch","Route","TopicPage","TopicSelector","useContext","useEffect","useState","axios","MetaContext","TextBookPage","props","SERVER_URL","token","topics","updateTopics","currentTopic","updateCurrentTopic","_id","topicTitle","learningPointIdx","topicIdx","categoryPath","sections","post","then","res","data","catch","console","log"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAe;AAAA;;AAEhC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAwBR,UAAU,CAACI,WAAD,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,YAAT,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACS,YAAD,EAAeC,kBAAf,IAAqCV,QAAQ,CAAC;AAChDW,IAAAA,GAAG,EAAE,EAD2C;AAEhDC,IAAAA,UAAU,EAAE,EAFoC;AAGhDC,IAAAA,gBAAgB,EAAE,EAH8B;AAIhDC,IAAAA,QAAQ,EAAE,CAAC,CAJqC;AAKhDC,IAAAA,YAAY,EAAE,EALkC;AAMhDC,IAAAA,QAAQ,EAAE;AANsC,GAAD,CAAnD;AASAjB,EAAAA,SAAS,CAAE,MAAM;AACbE,IAAAA,KAAK,CAACgB,IAAN,CAAWZ,UAAU,GAAG,2BAAxB,EAAqD;AAAEC,MAAAA;AAAF,KAArD,EACMY,IADN,CACYC,GAAG,IAAIX,YAAY,CAACW,GAAG,CAACC,IAAL,CAD/B,EAEMC,KAFN,CAEYC,OAAO,CAACC,GAFpB;AAGH,GAJQ,CAAT;AAMA,sBACI,QAAC,MAAD;AAAA,4BAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,uBAApB;AAAA,6BAEI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAKhB,MAA1B;AAAmC,QAAA,kBAAkB,EAAKG;AAA1D;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,+BAAd;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAKD;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAlCD;;GAAMN,Y;;KAAAA,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import {Switch, Route} from \"react-router-dom\"\nimport TopicPage from \"./TopicPage\";\nimport TopicSelector from \"./TopicSelector\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { TextBookTopic } from \"../../types\";\nimport axios from \"axios\";\nimport MetaContext from \"../../MetaContext\";\n\nconst TextBookPage = (props: {}) => {\n\n    const { SERVER_URL, token } = useContext(MetaContext);\n    const [topics, updateTopics] = useState([] as TextBookTopic[]);\n    const [currentTopic, updateCurrentTopic] = useState({\n        _id: \"\",\n        topicTitle: \"\",\n        learningPointIdx: [],\n        topicIdx: -1,\n        categoryPath: [],\n        sections: []\n    } as TextBookTopic)\n\n    useEffect( () => {\n        axios.post(SERVER_URL + \"/products/finals/textbook\", { token })\n             .then( res => updateTopics(res.data) )\n             .catch(console.log);\n    })\n\n    return (\n        <Switch>\n\n            <Route exact path = \"/User/Finals/TextBook\" >\n                {/* could be implemented inline */}\n                <TopicSelector topics = { topics } updateCurrentTopic = { updateCurrentTopic }/>\n            </Route>\n\n            <Route path = \"/User/Finals/TextBook/Subject\">\n                <TopicPage topic = { currentTopic }/>\n            </Route>\n\n        </Switch>\n    )\n    \n}\n\nexport default TextBookPage;"]},"metadata":{},"sourceType":"module"}