{"ast":null,"code":"import{Link,useHistory}from\"react-router-dom\";import{Box,Container,StartButton}from\"./Common\";import htmlParser from\"react-html-parser\";import TimerApparatus from\"./AlphaTimer\";import Header from\"./Header\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Brief=function Brief(props){var history=useHistory();var nextFunc=function nextFunc(){return history.push(\"/OSCE/Station/Question\");};var prevFunc=function prevFunc(){return history.push(\"/OSCE/Station/Question\");};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{updateStation:props.updateStation,station:props.station,handleExit:props.handleExit,title:\"Brief\",percentage:5,timer:false,nextFunc:nextFunc,prevFunc:prevFunc}),/*#__PURE__*/_jsxs(Box,{style:{padding:\"20px\",textAlign:\"left\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"center\"},children:/*#__PURE__*/_jsx(TimerApparatus,{nextFunc:function nextFunc(){return history.push(\"/OSCE/Station/Question\");},startTime:props.station.brief.timePermitted,updateStation:props.updateStation,brief:true})}),/*#__PURE__*/_jsx(\"br\",{}),htmlParser(props.station.brief.prompt),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/OSCE/Station/Question\",children:/*#__PURE__*/_jsx(StartButton,{style:{margin:\"auto\"},children:\"Start Station\"})})]})]});};export default Brief;","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Brief.tsx"],"names":["Link","useHistory","Box","Container","StartButton","htmlParser","TimerApparatus","Header","Brief","props","history","nextFunc","push","prevFunc","updateStation","station","handleExit","padding","textAlign","brief","timePermitted","prompt","margin"],"mappings":"AACA,OAASA,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,OAASC,GAAT,CAAcC,SAAd,CAAyBC,WAAzB,KAA4C,UAA5C,CAEA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,cAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFASA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAuB,CACjC,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CACA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMD,CAAAA,OAAO,CAACE,IAAR,CAAa,wBAAb,CAAN,EAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMH,CAAAA,OAAO,CAACE,IAAR,CAAa,wBAAb,CAAN,EAAjB,CAEA,mBACI,MAAC,SAAD,yBACI,KAAC,MAAD,EACI,aAAa,CAAEH,KAAK,CAACK,aADzB,CAEI,OAAO,CAAEL,KAAK,CAACM,OAFnB,CAGI,UAAU,CAAEN,KAAK,CAACO,UAHtB,CAII,KAAK,CAAE,OAJX,CAKI,UAAU,CAAE,CALhB,CAMI,KAAK,CAAE,KANX,CAOI,QAAQ,CAAEL,QAPd,CAQI,QAAQ,CAAEE,QARd,EADJ,cAYI,MAAC,GAAD,EAAK,KAAK,CAAE,CAAEI,OAAO,CAAE,MAAX,CAAmBC,SAAS,CAAE,MAA9B,CAAZ,wBACI,YAAK,KAAK,CAAE,CAAEA,SAAS,CAAE,QAAb,CAAZ,uBACI,KAAC,cAAD,EACI,QAAQ,CAAE,0BAAMR,CAAAA,OAAO,CAACE,IAAR,CAAa,wBAAb,CAAN,EADd,CAEI,SAAS,CAAEH,KAAK,CAACM,OAAN,CAAcI,KAAd,CAAoBC,aAFnC,CAGI,aAAa,CAAEX,KAAK,CAACK,aAHzB,CAII,KAAK,CAAE,IAJX,EADJ,EADJ,cAUI,aAVJ,CAYKT,UAAU,CAACI,KAAK,CAACM,OAAN,CAAcI,KAAd,CAAoBE,MAArB,CAZf,cAcI,aAdJ,cAgBI,KAAC,IAAD,EAAM,EAAE,CAAC,wBAAT,uBACI,KAAC,WAAD,EAAa,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAV,CAApB,2BADJ,EAhBJ,GAZJ,GADJ,CAmCH,CAxCD,CA0CA,cAAed,CAAAA,KAAf","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Box, Container, StartButton } from \"./Common\";\nimport { Question, Station } from \"./types\";\nimport htmlParser from \"react-html-parser\";\nimport TimerApparatus from \"./AlphaTimer\";\nimport Header from \"./Header\";\n\ntype BriefProps = {\n    updateStation: Dispatch<SetStateAction<Station>>;\n    station: Station;\n    handleExit: (questions: Question[], tok: string) => void;\n    questionIdx: number;\n};\n\nconst Brief = (props: BriefProps) => {\n    const history = useHistory();\n    const nextFunc = () => history.push(\"/OSCE/Station/Question\");\n    const prevFunc = () => history.push(\"/OSCE/Station/Question\");\n\n    return (\n        <Container>\n            <Header\n                updateStation={props.updateStation}\n                station={props.station}\n                handleExit={props.handleExit}\n                title={\"Brief\"}\n                percentage={5}\n                timer={false}\n                nextFunc={nextFunc}\n                prevFunc={prevFunc}\n            />\n\n            <Box style={{ padding: \"20px\", textAlign: \"left\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <TimerApparatus\n                        nextFunc={() => history.push(\"/OSCE/Station/Question\")}\n                        startTime={props.station.brief.timePermitted}\n                        updateStation={props.updateStation}\n                        brief={true}\n                    />\n                </div>\n\n                <br />\n\n                {htmlParser(props.station.brief.prompt)}\n\n                <br></br>\n\n                <Link to=\"/OSCE/Station/Question\">\n                    <StartButton style={{ margin: \"auto\" }}>Start Station</StartButton>\n                </Link>\n            </Box>\n        </Container>\n    );\n};\n\nexport default Brief;\n"]},"metadata":{},"sourceType":"module"}