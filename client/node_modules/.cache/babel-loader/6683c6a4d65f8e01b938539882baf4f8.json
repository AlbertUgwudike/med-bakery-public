{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/QuestionSelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8;\n\nimport axios from \"../../myaxios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullQuestion } from \"./exampleQuestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar QuestionSelector = function QuestionSelector(props) {\n  _s();\n\n  // these will be null in the actual implementatiuon\n  // initalised once questions are retrieved\n  var _useState = useState([NullQuestion]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      updateQuestions = _useState2[1];\n\n  var _useState3 = useState(NullQuestion),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedQuestion = _useState4[0],\n      updateSelectedQuestion = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFinding = _useState6[0],\n      updateSelectedFinding = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedCategory = _useState8[0],\n      updateSelectedCategory = _useState8[1];\n\n  var _useContext = useContext(MetaContext),\n      SERVER_URL = _useContext.SERVER_URL,\n      token = _useContext.token;\n\n  var loadQuestions = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(SERVER_URL + \"/interp/get_questions\", {\n                token: token\n              });\n\n            case 2:\n              res = _context.sent;\n              updateQuestions(res.data.questions);\n              updateSelectedQuestion(res.data.questions[0]);\n              updateSelectedFinding(res.data.questions[0].finding);\n              updateSelectedCategory(res.data.questions[0].category);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadQuestions() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadQuestions();\n  }, []);\n  var categories = Array.apply(void 0, _toConsumableArray(new Set(questions.map(function (q) {\n    return q.category;\n  }))));\n\n  var changeSelection = function changeSelection(category, finding, idx) {\n    updateSelectedCategory(category);\n    var filteredForCategory = questions.filter(function (q) {\n      return q.category === category;\n    }); // no finding selected, set question to first in category\n\n    if (finding === \"\") {\n      updateSelectedFinding(filteredForCategory[0].finding);\n      updateSelectedQuestion(filteredForCategory[0]);\n      return;\n    } // finding has been provided\n\n\n    updateSelectedFinding(finding);\n    var filteredForfinding = filteredForCategory.filter(function (q) {\n      return q.finding === finding;\n    }); // no specific index selected\n\n    if (idx === -1) {\n      updateSelectedQuestion(filteredForfinding[0]);\n      return;\n    } // valid idx has been selected\n\n\n    updateSelectedQuestion(filteredForfinding[idx]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"15%\"\n      },\n      children: categories.map(function (c) {\n        var findings = Array.apply(void 0, _toConsumableArray(new Set(questions.filter(function (q) {\n          return q.category === c;\n        }).map(function (q) {\n          return q.finding;\n        }))));\n        return /*#__PURE__*/_jsxDEV(CategoryPanel, {\n          selected: c === selectedCategory,\n          children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n            children: c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, _this), findings.map(function (f) {\n            return /*#__PURE__*/_jsxDEV(FindingOption, {\n              selected: f === selectedFinding && c === selectedCategory,\n              onClick: function onClick() {\n                return changeSelection(c, f, -1);\n              },\n              children: f\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        backgroundColor: \"#1c2124\",\n        width: \"80%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"25%\"\n        },\n        children: questions.filter(function (q) {\n          return q.category === selectedCategory && q.finding === selectedFinding;\n        }).map(function (q, i) {\n          return /*#__PURE__*/_jsxDEV(FindingOption, {\n            onClick: function onClick() {\n              return changeSelection(q.category, q.finding, i);\n            },\n            selected: q.title === selectedQuestion.title,\n            children: q.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"60%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(QuestionSummary, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"30px\"\n            },\n            children: selectedQuestion.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Img, {\n            src: SERVER_URL + \"/media/interp/\" + selectedQuestion.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Features, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"Key Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, _this), selectedQuestion.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/DataInterpretation/Question\",\n          children: /*#__PURE__*/_jsxDEV(StartButton, {\n            onClick: function onClick() {\n              return props.updateCurrentQuestion(selectedQuestion);\n            },\n            children: \"Practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionSelector, \"07oZmYJd9NrPCqzxtQqqcmRW/lU=\");\n\n_c = QuestionSelector;\nexport default QuestionSelector;\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #2f3237;\\n    margin: 5%;\\n    padding: 20px 10px;\\n    display: flex;\\n    justify-content: space-around;\\n\"])));\n_c2 = Container;\nvar FindingOption = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: \", \";\\n    color: \", \";\\n    margin: 5%;\\n    padding: 5%;\\n    display: flex;\\n    cursor: pointer;\\n\"])), function (props) {\n  return props.selected ? \"#FAD000\" : \"#2f3237\";\n}, function (props) {\n  return props.selected ? \"black\" : \"white\";\n});\n_c3 = FindingOption;\nvar CategoryTitle = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    font-size: 20px;\\n    margin: 5px;\\n\"])));\n_c4 = CategoryTitle;\nvar CategoryPanel = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin-bottom: 10px;\\n    padding: 10px 5px;\\n    background-color: #1c2124;\\n\"])));\n_c5 = CategoryPanel;\nvar QuestionSummary = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    background-color: #2f3237;\\n    margin: 10px;\\n\"])));\n_c6 = QuestionSummary;\nvar Img = styled.img(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    height: 300px;\\n\"])));\n_c7 = Img;\nvar Features = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    text-align: left;\\n    border: 2px solid grey;\\n    margin: 10px;\\n    padding: 20px;\\n\"])));\n_c8 = Features;\nvar StartButton = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n    cursor: pointer;\\n    width: 80%;\\n    background-color: #fad000;\\n    color: black;\\n    text-align: center;\\n    margin: auto;\\n\"])));\n_c9 = StartButton;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"QuestionSelector\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"FindingOption\");\n$RefreshReg$(_c4, \"CategoryTitle\");\n$RefreshReg$(_c5, \"CategoryPanel\");\n$RefreshReg$(_c6, \"QuestionSummary\");\n$RefreshReg$(_c7, \"Img\");\n$RefreshReg$(_c8, \"Features\");\n$RefreshReg$(_c9, \"StartButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/QuestionSelector.tsx"],"names":["axios","useContext","useEffect","useState","Link","styled","MetaContext","NullQuestion","QuestionSelector","props","questions","updateQuestions","selectedQuestion","updateSelectedQuestion","selectedFinding","updateSelectedFinding","selectedCategory","updateSelectedCategory","SERVER_URL","token","loadQuestions","post","res","data","finding","category","categories","Array","Set","map","q","changeSelection","idx","filteredForCategory","filter","filteredForfinding","width","c","findings","f","display","backgroundColor","i","title","fontSize","image","description","updateCurrentQuestion","Container","div","FindingOption","selected","CategoryTitle","CategoryPanel","QuestionSummary","Img","img","Features","StartButton"],"mappings":"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","sourcesContent":["import axios from \"../../myaxios\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { DataInterpQuestion } from \"./types\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullQuestion } from \"./exampleQuestions\";\n\ntype QuestionSelectorProps = {\n    updateCurrentQuestion: Dispatch<SetStateAction<DataInterpQuestion>>;\n};\n\nconst QuestionSelector = (props: QuestionSelectorProps) => {\n    // these will be null in the actual implementatiuon\n    // initalised once questions are retrieved\n    const [questions, updateQuestions] = useState([ NullQuestion ]);\n    const [selectedQuestion, updateSelectedQuestion] = useState(NullQuestion);\n    const [selectedFinding, updateSelectedFinding] = useState(\"\");\n    const [selectedCategory, updateSelectedCategory] = useState(\"\");\n\n    const { SERVER_URL, token } = useContext(MetaContext);\n\n    const loadQuestions = async () => {\n        const res = await axios.post(SERVER_URL + \"/interp/get_questions\", { token });\n        updateQuestions(res.data.questions);\n        updateSelectedQuestion(res.data.questions[0]);\n        updateSelectedFinding(res.data.questions[0].finding);\n        updateSelectedCategory(res.data.questions[0].category);\n    }\n\n    useEffect( () => { loadQuestions(); }, [])\n\n    const categories = Array(...new Set(questions.map(q => q.category)));\n\n    const changeSelection = (category: string, finding: string, idx: number) => {\n        updateSelectedCategory(category);\n        const filteredForCategory = questions.filter(q => q.category === category);\n\n        // no finding selected, set question to first in category\n        if (finding === \"\") {\n            updateSelectedFinding(filteredForCategory[0].finding);\n            updateSelectedQuestion(filteredForCategory[0]);\n            return;\n        }\n\n        // finding has been provided\n        updateSelectedFinding(finding);\n        const filteredForfinding = filteredForCategory.filter(q => q.finding === finding);\n\n        // no specific index selected\n        if (idx === -1) {\n            updateSelectedQuestion(filteredForfinding[0]);\n            return;\n        }\n\n        // valid idx has been selected\n        updateSelectedQuestion(filteredForfinding[idx]);\n    };\n\n    return (\n        <Container>\n            <div style={{ width: \"15%\" }}>\n                {categories.map(c => {\n                    const findings = Array(\n                        ...new Set(questions.filter(q => q.category === c).map(q => q.finding))\n                    );\n\n                    return (\n                        <CategoryPanel selected={c === selectedCategory}>\n                            <CategoryTitle>{c}</CategoryTitle>\n                            {findings.map(f => (\n                                <FindingOption\n                                    selected={f === selectedFinding && c === selectedCategory}\n                                    onClick={() => changeSelection(c, f, -1)}\n                                >\n                                    {f}\n                                </FindingOption>\n                            ))}\n                        </CategoryPanel>\n                    );\n                })}\n            </div>\n            <div style={{ display: \"flex\", backgroundColor: \"#1c2124\", width: \"80%\" }}>\n                <div style={{ width: \"25%\" }}>\n                    {questions\n                        .filter(\n                            q => q.category === selectedCategory && q.finding === selectedFinding\n                        )\n                        .map((q, i) => (\n                            <FindingOption\n                                onClick={() => changeSelection(q.category, q.finding, i)}\n                                selected={q.title === selectedQuestion.title}\n                            >\n                                {q.title}\n                            </FindingOption>\n                        ))}\n                </div>\n                <div style={{ width: \"60%\" }}>\n                    <QuestionSummary>\n                        <div style={{ fontSize: \"30px\" }}>{selectedQuestion.title}</div>\n                        {/* image would be fetched from source in actual implementation */}\n                        <Img src={SERVER_URL + \"/media/interp/\" + selectedQuestion.image} />\n                        <Features>\n                            <div style={{ fontSize: \"20px\" }}>Key Features:</div>\n                            {selectedQuestion.description}\n                        </Features>\n                    </QuestionSummary>\n                    <Link to=\"/DataInterpretation/Question\">\n                        <StartButton onClick = {() => props.updateCurrentQuestion(selectedQuestion)} >Practice</StartButton>\n                    </Link>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionSelector;\n\nconst Container = styled.div`\n    background-color: #2f3237;\n    margin: 5%;\n    padding: 20px 10px;\n    display: flex;\n    justify-content: space-around;\n`;\n\nconst FindingOption = styled.div<{ selected: boolean }>`\n    background-color: ${props => (props.selected ? \"#FAD000\" : \"#2f3237\")};\n    color: ${props => (props.selected ? \"black\" : \"white\")};\n    margin: 5%;\n    padding: 5%;\n    display: flex;\n    cursor: pointer;\n`;\n\nconst CategoryTitle = styled.div`\n    font-size: 20px;\n    margin: 5px;\n`;\n\nconst CategoryPanel = styled.div<{ selected: boolean }>`\n    text-align: center;\n    margin-bottom: 10px;\n    padding: 10px 5px;\n    background-color: #1c2124;\n`;\n\nconst QuestionSummary = styled.div`\n    text-align: center;\n    background-color: #2f3237;\n    margin: 10px;\n`;\n\nconst Img = styled.img`\n    height: 300px;\n`;\n\nconst Features = styled.div`\n    text-align: left;\n    border: 2px solid grey;\n    margin: 10px;\n    padding: 20px;\n`;\n\nconst StartButton = styled.div`\n    cursor: pointer;\n    width: 80%;\n    background-color: #fad000;\n    color: black;\n    text-align: center;\n    margin: auto;\n`;\n"]},"metadata":{},"sourceType":"module"}