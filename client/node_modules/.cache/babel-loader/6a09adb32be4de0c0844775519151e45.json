{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGOptions.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport MetaContext from '../../MetaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ECGOptions = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    darkMode: darkMode,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: props.section.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"150px\",\n        overflow: \"scroll\"\n      },\n      children: props.section.options.map(option => /*#__PURE__*/_jsxDEV(Option, {\n        darkMode: darkMode,\n        selected: props.section.selected === option,\n        onClick: () => props.handleOptionChange(props.section.label, option),\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ECGOptions, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = ECGOptions;\nexport default ECGOptions;\nconst Panel = styled.div`\n    display: inline-block;\n    background-color: ${props => props.darkMode ? \"#1f1f1f\" : \"#f6f5f0\"};\n    border: 2.5px solid ${props => props.darkMode ? \"#838383\" : \"white\"};\n    box-shadow: ${props => props.darkMode ? \"0px 0px 10px black\" : \"0px 0px 5px gray\"};\n    border-radius: 5px;\n    padding: 10px; \n    margin: 10px;\n    width: 250px;\n    height: 250px;\n`;\n_c2 = Panel;\nconst Title = styled.div`\n    font: 30px Champion;\n    text-align: center;\n    padding: 20px;\n`;\n_c3 = Title;\nconst Option = styled.button`\n    display: block;\n    border-style: none;\n    border-radius: 5px;\n    margin: 10px 0px;\n    width: 100%;\n    background-color:  ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"grey\" : \"#FBE9EE\"};\n    color: ${props => props.selected ? \"white\" : \"black\"};\n    &:hover {\n        background-color: ${props => props.selected ? \"#1C725C\" : \"#7735FD\"};\n        color: white;\n    }\n`;\n_c4 = Option;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ECGOptions\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Option\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGOptions.tsx"],"names":["useContext","styled","MetaContext","ECGOptions","props","darkMode","section","label","height","overflow","options","map","option","selected","handleOptionChange","Panel","div","Title","Option","button"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AASA,MAAMC,UAAU,GAAIC,KAAD,IAA2B;AAAA;;AAE1C,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACE,WAAD,CAA/B;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAKG,QAApB;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAKA,QAApB;AAAA,gBAAiCD,KAAK,CAACE,OAAN,CAAcC;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAI;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAd;AAAA,gBAEIL,KAAK,CAACE,OAAN,CAAcI,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,iBAC5B,QAAC,MAAD;AACI,QAAA,QAAQ,EAAKP,QADjB;AAEI,QAAA,QAAQ,EAAKD,KAAK,CAACE,OAAN,CAAcO,QAAd,KAA2BD,MAF5C;AAGI,QAAA,OAAO,EAAK,MAAMR,KAAK,CAACU,kBAAN,CAAyBV,KAAK,CAACE,OAAN,CAAcC,KAAvC,EAA8CK,MAA9C,CAHtB;AAAA,kBAKMA;AALN;AAAA;AAAA;AAAA;AAAA,cADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtBD;;GAAMT,U;;KAAAA,U;AAwBN,eAAeA,UAAf;AAEA,MAAMY,KAAK,GAAGd,MAAM,CAACe,GAA2B;AAChD;AACA,wBAAyBZ,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,SAAW;AAC1E,0BAA2BD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,OAAS;AAC1E,kBAAmBD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,oBAAjB,GAAwC,kBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMU,K;AAYN,MAAME,KAAK,GAAGhB,MAAM,CAACe,GAA2B;AAChD;AACA;AACA;AACA,CAJA;MAAMC,K;AAMN,MAAMC,MAAM,GAAGjB,MAAM,CAACkB,MAAiD;AACvE;AACA;AACA;AACA;AACA;AACA,yBAA0Bf,KAAK,IAAIA,KAAK,CAACS,QAAN,GAAkBT,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,SAA/C,GAA6DD,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,SAAY;AACtI,aAAcD,KAAK,IAAIA,KAAK,CAACS,QAAN,GAAiB,OAAjB,GAA2B,OAAS;AAC3D;AACA,4BAA6BT,KAAK,IAAIA,KAAK,CAACS,QAAN,GAAiB,SAAjB,GAA6B,SAAW;AAC9E;AACA;AACA,CAZA;MAAMK,M","sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport MetaContext from '../../MetaContext';\n\ntype OptionSection = { label: string, selected: string, correct: string, options: string[] };\n\ntype ECGOptionProps = {\n    handleOptionChange: (label: string, selected: string) => void;\n    section: OptionSection;\n}\n\nconst ECGOptions = (props: ECGOptionProps) => {\n\n    const { darkMode } = useContext(MetaContext);\n\n    return (\n        <Panel darkMode = { darkMode }>\n            <Title darkMode = { darkMode }>{ props.section.label }</Title>\n            <div style = {{ height: \"150px\", overflow: \"scroll\" }}>\n            { \n                props.section.options.map(option => \n                    <Option \n                        darkMode = { darkMode }\n                        selected = { props.section.selected === option } \n                        onClick = { () => props.handleOptionChange(props.section.label, option) } \n                    >\n                        { option }\n                    </Option>\n                ) \n            }\n            </div>\n        </Panel>\n    );\n}\n\nexport default ECGOptions;\n\nconst Panel = styled.div<{ darkMode: boolean }>`\n    display: inline-block;\n    background-color: ${ props => props.darkMode ? \"#1f1f1f\" : \"#f6f5f0\" };\n    border: 2.5px solid ${ props => props.darkMode ? \"#838383\" : \"white\" };\n    box-shadow: ${ props => props.darkMode ? \"0px 0px 10px black\" : \"0px 0px 5px gray\" };\n    border-radius: 5px;\n    padding: 10px; \n    margin: 10px;\n    width: 250px;\n    height: 250px;\n`\n\nconst Title = styled.div<{ darkMode: boolean }>`\n    font: 30px Champion;\n    text-align: center;\n    padding: 20px;\n`\n\nconst Option = styled.button<{ darkMode: boolean, selected: boolean }>`\n    display: block;\n    border-style: none;\n    border-radius: 5px;\n    margin: 10px 0px;\n    width: 100%;\n    background-color:  ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : (props.darkMode ? \"grey\" : \"#FBE9EE\") };\n    color: ${ props => props.selected ? \"white\" : \"black\" };\n    &:hover {\n        background-color: ${ props => props.selected ? \"#1C725C\" : \"#7735FD\" };\n        color: white;\n    }\n`"]},"metadata":{},"sourceType":"module"}