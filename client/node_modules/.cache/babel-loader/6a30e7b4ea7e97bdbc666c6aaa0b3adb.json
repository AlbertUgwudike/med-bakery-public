{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/CategorySelector.tsx\",\n    _this = this,\n    _templateObject;\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CategorySelector = function CategorySelector(props) {\n  return /*#__PURE__*/_jsxDEV(Select, {\n    onChange: function onChange(e) {\n      return props.updateCategory(e.target.value);\n    },\n    children: [\"All\"].concat(_toConsumableArray(new Set(props.stationSummaries.map(function (ss) {\n      return ss.category;\n    })))).map(function (c, i) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        children: c\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = CategorySelector;\nexport default CategorySelector;\nvar Select = styled.select(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-bottom: 20px;\\n    background-color: #1c2124;\\n    border-radius: 5px;\\n    color: white;\\n    border-style: none;\\n    padding: 5px;\\n    text-align: center;\\n\"])));\n_c2 = Select;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategorySelector\");\n$RefreshReg$(_c2, \"Select\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/CategorySelector.tsx"],"names":["React","styled","CategorySelector","props","e","updateCategory","target","value","concat","Set","stationSummaries","map","ss","category","c","i","Select","select"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAkC;AACvD,sBACI,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAID,KAAK,CAACE,cAAN,CAAqBD,CAAC,CAACE,MAAF,CAASC,KAA9B,CAAJ;AAAA,KAAnB;AAAA,cACK,CAAC,KAAD,EACIC,MADJ,oBACe,IAAIC,GAAJ,CAAQN,KAAK,CAACO,gBAAN,CAAuBC,GAAvB,CAA2B,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,QAAP;AAAA,KAA7B,CAAR,CADf,GAEIF,GAFJ,CAEQ,UAACG,CAAD,EAAIC,CAAJ;AAAA,0BACD;AAAA,kBAAiBD;AAAjB,SAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,eADC;AAAA,KAFR;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAVD;;KAAMb,gB;AAYN,eAAeA,gBAAf;AAEA,IAAMc,MAAM,GAAGf,MAAM,CAACgB,MAAV,kPAAZ;MAAMD,M","sourcesContent":["import React, { Dispatch, SetStateAction } from \"react\";\nimport styled from \"styled-components\";\nimport { StationSummary } from \"./types\";\n\ntype CategorySelectorProps = {\n    updateCategory: Dispatch<SetStateAction<string>>;\n    stationSummaries: StationSummary[];\n    category: string;\n};\n\nconst CategorySelector = (props: CategorySelectorProps) => {\n    return (\n        <Select onChange={e => props.updateCategory(e.target.value)}>\n            {[\"All\"]\n                .concat([...new Set(props.stationSummaries.map(ss => ss.category))])\n                .map((c, i) => (\n                    <option key={i}>{c}</option>\n                ))}\n        </Select>\n    );\n};\n\nexport default CategorySelector;\n\nconst Select = styled.select`\n    margin-bottom: 20px;\n    background-color: #1c2124;\n    border-radius: 5px;\n    color: white;\n    border-style: none;\n    padding: 5px;\n    text-align: center;\n`;\n"]},"metadata":{},"sourceType":"module"}