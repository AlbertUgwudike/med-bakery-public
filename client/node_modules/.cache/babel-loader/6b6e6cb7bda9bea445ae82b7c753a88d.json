{"ast":null,"code":"import _regeneratorRuntime from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useState}from\"react\";import{Switch,Route}from\"react-router-dom\";import OSCESelector from\"./OSCESelector\";import StationPage from\"./StationPage\";import MetaContext from\"../../MetaContext\";import{NullStation}from\"./DemoStations/NullStation\";import axios from\"../../myaxios\";import{binaryToCode,downloadAssets,extractReponseAudio,populateMarkScheme,populateResponseAudios,useStations,useUserDetails}from\"./hooks\";import LoadingOverlay from\"./LoadingOverlay\";import Navigator from\"../Navigator\";import SubscribeModal from\"../SubscribePage/SubscribeModal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var OSCEPage=function OSCEPage(){var _useContext=useContext(MetaContext),token=_useContext.token,SERVER_URL=_useContext.SERVER_URL;var _useState=useState(NullStation),_useState2=_slicedToArray(_useState,2),station=_useState2[0],updateStation=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),reviewMode=_useState4[0],updateReviewMode=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],updateLoading=_useState6[1];var _useUserDetails=useUserDetails(SERVER_URL,token),_useUserDetails2=_slicedToArray(_useUserDetails,2),userDetailsOsce=_useUserDetails2[0],userLoading=_useUserDetails2[1];var _useStations=useStations(SERVER_URL,token),_useStations2=_slicedToArray(_useStations,2),stationSummarires=_useStations2[0],stationeSummariesLoading=_useStations2[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),subscribeModalOpen=_useState8[0],updateSubscribeOpen=_useState8[1];var selectStation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,options){var axres,matches,rawResponseAudios,stationWithMarks,stationWithResponses,localContentStation,_localContentStation;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:updateLoading(true);updateReviewMode(options.review);_context.prev=2;_context.next=5;return axios.post(SERVER_URL+\"/osce/get_station\",{token:token,id:id});case 5:axres=_context.sent;if(axres.data.success){_context.next=8;break;}throw\"selecteStation (OSCEPage): Station retrieval failed!\";case 8:if(!options.review){_context.next=19;break;}matches=userDetailsOsce.answeredStations.filter(function(s){return s.id===axres.data.station.id;});rawResponseAudios=matches.length===0?Array(axres.data.station.questions.length).fill(\"\"):matches[0].responseAudios;stationWithMarks=populateMarkScheme(axres.data.station,options.marks);stationWithResponses=populateResponseAudios(stationWithMarks,rawResponseAudios);_context.next=15;return downloadAssets(stationWithResponses,SERVER_URL);case 15:localContentStation=_context.sent;updateStation(localContentStation);_context.next=23;break;case 19:_context.next=21;return downloadAssets(axres.data.station,SERVER_URL);case 21:_localContentStation=_context.sent;updateStation(_localContentStation);case 23:_context.next=28;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](2);console.error(_context.t0);case 28:updateLoading(false);case 29:case\"end\":return _context.stop();}}},_callee,null,[[2,25]]);}));return function selectStation(_x,_x2){return _ref.apply(this,arguments);};}();var handleExit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questions,tok){var points,markCode,responseAudios;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:updateLoading(true);points=questions.map(function(q){return q.markScheme.map(function(ms){return ms.points.map(function(p){return p.selected?1:0;});});}).flat(2);markCode=binaryToCode([1].concat(points));if(reviewMode){_context2.next=9;break;}_context2.next=6;return extractReponseAudio(questions);case 6:responseAudios=_context2.sent;_context2.next=9;return axios.post(SERVER_URL+\"/osce/update_stations\",{token:tok,markCode:markCode,id:station.id,responseAudios:responseAudios});case 9:updateStation(NullStation);window.location.href=\"/OSCE\";updateLoading(false);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function handleExit(_x3,_x4){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[subscribeModalOpen&&/*#__PURE__*/_jsx(SubscribeModal,{close:function close(){return updateSubscribeOpen(false);}}),/*#__PURE__*/_jsxs(Switch,{children:[loading&&/*#__PURE__*/_jsx(LoadingOverlay,{}),/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/OSCE\",children:[/*#__PURE__*/_jsx(Navigator,{selection:\"OSCE\"}),/*#__PURE__*/_jsx(OSCESelector,{openSubscribeModal:function openSubscribeModal(){return updateSubscribeOpen(true);},stationSummarires:stationSummarires,answeredStations:userDetailsOsce.answeredStations,selectStation:selectStation,station:station,purchasedOsce:userDetailsOsce.purchasedOsce,stationSummariesLoading:stationeSummariesLoading||userLoading})]}),/*#__PURE__*/_jsx(Route,{path:\"/OSCE/Station\",children:/*#__PURE__*/_jsx(StationPage,{handleExit:handleExit,station:station,updateStation:updateStation,answeredStations:userDetailsOsce.answeredStations,reviewMode:reviewMode})})]})]});};export default OSCEPage;","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/OSCEPage.tsx"],"names":["useContext","useState","Switch","Route","OSCESelector","StationPage","MetaContext","NullStation","axios","binaryToCode","downloadAssets","extractReponseAudio","populateMarkScheme","populateResponseAudios","useStations","useUserDetails","LoadingOverlay","Navigator","SubscribeModal","OSCEPage","token","SERVER_URL","station","updateStation","reviewMode","updateReviewMode","loading","updateLoading","userDetailsOsce","userLoading","stationSummarires","stationeSummariesLoading","subscribeModalOpen","updateSubscribeOpen","selectStation","id","options","review","post","axres","data","success","matches","answeredStations","filter","s","rawResponseAudios","length","Array","questions","fill","responseAudios","stationWithMarks","marks","stationWithResponses","localContentStation","console","error","handleExit","tok","points","map","q","markScheme","ms","p","selected","flat","markCode","concat","window","location","href","purchasedOsce"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport OSCESelector from \"./OSCESelector\";\nimport StationPage from \"./StationPage\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullStation } from \"./DemoStations/NullStation\";\nimport axios from \"../../myaxios\";\nimport { AnsweredStationDetails, Question, StationSummary } from \"./types\";\nimport {\n    binaryToCode,\n    downloadAssets,\n    extractReponseAudio,\n    populateMarkScheme,\n    populateResponseAudios,\n    useStations,\n    useUserDetails,\n} from \"./hooks\";\nimport LoadingOverlay from \"./LoadingOverlay\";\nimport Navigator from \"../Navigator\";\nimport SubscribeModal from \"../SubscribePage/SubscribeModal\";\n\nconst OSCEPage = () => {\n    const { token, SERVER_URL } = useContext(MetaContext);\n    const [station, updateStation] = useState(NullStation);\n    const [reviewMode, updateReviewMode] = useState(false);\n    const [loading, updateLoading] = useState(false);\n    const [userDetailsOsce, userLoading] = useUserDetails(SERVER_URL, token);\n    const [stationSummarires, stationeSummariesLoading] = useStations(SERVER_URL, token);\n    const [subscribeModalOpen, updateSubscribeOpen] = useState(false);\n\n    const selectStation = async (id: string, options: { review: boolean; marks: (0 | 1)[] }) => {\n        updateLoading(true);\n        updateReviewMode(options.review);\n\n        try {\n            const axres = await axios.post(SERVER_URL + \"/osce/get_station\", { token, id });\n\n            if (!axres.data.success) {\n                throw \"selecteStation (OSCEPage): Station retrieval failed!\";\n            }\n\n            if (options.review) {\n                const matches = userDetailsOsce.answeredStations.filter(\n                    s => s.id === axres.data.station.id\n                );\n                const rawResponseAudios =\n                    matches.length === 0\n                        ? Array(axres.data.station.questions.length).fill(\"\")\n                        : matches[0].responseAudios;\n\n                const stationWithMarks = populateMarkScheme(axres.data.station, options.marks);\n                const stationWithResponses = populateResponseAudios(\n                    stationWithMarks,\n                    rawResponseAudios\n                );\n                const localContentStation = await downloadAssets(stationWithResponses, SERVER_URL);\n                updateStation(localContentStation);\n            } else {\n                const localContentStation = await downloadAssets(axres.data.station, SERVER_URL);\n                updateStation(localContentStation);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n        updateLoading(false);\n    };\n\n    const handleExit = async (questions: Question[], tok: string) => {\n        updateLoading(true);\n\n        const points = questions\n            .map(q => q.markScheme.map(ms => ms.points.map(p => (p.selected ? 1 : 0))))\n            .flat(2);\n        const markCode = binaryToCode([1 as 1 | 0].concat(points));\n\n        if (!reviewMode) {\n            const responseAudios = await extractReponseAudio(questions);\n            await axios.post(SERVER_URL + \"/osce/update_stations\", {\n                token: tok,\n                markCode,\n                id: station.id,\n                responseAudios,\n            });\n        }\n\n        updateStation(NullStation);\n        window.location.href = \"/OSCE\";\n\n        updateLoading(false);\n    };\n\n    return (\n        <>\n            {subscribeModalOpen && <SubscribeModal close={() => updateSubscribeOpen(false)} />}\n            <Switch>\n                {loading && <LoadingOverlay />}\n\n                <Route exact path=\"/OSCE\">\n                    <Navigator selection={\"OSCE\"} />\n                    <OSCESelector\n                        openSubscribeModal={() => updateSubscribeOpen(true)}\n                        stationSummarires={stationSummarires}\n                        answeredStations={userDetailsOsce.answeredStations}\n                        selectStation={selectStation}\n                        station={station}\n                        purchasedOsce={userDetailsOsce.purchasedOsce}\n                        stationSummariesLoading={stationeSummariesLoading || userLoading}\n                    />\n                </Route>\n\n                <Route path=\"/OSCE/Station\">\n                    <StationPage\n                        handleExit={handleExit}\n                        station={station}\n                        updateStation={updateStation}\n                        answeredStations={userDetailsOsce.answeredStations}\n                        reviewMode={reviewMode}\n                    />\n                </Route>\n            </Switch>\n        </>\n    );\n};\n\nexport default OSCEPage;\n"]},"metadata":{},"sourceType":"module"}