{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/QuestionPage/SectionProgress.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport styled from 'styled-components';\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SectionProgress = props => {\n  _s();\n\n  const {\n    darkMode,\n    SERVER_URL,\n    token\n  } = useContext(MetaContext);\n  const forwardButtonFunc = props.canProgressSection ? () => props.updateSectionIdx(i => i + 1) : () => {};\n  const backButtonFunc = props.canRetreatSection ? () => props.updateSectionIdx(i => i - 1) : () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"10px\",\n      padding: \"20px\"\n    },\n    children: [props.renderBackButton ? /*#__PURE__*/_jsxDEV(SectionSwitcher, {\n      darkMode: darkMode,\n      onClick: backButtonFunc,\n      children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this), \" Previous Section\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), props.canProgressSection ? /*#__PURE__*/_jsxDEV(SectionSwitcher, {\n      darkMode: darkMode,\n      onClick: forwardButtonFunc,\n      children: [\"Continue \", /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), props.canSaveAndProgress ? /*#__PURE__*/_jsxDEV(SaveAndProgressButton, {\n      darkMode: true,\n      onClick: props.saveAndProgress,\n      children: [\"Next Question \", /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SectionProgress, \"le8bWWXRTwQpRaKHfSOKGrMvzno=\");\n\n_c = SectionProgress;\nexport default SectionProgress;\nconst SectionSwitcher = styled.button`\n    border-style: none;\n    background-color: ${props => props.darkMode ? \"rgb(27, 39, 94)\" : \"#F6F5F0\"};\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    border-radius: 20px;\n    width: 200px;\n    float: right;\n    &:hover {\n        background-color: ${props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\"}; \n    }\n`;\n_c2 = SectionSwitcher;\nconst SaveAndProgressButton = styled.button`\n    color: white;\n    display: block;\n    text-decoration: none;\n    font-size: 18px;\n    height: 30px;\n    width:200px;\n    border-radius: 10px;\n    border-style: none;\n    margin: 0px auto;\n    background-color:  #7735FD;\n    float: right;\n`;\n_c3 = SaveAndProgressButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SectionProgress\");\n$RefreshReg$(_c2, \"SectionSwitcher\");\n$RefreshReg$(_c3, \"SaveAndProgressButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/QuestionPage/SectionProgress.tsx"],"names":["useContext","FaArrowLeft","FaArrowRight","styled","MetaContext","SectionProgress","props","darkMode","SERVER_URL","token","forwardButtonFunc","canProgressSection","updateSectionIdx","i","backButtonFunc","canRetreatSection","marginBottom","padding","renderBackButton","canSaveAndProgress","saveAndProgress","height","SectionSwitcher","button","SaveAndProgressButton"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,gBAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;;AAWA,MAAMC,eAAe,GAAIC,KAAD,IAAiC;AAAA;;AAErD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA;AAAxB,MAAkCT,UAAU,CAACI,WAAD,CAAlD;AACA,QAAMM,iBAAiB,GAAGJ,KAAK,CAACK,kBAAN,GAA2B,MAAML,KAAK,CAACM,gBAAN,CAAuBC,CAAC,IAAIA,CAAC,GAAG,CAAhC,CAAjC,GAAsE,MAAM,CAAE,CAAxG;AACA,QAAMC,cAAc,GAAGR,KAAK,CAACS,iBAAN,GAA0B,MAAMT,KAAK,CAACM,gBAAN,CAAuBC,CAAC,IAAIA,CAAC,GAAG,CAAhC,CAAhC,GAAqE,MAAM,CAAE,CAApG;AAGA,sBACI;AAAK,IAAA,KAAK,EAAI;AAAEG,MAAAA,YAAY,EAAE,MAAhB;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KAAd;AAAA,eAGQX,KAAK,CAACY,gBAAN,gBACQ,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAKX,QAA9B;AAAyC,MAAA,OAAO,EAAKO,cAArD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,gBAIQ,qCAPhB,EAWQR,KAAK,CAACK,kBAAN,gBACQ,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAKJ,QAA9B;AAAyC,MAAA,OAAO,EAAKG,iBAArD;AAAA,2CACa,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADb;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,gBAIQ,qCAfhB,EAoBQJ,KAAK,CAACa,kBAAN,gBACQ,QAAC,qBAAD;AACI,MAAA,QAAQ,EAAK,IADjB;AAEI,MAAA,OAAO,EAAKb,KAAK,CAACc,eAFtB;AAAA,gDAIkB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,gBAOQ,qCA3BhB,eA+BI;AAAK,MAAA,KAAK,EAAI;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAd;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA3CD;;GAAMhB,e;;KAAAA,e;AA6CN,eAAeA,eAAf;AAEA,MAAMiB,eAAe,GAAGnB,MAAM,CAACoB,MAA8B;AAC7D;AACA,wBAAyBjB,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,iBAAjB,GAAqC,SAAW;AAClF,aAAcD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,OAAjB,GAA2B,OAAS;AAC3D;AACA;AACA;AACA;AACA,4BAA6BD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,yBAAjB,GAA6C,SAAW;AAC9F;AACA,CAVA;MAAMe,e;AAYN,MAAME,qBAAqB,GAAGrB,MAAM,CAACoB,MAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMC,qB","sourcesContent":["import { useContext } from \"react\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport styled from 'styled-components';\nimport MetaContext from \"../../MetaContext\";\n\ntype SectionProgressProps = {\n    updateSectionIdx: React.Dispatch<React.SetStateAction<number>>;\n    canProgressSection: boolean;\n    canRetreatSection: boolean;\n    renderBackButton: boolean;\n    saveAndProgress: () => void;\n    canSaveAndProgress: boolean;\n}\n\nconst SectionProgress = (props: SectionProgressProps) => {\n\n    const { darkMode, SERVER_URL, token } = useContext(MetaContext);\n    const forwardButtonFunc = props.canProgressSection ? () => props.updateSectionIdx(i => i + 1) : () => {};\n    const backButtonFunc = props.canRetreatSection ? () => props.updateSectionIdx(i => i - 1) : () => {};\n\n\n    return (\n        <div style = {{ marginBottom: \"10px\", padding: \"20px\" }}>\n            \n            {\n                props.renderBackButton \n                    ?   <SectionSwitcher darkMode = { darkMode } onClick = { backButtonFunc } >\n                            <FaArrowLeft /> Previous Section \n                        </SectionSwitcher>\n                    :   <></>\n            }\n\n            {\n                props.canProgressSection\n                    ?   <SectionSwitcher darkMode = { darkMode } onClick = { forwardButtonFunc } >\n                            Continue <FaArrowRight />\n                        </SectionSwitcher>\n                    :   <></>\n                    \n            }\n\n            {\n                props.canSaveAndProgress \n                    ?   <SaveAndProgressButton \n                            darkMode = { true } \n                            onClick = { props.saveAndProgress }\n                        > \n                            Next Question <FaArrowRight />\n                        </SaveAndProgressButton>\n                    :   <></>\n            }\n            \n\n            <div style = {{ height: \"50px\" }}/>\n\n        </div>\n    )\n}\n\nexport default SectionProgress;\n\nconst SectionSwitcher = styled.button<{ darkMode: boolean }>`\n    border-style: none;\n    background-color: ${ props => props.darkMode ? \"rgb(27, 39, 94)\" : \"#F6F5F0\" };\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    border-radius: 20px;\n    width: 200px;\n    float: right;\n    &:hover {\n        background-color: ${ props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\" }; \n    }\n`\n\nconst SaveAndProgressButton = styled.button<{ darkMode: boolean }>`\n    color: white;\n    display: block;\n    text-decoration: none;\n    font-size: 18px;\n    height: 30px;\n    width:200px;\n    border-radius: 10px;\n    border-style: none;\n    margin: 0px auto;\n    background-color:  #7735FD;\n    float: right;\n`"]},"metadata":{},"sourceType":"module"}