{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Container } from \"../Common\";\nimport QuestionContent from \"./QuestionContent\";\nimport Header from \"../Header\";\nimport { useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar QuestionPage = function QuestionPage(props) {\n  _s();\n\n  var questionCount = props.station.questions.length;\n  var history = useHistory();\n  var idx = props.questionIdx;\n\n  var nextFunc = function nextFunc() {\n    return idx.curr === questionCount - 1 ? history.push(\"/OSCE/Station/Summary\") : props.updateQuestionIdx({\n      prev: idx.curr,\n      curr: idx.curr + 1\n    });\n  };\n\n  var prevFunc = function prevFunc() {\n    return idx.curr === 0 ? {} : props.updateQuestionIdx({\n      prev: idx.curr,\n      curr: idx.curr - 1\n    });\n  };\n\n  var transitionStyles = idx.curr < idx.prev ? {\n    entering: {\n      transform: \"translateY(-150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(150%)\"\n    },\n    exited: {\n      transform: \"translateY(-150%)\"\n    }\n  } : {\n    entering: {\n      transform: \"translateY(150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(-150%)\"\n    },\n    exited: {\n      transform: \"translateY(150%)\"\n    }\n  };\n  var settings = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    infinite: false\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      updateStation: props.updateStation,\n      station: props.station,\n      handleExit: props.handleExit,\n      questionIdx: idx,\n      title: \"Station\",\n      percentage: 10 + 100 * idx.curr / questionCount,\n      timer: true,\n      nextFunc: nextFunc,\n      prevFunc: prevFunc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n        children: props.station.questions.map(function (question, questionIdx) {\n          return /*#__PURE__*/_jsxDEV(QuestionContent, {\n            question: question,\n            updateStation: props.updateStation,\n            questionIdx: questionIdx,\n            updateQuestionIdx: props.updateQuestionIdx,\n            transitionStyle: 2,\n            nextFunc: nextFunc\n          }, questionIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionPage, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = QuestionPage;\nexport default QuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionPage.tsx"],"names":["Container","QuestionContent","Header","useHistory","Slider","QuestionPage","props","questionCount","station","questions","length","history","idx","questionIdx","nextFunc","curr","push","updateQuestionIdx","prev","prevFunc","transitionStyles","entering","transform","entered","exiting","exited","settings","slidesToShow","slidesToScroll","infinite","updateStation","handleExit","map","question"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Container } from \"../Common\";\nimport { Question, startAudioRecordingId, Station } from \"../types\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionContent from \"./QuestionContent\";\nimport Header from \"../Header\";\nimport { useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\ntype QuestionProps = {\n    station: Station;\n    questionIdx: { prev: number; curr: number };\n    updateStation: Dispatch<SetStateAction<Station>>;\n    updateQuestionIdx: Dispatch<SetStateAction<{ curr: number; prev: number }>>;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst QuestionPage = (props: QuestionProps) => {\n    const questionCount = props.station.questions.length;\n    const history = useHistory();\n    const idx = props.questionIdx;\n\n    const nextFunc = () =>\n        idx.curr === questionCount - 1\n            ? history.push(\"/OSCE/Station/Summary\")\n            : props.updateQuestionIdx({\n                  prev: idx.curr,\n                  curr: idx.curr + 1,\n              });\n\n    const prevFunc = () =>\n        idx.curr === 0\n            ? {}\n            : props.updateQuestionIdx({\n                  prev: idx.curr,\n                  curr: idx.curr - 1,\n              });\n\n    const transitionStyles: { [key: string]: any } =\n        idx.curr < idx.prev\n            ? {\n                  entering: { transform: \"translateY(-150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(150%)\" },\n                  exited: { transform: \"translateY(-150%)\" },\n              }\n            : {\n                  entering: { transform: \"translateY(150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(-150%)\" },\n                  exited: { transform: \"translateY(150%)\" },\n              };\n\n    const settings = {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        infinite: false,\n    };\n\n    return (\n        <Container>\n            <Header\n                updateStation={props.updateStation}\n                station={props.station}\n                handleExit={props.handleExit}\n                questionIdx={idx}\n                title={\"Station\"}\n                percentage={10 + (100 * idx.curr) / questionCount}\n                timer={true}\n                nextFunc={nextFunc}\n                prevFunc={prevFunc}\n            />\n\n            <div className=\"content\">\n                <Slider {...settings}>\n                    {props.station.questions.map((question, questionIdx) => (\n                        <QuestionContent\n                            question={question}\n                            updateStation={props.updateStation}\n                            questionIdx={questionIdx}\n                            updateQuestionIdx={props.updateQuestionIdx}\n                            transitionStyle={2}\n                            nextFunc={nextFunc}\n                            key={questionIdx}\n                        />\n                    ))}\n                </Slider>\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionPage;\n"]},"metadata":{},"sourceType":"module"}