{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/LoadingScreen.tsx\",\n    _this = this,\n    _templateObject,\n    _templateObject2;\n\nimport { FaSpinner } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LoadingScreen = function LoadingScreen(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#2f3237\",\n      margin: \"5%\",\n      padding: \"5%\",\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, _this), \" \\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Spinner, {\n      children: /*#__PURE__*/_jsxDEV(FaSpinner, {\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar rotate = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nfrom {\\n    -webkit-transform: rotate(0deg);\\n    -o-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n    -o-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n\"])));\nvar Spinner = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    -webkit-animation: \", \" 2s linear infinite;\\n    -o-animation: \", \" 2s linear infinite;\\n    animation: \", \" 2s linear infinite;\\n\"])), rotate, rotate, rotate);\n_c2 = Spinner;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadingScreen\");\n$RefreshReg$(_c2, \"Spinner\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/LoadingScreen.tsx"],"names":["FaSpinner","styled","keyframes","LoadingScreen","props","background","margin","padding","display","message","rotate","Spinner","div"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA+B;AACjD,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,MAAM,EAAE,IAAjC;AAAuCC,MAAAA,OAAO,EAAE,IAAhD;AAAsDC,MAAAA,OAAO,EAAE;AAA/D,KAAZ;AAAA,4BACI;AAAA,gBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,aADJ,gCAEI,QAAC,OAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CATD;;KAAMN,a;AAWN,eAAeA,aAAf;AAEA,IAAMO,MAAM,GAAGR,SAAH,iTAAZ;AAaA,IAAMS,OAAO,GAAGV,MAAM,CAACW,GAAV,gNACYF,MADZ,EAEOA,MAFP,EAGIA,MAHJ,CAAb;MAAMC,O","sourcesContent":["import { FaSpinner } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\n\ntype LoadingScreenProps = {\n    message: string;\n};\n\nconst LoadingScreen = (props: LoadingScreenProps) => {\n    return (\n        <div style={{ background: \"#2f3237\", margin: \"5%\", padding: \"5%\", display: \"flex\" }}>\n            <h5>{props.message}</h5> &nbsp;&nbsp;&nbsp;\n            <Spinner>\n                <FaSpinner size={30} />\n            </Spinner>\n        </div>\n    );\n};\n\nexport default LoadingScreen;\n\nconst rotate = keyframes`\nfrom {\n    -webkit-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n    -o-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spinner = styled.div`\n    -webkit-animation: ${rotate} 2s linear infinite;\n    -o-animation: ${rotate} 2s linear infinite;\n    animation: ${rotate} 2s linear infinite;\n`;\n"]},"metadata":{},"sourceType":"module"}