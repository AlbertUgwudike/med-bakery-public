{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/FilterSelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3;\n\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FilterSelector = function FilterSelector(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  return narrowWindow ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      onChange: function onChange(e) {\n        return props.updateFilter(e.target.value);\n      },\n      children: [\"No Filter\", \"Attempted\", \"Free\", \"Premium\"].map(function (c, i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, _this) : /*#__PURE__*/_jsxDEV(FilterSelectorBar, {\n    children: [\"No Filter\", \"Attempted\", \"Free\", \"Premium\"].map(function (f, i) {\n      return /*#__PURE__*/_jsxDEV(Category, {\n        selected: f === props.filter,\n        onClick: function onClick() {\n          return props.updateFilter(f === props.filter ? \"No Filter\" : f);\n        },\n        children: f\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FilterSelector, \"veOw0VdmvVP6A+6/HalGX29hfpk=\");\n\n_c = FilterSelector;\nexport default FilterSelector;\nvar Select = styled.select(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-bottom: 20px;\\n    background-color: #1c2124;\\n    border-radius: 5px;\\n    color: white;\\n    border-style: none;\\n    padding: 5px;\\n    text-align: center;\\n    width: 150px;\\n\"])));\n_c2 = Select;\nvar Category = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    margin-left: 20px;\\n    background-color: \", \";\\n    border-radius: 5px;\\n    color: \", \";\\n    border-style: none;\\n    padding: 5px;\\n    cursor: pointer;\\n\"])), function (props) {\n  return props.selected ? \"#505050\" : \"transparent\";\n}, function (props) {\n  return props.selected ? \"white\" : \"grey\";\n});\n_c3 = Category;\nvar FilterSelectorBar = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    margin-bottom: 20px;\\n    margin-left: -20px;\\n    padding-bottom: 10px;\\n    border-radius: 0;\\n\"])));\n_c4 = FilterSelectorBar;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FilterSelector\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"Category\");\n$RefreshReg$(_c4, \"FilterSelectorBar\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/FilterSelector.tsx"],"names":["React","useContext","styled","MetaContext","FilterSelector","props","narrowWindow","e","updateFilter","target","value","map","c","i","f","filter","Select","select","Category","div","selected","FilterSelectorBar"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAA0CC,UAA1C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAgC;AAAA;;AACnD,oBAAyBJ,UAAU,CAACE,WAAD,CAAnC;AAAA,MAAQG,YAAR,eAAQA,YAAR;;AAEA,SAAOA,YAAY,gBACf;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,eAAIF,KAAK,CAACG,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,KAA5B,CAAJ;AAAA,OAAnB;AAAA,gBACK,CAAC,WAAD,EAAc,WAAd,EAA2B,MAA3B,EAAmC,SAAnC,EAA8CC,GAA9C,CAAkD,UAACC,CAAD,EAAIC,CAAJ;AAAA,4BAC/C;AAAA,oBAAiBD;AAAjB,WAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,iBAD+C;AAAA,OAAlD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADe,gBASf,QAAC,iBAAD;AAAA,cACM,CAAC,WAAD,EAAc,WAAd,EAA2B,MAA3B,EAAmC,SAAnC,CAAD,CAA4DF,GAA5D,CAAgE,UAACG,CAAD,EAAID,CAAJ;AAAA,0BAC7D,QAAC,QAAD;AACI,QAAA,QAAQ,EAAEC,CAAC,KAAKT,KAAK,CAACU,MAD1B;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMV,KAAK,CAACG,YAAN,CAAmBM,CAAC,KAAKT,KAAK,CAACU,MAAZ,GAAqB,WAArB,GAAmCD,CAAtD,CAAN;AAAA,SAFb;AAAA,kBAKKA;AALL,SAGSD,CAHT;AAAA;AAAA;AAAA;AAAA,eAD6D;AAAA,KAAhE;AADL;AAAA;AAAA;AAAA;AAAA,WATJ;AAqBH,CAxBD;;GAAMT,c;;KAAAA,c;AA0BN,eAAeA,cAAf;AAEA,IAAMY,MAAM,GAAGd,MAAM,CAACe,MAAV,qQAAZ;MAAMD,M;AAWN,IAAME,QAAQ,GAAGhB,MAAM,CAACiB,GAAV,4OAEU,UAAAd,KAAK;AAAA,SAAKA,KAAK,CAACe,QAAN,GAAiB,SAAjB,GAA6B,aAAlC;AAAA,CAFf,EAID,UAAAf,KAAK;AAAA,SAAKA,KAAK,CAACe,QAAN,GAAiB,OAAjB,GAA2B,MAAhC;AAAA,CAJJ,CAAd;MAAMF,Q;AAUN,IAAMG,iBAAiB,GAAGnB,MAAM,CAACiB,GAAV,kMAAvB;MAAME,iB","sourcesContent":["import React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { StationSummary } from \"./types\";\n\ntype FilterSelectorProps = {\n    updateFilter: Dispatch<SetStateAction<Filter>>;\n    stationSummaries: StationSummary[];\n    filter: Filter;\n};\n\nexport type Filter = \"No Filter\" | \"Attempted\" | \"Free\" | \"Premium\";\n\nconst FilterSelector = (props: FilterSelectorProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    return narrowWindow ? (\n        <div>\n            <Select onChange={e => props.updateFilter(e.target.value as Filter)}>\n                {[\"No Filter\", \"Attempted\", \"Free\", \"Premium\"].map((c, i) => (\n                    <option key={i}>{c}</option>\n                ))}\n            </Select>\n        </div>\n    ) : (\n        <FilterSelectorBar>\n            {([\"No Filter\", \"Attempted\", \"Free\", \"Premium\"] as Filter[]).map((f, i) => (\n                <Category\n                    selected={f === props.filter}\n                    onClick={() => props.updateFilter(f === props.filter ? \"No Filter\" : f)}\n                    key={i}\n                >\n                    {f}\n                </Category>\n            ))}\n        </FilterSelectorBar>\n    );\n};\n\nexport default FilterSelector;\n\nconst Select = styled.select`\n    margin-bottom: 20px;\n    background-color: #1c2124;\n    border-radius: 5px;\n    color: white;\n    border-style: none;\n    padding: 5px;\n    text-align: center;\n    width: 150px;\n`;\n\nconst Category = styled.div<{ selected: boolean }>`\n    margin-left: 20px;\n    background-color: ${props => (props.selected ? \"#505050\" : \"transparent\")};\n    border-radius: 5px;\n    color: ${props => (props.selected ? \"white\" : \"grey\")};\n    border-style: none;\n    padding: 5px;\n    cursor: pointer;\n`;\n\nconst FilterSelectorBar = styled.div`\n    display: flex;\n    margin-bottom: 20px;\n    margin-left: -20px;\n    padding-bottom: 10px;\n    border-radius: 0;\n`;\n"]},"metadata":{},"sourceType":"module"}