{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Brief.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Box, Timer, Container, StartButton } from \"./Common\";\nimport { useLoopTime } from \"./hooks\";\nimport htmlParser from \"react-html-parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Brief = function Brief(props) {\n  _s();\n\n  var secondTicker = useLoopTime(props.station.brief.timeRemaining);\n\n  if (secondTicker <= 0) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/OSCE/Station/0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Time left to read:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Timer, {\n          children: [\" \", \"00 : \", secondTicker < 10 ? \"0\" : \"\", secondTicker, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), htmlParser(props.station.brief.prompt), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/OSCE/Station/0\",\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          style: {\n            margin: \"auto\"\n          },\n          children: \"Start Station\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Brief, \"ckUBrSMwDYfswUaIEhAzW/SaIGU=\", false, function () {\n  return [useLoopTime];\n});\n\n_c = Brief;\nexport default Brief;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brief\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Brief.tsx"],"names":["Link","Redirect","Box","Timer","Container","StartButton","useLoopTime","htmlParser","Brief","props","secondTicker","station","brief","timeRemaining","textAlign","prompt","margin"],"mappings":";;;;AACA,SAASA,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,UAAnD;AACA,SAASC,WAAT,QAA4B,SAA5B;AAGA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAuB;AAAA;;AACjC,MAAMC,YAAY,GAAGJ,WAAW,CAACG,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,aAArB,CAAhC;;AAEA,MAAIH,YAAY,IAAI,CAApB,EAAuB;AACnB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE,EAAZ;AAAA,8BACI;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,KAAD;AAAA,qBACK,GADL,WAEUJ,YAAY,GAAG,EAAf,GAAoB,GAApB,GAA0B,EAFpC,EAGKA,YAHL,EAGmB,GAHnB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAUI;AAAA;AAAA;AAAA;AAAA,eAVJ,EAYKH,UAAU,CAACE,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBG,MAArB,CAZf,eAcI;AAAA;AAAA;AAAA;AAAA,eAdJ,eAgBI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CA/BD;;GAAMR,K;UACmBF,W;;;KADnBE,K;AAiCN,eAAeA,KAAf","sourcesContent":["import { Dispatch, ReactElement, SetStateAction, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Box, Timer, Container, StartButton } from \"./Common\";\nimport { useLoopTime } from \"./hooks\";\nimport TimerBar from \"./TimerBar\";\nimport { Station } from \"./types\";\nimport htmlParser from \"react-html-parser\";\n\ntype BriefProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n};\n\nconst Brief = (props: BriefProps) => {\n    const secondTicker = useLoopTime(props.station.brief.timeRemaining);\n\n    if (secondTicker <= 0) {\n        return <Redirect to=\"/OSCE/Station/0\" />;\n    }\n\n    return (\n        <Container>\n            <Box style={{}}>\n                <div style={{ textAlign: \"center\" }}>\n                    <em>Time left to read:</em>\n                    <Timer>\n                        {\" \"}\n                        00 : {secondTicker < 10 ? \"0\" : \"\"}\n                        {secondTicker}{\" \"}\n                    </Timer>\n                </div>\n\n                <br />\n\n                {htmlParser(props.station.brief.prompt)}\n\n                <br></br>\n\n                <Link to=\"/OSCE/Station/0\">\n                    <StartButton style={{ margin: \"auto\" }}>Start Station</StartButton>\n                </Link>\n            </Box>\n        </Container>\n    );\n};\n\nexport default Brief;\n"]},"metadata":{},"sourceType":"module"}