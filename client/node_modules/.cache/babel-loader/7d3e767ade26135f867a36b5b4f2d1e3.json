{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReview/QuestionReviewContent.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2;\n\nimport { useContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport { Box } from \"../Common\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport { promptId, responseId } from \"../types\";\nimport MarkScheme from \"./MarkScheme\";\nimport WaveSurferReview from \"./WaveSurferReview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar getPromptAudio = function getPromptAudio(idx) {\n  return document.getElementById(promptId + idx);\n};\n\nvar QuestionReviewContent = function QuestionReviewContent(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  var _useState = useState({\n    promptPlaying: true,\n    waveSurfer: undefined,\n    responsePlaying: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      audioState = _useState2[0],\n      updateAudioState = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showMarkScheme = _useState4[0],\n      updateShowMarkScheme = _useState4[1];\n\n  var stopEverything = function stopEverything() {\n    var _audioState$waveSurfe;\n\n    getPromptAudio(props.questionIdx).pause();\n    (_audioState$waveSurfe = audioState.waveSurfer) === null || _audioState$waveSurfe === void 0 ? void 0 : _audioState$waveSurfe.stop();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        responsePlaying: false,\n        promptPlaying: false\n      });\n    });\n  };\n\n  var _play = function play(id) {\n    var _audioState$waveSurfe2;\n\n    stopEverything();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: id === promptId,\n        responsePlaying: id !== promptId\n      });\n    });\n    if (id === promptId) getPromptAudio(props.questionIdx).play();else (_audioState$waveSurfe2 = audioState.waveSurfer) === null || _audioState$waveSurfe2 === void 0 ? void 0 : _audioState$waveSurfe2.play();\n  }; // stop wavesurfer when transitions active or component unmounts ----------\n\n\n  var stopAll = function stopAll() {\n    var _audioState$waveSurfe3;\n\n    console.log(\"unmounting\");\n    (_audioState$waveSurfe3 = audioState.waveSurfer) === null || _audioState$waveSurfe3 === void 0 ? void 0 : _audioState$waveSurfe3.stop();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        responsePlaying: false\n      });\n    });\n  };\n\n  useEffect(stopAll, [props.transitionStyle]);\n  useEffect(function () {\n    return stopAll;\n  }, []); // -------------------------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: _objectSpread({\n        gridRowStart: 2,\n        gridColumnStart: 1,\n        height: \"60vh\",\n        transition: \"transform \".concat(500, \"ms\")\n      }, props.transitionStyle),\n      children: [/*#__PURE__*/_jsxDEV(QuestionPrompt, {\n        question: props.question,\n        toggle: function toggle() {\n          audioState.promptPlaying ? stopEverything() : _play(promptId);\n        },\n        promptId: promptId + props.questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"49vh\"\n        },\n        children: showMarkScheme ? /*#__PURE__*/_jsxDEV(Img, {\n          src: props.question.img,\n          narrowWindow: narrowWindow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, _this) : /*#__PURE__*/_jsxDEV(MarkScheme, {\n          markScheme: props.question.markScheme,\n          questionIdx: props.questionIdx,\n          updateStation: props.updateStation,\n          reviewMode: props.reviewMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        gridRowStart: 4,\n        gridColumnStart: 1,\n        zIndex: 700,\n        backgroundColor: \"#1c2124\",\n        height: \"15vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SchemeToggle, {\n        narrowWindow: narrowWindow,\n        onClick: function onClick() {\n          return updateShowMarkScheme(!showMarkScheme);\n        },\n        children: showMarkScheme ? \"Mark Scheme\" : \"Show Station\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(WaveSurferReview, {\n        playing: audioState.responsePlaying,\n        stopEverything: stopEverything,\n        play: function play() {\n          return _play(responseId);\n        },\n        exemplarAudio: props.question.exemplarAudio,\n        responseAudio: props.question.responseAudio,\n        updateAudioState: updateAudioState,\n        questionIdx: props.questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(QuestionReviewContent, \"tLvkyKGrhNahe5ob9fDIqleds7E=\");\n\n_c = QuestionReviewContent;\nexport default QuestionReviewContent;\nvar Img = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    max-width: 100%;\\n    max-height: 100%;\\n    transition: width 0.2s;\\n\"])));\n_c2 = Img;\nvar SchemeToggle = styled.button(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 30px;\\n    align-content: center;\\n    width: 100%;\\n    margin-top: 10px;\\n    border: 1px solid #414142;\\n    color: #fad000;\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c3 = SchemeToggle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuestionReviewContent\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"SchemeToggle\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReview/QuestionReviewContent.tsx"],"names":["useContext","useState","useEffect","styled","MetaContext","Box","QuestionPrompt","promptId","responseId","MarkScheme","WaveSurferReview","getPromptAudio","idx","document","getElementById","QuestionReviewContent","props","narrowWindow","promptPlaying","waveSurfer","undefined","responsePlaying","audioState","updateAudioState","showMarkScheme","updateShowMarkScheme","stopEverything","questionIdx","pause","stop","as","play","id","stopAll","console","log","transitionStyle","gridRowStart","gridColumnStart","height","transition","question","display","alignItems","img","markScheme","updateStation","reviewMode","zIndex","backgroundColor","exemplarAudio","responseAudio","Img","SchemeToggle","button"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect, Dispatch, SetStateAction } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport { Box } from \"../Common\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport { Question, promptId, responseId, Station } from \"../types\";\nimport MarkScheme from \"./MarkScheme\";\nimport WaveSurferReview from \"./WaveSurferReview\";\n\ntype QuestionReviewContentProps = {\n    question: Question;\n    questionIdx: number;\n    transitionStyle: any;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    reviewMode: boolean;\n};\n\nexport type AudioState = {\n    waveSurfer: WaveSurfer | undefined;\n    responsePlaying: boolean;\n    promptPlaying: boolean;\n};\n\nconst getPromptAudio = (idx: number) => document.getElementById(promptId + idx) as HTMLAudioElement;\n\nconst QuestionReviewContent = (props: QuestionReviewContentProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n    const [audioState, updateAudioState] = useState<AudioState>({\n        promptPlaying: true,\n        waveSurfer: undefined,\n        responsePlaying: false,\n    });\n    const [showMarkScheme, updateShowMarkScheme] = useState(true);\n\n    const stopEverything = () => {\n        getPromptAudio(props.questionIdx).pause();\n        audioState.waveSurfer?.stop();\n        updateAudioState(as => ({\n            ...as,\n            responsePlaying: false,\n            promptPlaying: false,\n        }));\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: id === promptId,\n            responsePlaying: id !== promptId,\n        }));\n\n        if (id === promptId) getPromptAudio(props.questionIdx).play();\n        else audioState.waveSurfer?.play();\n    };\n\n    // stop wavesurfer when transitions active or component unmounts ----------\n    const stopAll = () => {\n        console.log(\"unmounting\");\n        audioState.waveSurfer?.stop();\n        updateAudioState(as => ({\n            ...as,\n            responsePlaying: false,\n        }));\n    };\n    useEffect(stopAll, [props.transitionStyle]);\n    useEffect(() => stopAll, []);\n    // -------------------------------------------------------------------------\n\n    return (\n        <>\n            <div\n                style={{\n                    gridRowStart: 2,\n                    gridColumnStart: 1,\n                    height: \"60vh\",\n                    transition: `transform ${500}ms`,\n                    ...props.transitionStyle,\n                }}\n            >\n                <QuestionPrompt\n                    question={props.question}\n                    toggle={() => {\n                        audioState.promptPlaying ? stopEverything() : play(promptId);\n                    }}\n                    promptId={promptId + props.questionIdx}\n                />\n                <Box\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        height: \"49vh\",\n                    }}\n                >\n                    {showMarkScheme ? (\n                        <Img src={props.question.img} narrowWindow={narrowWindow}></Img>\n                    ) : (\n                        <MarkScheme\n                            markScheme={props.question.markScheme}\n                            questionIdx={props.questionIdx}\n                            updateStation={props.updateStation}\n                            reviewMode={props.reviewMode}\n                        />\n                    )}\n                </Box>\n            </div>\n            <div\n                style={{\n                    gridRowStart: 4,\n                    gridColumnStart: 1,\n                    zIndex: 700,\n                    backgroundColor: \"#1c2124\",\n                    height: \"15vh\",\n                }}\n            >\n                <SchemeToggle\n                    narrowWindow={narrowWindow}\n                    onClick={() => updateShowMarkScheme(!showMarkScheme)}\n                >\n                    {showMarkScheme ? \"Mark Scheme\" : \"Show Station\"}\n                </SchemeToggle>\n                <WaveSurferReview\n                    playing={audioState.responsePlaying}\n                    stopEverything={stopEverything}\n                    play={() => play(responseId)}\n                    exemplarAudio={props.question.exemplarAudio}\n                    responseAudio={props.question.responseAudio}\n                    updateAudioState={updateAudioState}\n                    questionIdx={props.questionIdx}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default QuestionReviewContent;\n\nconst Img = styled.img<{ narrowWindow: boolean }>`\n    display: block;\n    margin: auto;\n    max-width: 100%;\n    max-height: 100%;\n    transition: width 0.2s;\n`;\n\nconst SchemeToggle = styled.button<{ narrowWindow: boolean }>`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 30px;\n    align-content: center;\n    width: 100%;\n    margin-top: 10px;\n    border: 1px solid #414142;\n    color: #fad000;\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n"]},"metadata":{},"sourceType":"module"}