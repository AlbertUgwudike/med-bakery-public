{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{FaCheckCircle,FaMinusCircle,FaTimesCircle}from\"react-icons/fa\";import{Link,useHistory}from\"react-router-dom\";import styled from\"styled-components\";import{getBinaryDigits,markPercentage}from\"./hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StationSummaryCard=function StationSummaryCard(props){var history=useHistory();var matches=props.answeredStations.filter(function(s){return s.id===props.summary.id;});var percentage=matches.length===0?0:markPercentage(matches[0].markCode);var marks=matches.length===0?[]:getBinaryDigits(matches[0].markCode).slice(1);var handleClick=function handleClick(review){props.selectStation(props.summary.id,{review:review,marks:marks});};var completnessSymbol=/*#__PURE__*/_jsx(FaMinusCircle,{color:\"#505050\",size:20});if(!isNaN(percentage)&&props.available){completnessSymbol=percentage<50?/*#__PURE__*/_jsx(FaTimesCircle,{color:\"red\",size:20}):/*#__PURE__*/_jsx(FaCheckCircle,{color:\"green\",size:20});}return/*#__PURE__*/_jsxs(StationPanel,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{margin:\"20px 0 20px 20px\",display:\"flex\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"div\",{children:completnessSymbol}),\" \\xA0\\xA0\\xA0\",/*#__PURE__*/_jsx(\"span\",{style:{fontSize:15},children:props.summary.title})]}),/*#__PURE__*/_jsx(\"div\",{children:props.available?/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\"},children:[/*#__PURE__*/_jsxs(Percent,{color:percentage>50?\"green\":\"red\",children:[isNaN(percentage)?\"--\":percentage,\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/OSCE/Station/Brief\",style:{display:\"block\"},children:/*#__PURE__*/_jsx(Button,{color:\"#FAD000\",onClick:function onClick(){return handleClick(false);},children:\"Start\"})}),matches.length>0&&/*#__PURE__*/_jsx(Link,{to:\"/OSCE/Station/Summary\",style:{display:\"block\"},children:/*#__PURE__*/_jsx(Button,{color:\"grey\",onClick:function onClick(){return handleClick(true);},children:\"Review\"})})]})]}):/*#__PURE__*/_jsx(Premium,{color:\"#FAD000\",style:{backgroundColor:\"#FAAD29\",color:\"#000000\"},onClick:function onClick(){return history.push(\"/Subscribe/Checkout\");},children:\"Premium\"})})]});};export default StationSummaryCard;var StationPanel=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    background-color: #040C18;\\n    color: #f7bd9d;\\n    border-style: none;\\n    border-radius: 10px;\\n    width: 100%;\\n    max-width: 400px;\\n    margin: 0 20px 20px 0;\\n\"])));var Button=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin: 5px 10px 5px 0;\\n    border-radius: 8px;\\n    padding: 0 10px;\\n    height: 30px;\\n    width: 75px;\\n    border: 1px solid grey;\\n    color: \",\";\\n    background-color: transparent;\\n\"])),function(props){return props.color;});var Percent=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin: 5px 10px 5px 0;\\n    border-radius: 8px;\\n    padding: 0 10px;\\n    height: 30px;\\n    border: 1px solid grey;\\n    color: \",\";\\n    background-color: transparent;\\n\"])),function(props){return props.color;});var Premium=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin: 5px 10px 5px 0;\\n    border-radius: 8px;\\n    padding: 0 10px;\\n    border: 1px solid grey;\\n    color: #fad000;\\n    background-color: #fad000;\\n    width: 100px;\\n\"])));","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationSummaryCard.tsx"],"names":["FaCheckCircle","FaMinusCircle","FaTimesCircle","Link","useHistory","styled","getBinaryDigits","markPercentage","StationSummaryCard","props","history","matches","answeredStations","filter","s","id","summary","percentage","length","markCode","marks","slice","handleClick","review","selectStation","completnessSymbol","isNaN","available","margin","display","alignItems","fontSize","title","backgroundColor","color","push","StationPanel","div","Button","button","Percent","Premium"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { FaCheckCircle, FaMinusCircle, FaTimesCircle } from \"react-icons/fa\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { getBinaryDigits, markPercentage } from \"./hooks\";\nimport { AnsweredStationDetails } from \"./types\";\n\ntype StationSummaryCardProps = {\n    summary: {\n        id: string;\n        thumbnail: string;\n        title: string;\n    };\n    selectStation: (id: string, options: { review: boolean; marks: (0 | 1)[] }) => void;\n    answeredStations: AnsweredStationDetails[];\n    available: boolean;\n    openSubscribeModal: () => void;\n};\n\nconst StationSummaryCard = (props: StationSummaryCardProps) => {\n    const history = useHistory();\n    const matches = props.answeredStations.filter(s => s.id === props.summary.id);\n    const percentage = matches.length === 0 ? 0 : markPercentage(matches[0].markCode);\n    const marks = matches.length === 0 ? [] : getBinaryDigits(matches[0].markCode).slice(1);\n\n    const handleClick = (review: boolean) => {\n        props.selectStation(props.summary.id, { review, marks });\n    };\n\n    let completnessSymbol = <FaMinusCircle color=\"#505050\" size={20} />;\n    if (!isNaN(percentage) && props.available) {\n        completnessSymbol =\n            percentage < 50 ? (\n                <FaTimesCircle color=\"red\" size={20} />\n            ) : (\n                <FaCheckCircle color=\"green\" size={20} />\n            );\n    }\n\n    return (\n        <StationPanel>\n            <div style={{ margin: \"20px 0 20px 20px\", display: \"flex\", alignItems: \"center\" }}>\n                <div>{completnessSymbol}</div> &nbsp;&nbsp;&nbsp;\n                <span style={{ fontSize: 15 }}>{props.summary.title}</span>\n            </div>\n            <div>\n                {props.available ? (\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Percent color={percentage > 50 ? \"green\" : \"red\"}>\n                            {isNaN(percentage) ? \"--\" : percentage}%\n                        </Percent>\n\n                        <div>\n                            <Link to=\"/OSCE/Station/Brief\" style={{ display: \"block\" }}>\n                                <Button color=\"#FAD000\" onClick={() => handleClick(false)}>\n                                    Start\n                                </Button>\n                            </Link>\n                            {matches.length > 0 && (\n                                <Link to=\"/OSCE/Station/Summary\" style={{ display: \"block\" }}>\n                                    <Button color=\"grey\" onClick={() => handleClick(true)}>\n                                        Review\n                                    </Button>\n                                </Link>\n                            )}\n                        </div>\n                    </div>\n                ) : (\n                    <Premium\n                        color=\"#FAD000\"\n                        style={{ backgroundColor: \"#FAAD29\", color: \"#000000\" }}\n                        onClick={() => history.push(\"/Subscribe/Checkout\")}\n                    >\n                        Premium\n                    </Premium>\n                )}\n            </div>\n        </StationPanel>\n    );\n};\n\nexport default StationSummaryCard;\n\nconst StationPanel = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #040C18;\n    color: #f7bd9d;\n    border-style: none;\n    border-radius: 10px;\n    width: 100%;\n    max-width: 400px;\n    margin: 0 20px 20px 0;\n`;\n\nconst Button = styled.button<{ color: string }>`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 8px;\n    padding: 0 10px;\n    height: 30px;\n    width: 75px;\n    border: 1px solid grey;\n    color: ${props => props.color};\n    background-color: transparent;\n`;\n\nconst Percent = styled.button<{ color: string }>`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 8px;\n    padding: 0 10px;\n    height: 30px;\n    border: 1px solid grey;\n    color: ${props => props.color};\n    background-color: transparent;\n`;\n\nconst Premium = styled.button`\n    text-align: center;\n    margin: 5px 10px 5px 0;\n    border-radius: 8px;\n    padding: 0 10px;\n    border: 1px solid grey;\n    color: #fad000;\n    background-color: #fad000;\n    width: 100px;\n`;\n"]},"metadata":{},"sourceType":"module"}