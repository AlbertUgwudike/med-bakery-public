{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/SidebarNav/SidebarNav.tsx\",\n    _s = $RefreshSig$();\n\nimport { FaHome, FaHeartbeat, FaSun, FaMoon, FaFlagCheckered, FaSkullCrossbones, FaTimes, FaArrowUp, FaArrowDown, FaBone } from 'react-icons/fa';\nimport { useContext, useEffect, useState } from 'react';\nimport blacklogo from \"../../images/blacklogo.svg\";\nimport whitelogo from \"../../images/whitelogo.svg\";\nimport { Link } from 'react-router-dom';\nimport { Logout } from '../HomePage/LoginLogout';\nimport styled from 'styled-components';\nimport { getEmailFromToken } from '../../functions';\nimport MetaContext from '../../MetaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SidebarNav = props => {\n  _s();\n\n  const {\n    darkMode,\n    token,\n    SERVER_URL\n  } = useContext(MetaContext);\n  const [masterUser, updateMasterUser] = useState(false);\n  const [finalsDropDown, updateFinalsDropDown] = useState(false);\n  useEffect(() => {\n    // determine whether the \"master user\" (me hehe) is logged in; allows access to dev controls\n    getEmailFromToken(token).then(email => updateMasterUser(email === \"albertu98@googlemail.com\"));\n  }, []);\n\n  const renderLink = (path, Icon, label) => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: path,\n      children: /*#__PURE__*/_jsxDEV(NavButton, {\n        darkMode: darkMode,\n        onClick: () => props.setToggled(!props.narrowWindow),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), \" \\xA0 \", label, \" \\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    darkMode: darkMode,\n    toggled: props.toggled,\n    children: [/*#__PURE__*/_jsxDEV(Exit, {\n      onClick: () => props.setToggled(false),\n      children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\",\n        width: \"max-content\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: darkMode ? whitelogo : blacklogo,\n          height: \"80px\",\n          style: {\n            margin: \"20px\"\n          },\n          onClick: () => props.setToggled(!props.toggled)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), renderLink(\"/User\", FaHome, \"Home\"), /*#__PURE__*/_jsxDEV(NavButton, {\n        darkMode: darkMode,\n        onClick: () => props.setDarkMode(!darkMode),\n        children: [darkMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 46\n        }, this), \" \\xA0 Theme \\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n        darkMode: darkMode,\n        onClick: () => updateFinalsDropDown(!finalsDropDown),\n        children: [/*#__PURE__*/_jsxDEV(FaFlagCheckered, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), \" \\xA0 Finals \\xA0 \", finalsDropDown ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 81\n        }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 97\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n        darkMode: darkMode,\n        dropped: finalsDropDown,\n        children: [renderLink(\"/User/Finals\", () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Selector\"), renderLink(\"/User/Finals/LastSession\", () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Previous\"), renderLink(\"/User/Finals/TextBook\", () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Text Book\"), renderLink(\"/User/Finals/LearningPoints\", () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Learning\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), renderLink(\"/User/ECG\", FaHeartbeat, \"ECGs\"), renderLink(\"/User/Anatomy\", FaBone, \"Anatomy\"), // Allow access to dev page if master user is logged in and \n      // we're using the developemnt server\n      masterUser && SERVER_URL === \"http://localhost:3001\" ? renderLink(\"/User/Dev\", FaSkullCrossbones, \"Dev\") : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Logout, {\n        darkMode: darkMode,\n        setToken: props.setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SidebarNav, \"Z+aszwPtiba5feWdw9oiM0iq6rM=\");\n\n_c = SidebarNav;\nexport default SidebarNav;\nconst Container = styled.div`\n    display: block;\n    position: sticky;\n    top: 0;\n    align-self: flex-start;\n    height: 100vh;\n    text-align: center;\n    width: ${props => props.toggled ? \"150px\" : \"0\"};\n    transition: left 0.5s;\n    background-color: ${props => props.darkMode ? \"#1f1f1f\" : \"#f6eeee\"};\n    transition: width 0.5s;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1000;\n\n    @media (max-width: 600px) {\n        position: fixed;\n        width: ${props => props.toggled ? \"100%\" : \"0\"};\n    }\n`;\n_c2 = Container;\nconst Exit = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    margin: 10px;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n_c3 = Exit;\nconst NavButton = styled.div`\n    text-align: left;\n    background-color: transparent;\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    width: 100%;\n    padding: 10px 20px;\n    margin: 0;\n    border-style: none;\n    white-space: nowrap;\n    overflow: hidden;\n    cursor: pointer;\n`;\n_c4 = NavButton;\nconst DropDown = styled.div`\n    display: block;\n    background-color: ${props => props.darkMode ? \"black\" : \"white\"};\n    margin: 0;\n    padding: 0;\n    height: ${props => props.dropped ? \"175px\" : \"0\"};\n    overflow: hidden;\n    transition: height 0.5s;\n`;\n_c5 = DropDown;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SidebarNav\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Exit\");\n$RefreshReg$(_c4, \"NavButton\");\n$RefreshReg$(_c5, \"DropDown\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/SidebarNav/SidebarNav.tsx"],"names":["FaHome","FaHeartbeat","FaSun","FaMoon","FaFlagCheckered","FaSkullCrossbones","FaTimes","FaArrowUp","FaArrowDown","FaBone","useContext","useEffect","useState","Link","Logout","styled","getEmailFromToken","MetaContext","SidebarNav","props","darkMode","token","SERVER_URL","masterUser","updateMasterUser","finalsDropDown","updateFinalsDropDown","then","email","renderLink","path","Icon","label","setToggled","narrowWindow","toggled","margin","width","display","marginTop","whitelogo","blacklogo","setDarkMode","setToken","Container","div","Exit","NavButton","DropDown","dropped"],"mappings":"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","sourcesContent":["import { FaHome,FaHeartbeat, FaSun, FaMoon, FaFlagCheckered, FaEquals, FaSkullCrossbones, FaTimes, FaArrowUp, FaArrowDown, FaBone } from 'react-icons/fa';\nimport { useContext, useEffect, useState } from 'react';\nimport blacklogo from '../../images/blacklogo.svg';\nimport whitelogo from '../../images/whitelogo.svg';\nimport { Link } from 'react-router-dom';\nimport { Logout } from '../HomePage/LoginLogout';\nimport styled from 'styled-components';\nimport { getEmailFromToken } from '../../functions';\nimport { IconType } from 'react-icons/lib';\nimport MetaContext from '../../MetaContext';\n\ntype SidebarNavProps = {\n    setToken: (userToken: string) => void;\n    setDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\n    toggled: boolean;\n    setToggled: React.Dispatch<React.SetStateAction<boolean>>;\n    narrowWindow: boolean;\n}\n\nconst SidebarNav = (props: SidebarNavProps) => {\n\n    const { darkMode, token, SERVER_URL } = useContext(MetaContext)\n    const [masterUser, updateMasterUser] = useState(false);\n    const [finalsDropDown, updateFinalsDropDown] = useState(false);\n\n    useEffect(() => {\n        // determine whether the \"master user\" (me hehe) is logged in; allows access to dev controls\n        getEmailFromToken(token).then(email => updateMasterUser(email === \"albertu98@googlemail.com\"));\n    }, []);\n\n    const renderLink = (path: string, Icon: IconType, label: string) => {\n        return (\n            <Link to = { path }>\n                <NavButton darkMode = { darkMode } onClick = { () => props.setToggled(!props.narrowWindow) } > \n                    <Icon  /> &nbsp; { label } &nbsp; \n                </NavButton>\n            </Link>\n        )\n    }\n    \n    return (\n        <Container darkMode = { darkMode } toggled = { props.toggled } >\n\n            {/* ----------------------- Button to collapse the side bar -----------------------*/}\n            <Exit onClick = { () => props.setToggled(false) }>\n                <FaTimes />\n            </Exit>\n            \n            <div style = {{ margin: \"auto\", width: \"max-content\" }}>\n\n                {/* -------------------------------- Logo ------------------------------------- */}\n                <div style = {{ display: \"inline-block\", marginTop: \"50px\" }}>\n                    <img \n                        src = { darkMode ? whitelogo : blacklogo } \n                        height=\"80px\" style={{ margin: \"20px\" }} \n                        onClick = { () => props.setToggled(!props.toggled) }\n                    /> \n                </div>\n\n                {/* --------------------------- sidebar home button --------------------------- */}\n                { renderLink(\"/User\", FaHome, \"Home\") }\n\n                {/* --------------------------- theme toggle button --------------------------- */}\n                <NavButton darkMode = { darkMode } onClick = { () => props.setDarkMode(!darkMode) }> \n                    { darkMode ? <FaSun /> : <FaMoon /> } &nbsp; Theme &nbsp;\n                </NavButton>\n                \n                {/* ----------------------- sidebar finals page button ------------------------ */}\n                <NavButton darkMode = { darkMode } onClick = { () => updateFinalsDropDown(!finalsDropDown) }> \n                    <FaFlagCheckered /> &nbsp; Finals &nbsp; { finalsDropDown ? <FaArrowUp /> : <FaArrowDown /> }\n                </NavButton>\n\n                {/* ---------------------- sidebar finals drop down menu ---------------------- */}\n                <DropDown darkMode = { darkMode } dropped = { finalsDropDown }>\n                    { renderLink(\"/User/Finals\", () => <></>, \"Selector\") }\n                    { renderLink(\"/User/Finals/LastSession\", () => <></>, \"Previous\") }\n                    { renderLink(\"/User/Finals/TextBook\", () => <></>, \"Text Book\") }\n                    { renderLink(\"/User/Finals/LearningPoints\", () => <></>, \"Learning\") }\n                </DropDown>\n\n                {/* -------------------- sidebar ECG and Anatomy Page buttons ------------------ */}\n                { renderLink(\"/User/ECG\", FaHeartbeat, \"ECGs\") }\n                { renderLink(\"/User/Anatomy\", FaBone, \"Anatomy\") }\n\n                {\n                    // Allow access to dev page if master user is logged in and \n                    // we're using the developemnt server\n\n                    masterUser && SERVER_URL === \"http://localhost:3001\"\n                        ?   renderLink(\"/User/Dev\", FaSkullCrossbones, \"Dev\")\n                        :   <></>\n                }\n\n                {/* --------------------------- Sidebar logout utton --------------------------- */}\n                <Logout darkMode = { darkMode } setToken = { props.setToken } />\n\n            </div>\n\n        </Container>\n    )\n}\n\nexport default SidebarNav;\n\nconst Container = styled.div<{ toggled: boolean, darkMode: boolean }>`\n    display: block;\n    position: sticky;\n    top: 0;\n    align-self: flex-start;\n    height: 100vh;\n    text-align: center;\n    width: ${ props => props.toggled ? \"150px\" : \"0\" };\n    transition: left 0.5s;\n    background-color: ${ props => props.darkMode ? \"#1f1f1f\" : \"#f6eeee\" };\n    transition: width 0.5s;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1000;\n\n    @media (max-width: 600px) {\n        position: fixed;\n        width: ${ props => props.toggled ? \"100%\" : \"0\" };\n    }\n`\n\nconst Exit = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    margin: 10px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst NavButton = styled.div<{ darkMode: boolean }>`\n    text-align: left;\n    background-color: transparent;\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    width: 100%;\n    padding: 10px 20px;\n    margin: 0;\n    border-style: none;\n    white-space: nowrap;\n    overflow: hidden;\n    cursor: pointer;\n`\n\nconst DropDown = styled.div<{ darkMode: boolean, dropped: boolean}>`\n    display: block;\n    background-color: ${ props => props.darkMode ? \"black\" : \"white\" };\n    margin: 0;\n    padding: 0;\n    height: ${ props => props.dropped ? \"175px\" : \"0\" };\n    overflow: hidden;\n    transition: height 0.5s;\n`"]},"metadata":{},"sourceType":"module"}