{"ast":null,"code":"import { compile } from 'compilerr';\nvar JSON_RPC_ERROR_CODES = {\n  INTERNAL_ERROR: -32603,\n  INVALID_PARAMS: -32602,\n  METHOD_NOT_FOUND: -32601\n};\nexport var renderMethodNotFoundError = compile({\n  message: 'The requested method called \"${method}\" is not supported.',\n  status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport var renderMissingResponseError = compile({\n  message: 'The handler of the method called \"${method}\" returned no required result.',\n  status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport var renderUnexpectedResultError = compile({\n  message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n  status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport var renderUnknownPortIdError = compile({\n  message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n  status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});","map":{"version":3,"sources":["../../../src/helpers/error-renderers.ts"],"names":[],"mappings":"AAAA,SAA4C,OAA5C,QAA2D,WAA3D;AAEA,IAAM,oBAAoB,GAAG;AAAE,EAAA,cAAc,EAAE,CAAC,KAAnB;AAA0B,EAAA,cAAc,EAAE,CAAC,KAA3C;AAAkD,EAAA,gBAAgB,EAAE,CAAC;AAArE,CAA7B;AAEA,OAAO,IAAM,yBAAyB,GAA6D,OAAO,CAAC;AACvG,EAAA,OAAO,EAAE,2DAD8F;AAEvG,EAAA,MAAM,EAAE,oBAAoB,CAAC;AAF0E,CAAD,CAAnG;AAKP,OAAO,IAAM,0BAA0B,GAA6D,OAAO,CAAC;AACxG,EAAA,OAAO,EAAE,2EAD+F;AAExG,EAAA,MAAM,EAAE,oBAAoB,CAAC;AAF2E,CAAD,CAApG;AAKP,OAAO,IAAM,2BAA2B,GAA6D,OAAO,CAAC;AACzG,EAAA,OAAO,EAAE,6EADgG;AAEzG,EAAA,MAAM,EAAE,oBAAoB,CAAC;AAF4E,CAAD,CAArG;AAKP,OAAO,IAAM,wBAAwB,GAA6D,OAAO,CAAC;AACtG,EAAA,OAAO,EAAE,6HAD6F;AAEtG,EAAA,MAAM,EAAE,oBAAoB,CAAC;AAFyE,CAAD,CAAlG","sourceRoot":"","sourcesContent":["import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map"]},"metadata":{},"sourceType":"module"}