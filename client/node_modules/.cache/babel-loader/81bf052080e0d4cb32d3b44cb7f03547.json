{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport var createVideoFrame = function createVideoFrame(emitNotSupportedError, wrapSubscribeFunction) {\n  return function (videoElement) {\n    return wrapSubscribeFunction(function (observer) {\n      if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata) {\n        videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n        observer.next(_objectSpread(_objectSpread({}, metadata), {}, {\n          now: now\n        }));\n      });\n      return function () {\n        return videoElement.cancelVideoFrameCallback(videoFrameHandle);\n      };\n    });\n  };\n};","map":{"version":3,"sources":["../../../src/factories/video-frame.ts"],"names":[],"mappings":";AAEA,OAAO,IAAM,gBAAgB,GAAuB,SAAvC,gBAAuC,CAAC,qBAAD,EAAwB,qBAAxB,EAAiD;AACjG,SAAO,UAAC,YAAD;AAAA,WACH,qBAAqB,CAAC,UAAC,QAAD,EAAa;AAC/B,UAAI,YAAY,CAAC,wBAAb,KAA0C,SAA1C,IAAuD,YAAY,CAAC,yBAAb,KAA2C,SAAtG,EAAiH;AAC7G,eAAO,qBAAqB,CAAC,QAAD,CAA5B;AACH;;AAED,UAAI,gBAAgB,GAAG,YAAY,CAAC,yBAAb,CAAuC,SAAS,kBAAT,CAA4B,GAA5B,EAAiC,QAAjC,EAAyC;AACnG,QAAA,gBAAgB,GAAG,YAAY,CAAC,yBAAb,CAAuC,kBAAvC,CAAnB;AAEA,QAAA,QAAQ,CAAC,IAAT,iCAAmB,QAAnB;AAA6B,UAAA,GAAG,EAAH;AAA7B;AACH,OAJsB,CAAvB;AAMA,aAAO;AAAA,eAAM,YAAY,CAAC,wBAAb,CAAsC,gBAAtC,CAAN;AAAA,OAAP;AACH,KAZoB,CADlB;AAAA,GAAP;AAcH,CAfM","sourceRoot":"","sourcesContent":["export const createVideoFrame = (emitNotSupportedError, wrapSubscribeFunction) => {\n    return (videoElement) => wrapSubscribeFunction((observer) => {\n        if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata) {\n            videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n            observer.next({ ...metadata, now });\n        });\n        return () => videoElement.cancelVideoFrameCallback(videoFrameHandle);\n    });\n};\n//# sourceMappingURL=video-frame.js.map"]},"metadata":{},"sourceType":"module"}