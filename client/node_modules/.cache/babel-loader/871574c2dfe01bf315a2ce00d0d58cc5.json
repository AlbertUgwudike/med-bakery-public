{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useContext}from\"react\";import{FaMicrophone}from\"react-icons/fa\";import styled from\"styled-components\";import MetaContext from\"../../../MetaContext\";import startToneUrl from\"../media/start.mp3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecordControl=function RecordControl(props){var _useContext=useContext(MetaContext),narrowWindow=_useContext.narrowWindow;var record=function record(){props.stopEverything();var startTone=new Audio(startToneUrl);startTone.onended=props.startRecording;startTone.play();};return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(Control,{onClick:props.recording?props.stopEverything:record,narrowWindow:narrowWindow,recording:props.recording,children:/*#__PURE__*/_jsx(\"div\",{style:{paddingBottom:\"10%\"},children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(FaMicrophone,{}),\" \\xA0\",props.recording&&\"Done\",!props.recording&&\"Tap to answer\"]})})})});};export default RecordControl;var Control=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\npadding: 10px 20px;\\nbackground-color: #fad000;\\nborder: none;\\nborder-radius: 5px;\\n    color: black;\\n    font-weight: bold;\\n\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 45%;\\n    border: 1px solid \",\";\\n    color: \",\";\\n    font-size: \",\";\\n\"])),function(props){return props.recording?\"red\":\"#414142\";},function(props){return props.recording?\"red\":\"black\";},function(props){return props.narrowWindow?\"12px\":\"15px\";});","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/RecordControl.tsx"],"names":["useContext","FaMicrophone","styled","MetaContext","startToneUrl","RecordControl","props","narrowWindow","record","stopEverything","startTone","Audio","onended","startRecording","play","display","justifyContent","recording","paddingBottom","Control","button"],"mappings":"qKAAA,OAASA,UAAT,KAAqC,OAArC,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,C,wFASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAA+B,CACjD,gBAAyBN,UAAU,CAACG,WAAD,CAAnC,CAAQI,YAAR,aAAQA,YAAR,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBF,KAAK,CAACG,cAAN,GACA,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,KAAJ,CAAUP,YAAV,CAAlB,CACAM,SAAS,CAACE,OAAV,CAAoBN,KAAK,CAACO,cAA1B,CACAH,SAAS,CAACI,IAAV,GACH,CALD,CAMA,mBACI,YAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAAZ,uBACI,KAAC,OAAD,EACI,OAAO,CAAEV,KAAK,CAACW,SAAN,CAAkBX,KAAK,CAACG,cAAxB,CAAyCD,MADtD,CAEI,YAAY,CAAED,YAFlB,CAGI,SAAS,CAAED,KAAK,CAACW,SAHrB,uBAKI,YAAK,KAAK,CAAE,CAACC,aAAa,CAAC,KAAf,CAAZ,uBACA,qCACA,KAAC,YAAD,IADA,SAECZ,KAAK,CAACW,SAAN,EAAmB,MAFpB,CAGC,CAACX,KAAK,CAACW,SAAP,EAAoB,eAHrB,GADA,EALJ,EADJ,EADJ,CAkBH,CA3BD,CA6BA,cAAeZ,CAAAA,aAAf,CAEA,GAAMc,CAAAA,OAAO,CAAGjB,MAAM,CAACkB,MAAV,0VAYW,SAAAd,KAAK,QAAKA,CAAAA,KAAK,CAACW,SAAN,CAAkB,KAAlB,CAA0B,SAA/B,EAZhB,CAaA,SAAAX,KAAK,QAAKA,CAAAA,KAAK,CAACW,SAAN,CAAkB,KAAlB,CAA0B,OAA/B,EAbL,CAcI,SAAAX,KAAK,QAAKA,CAAAA,KAAK,CAACC,YAAN,CAAqB,MAArB,CAA8B,MAAnC,EAdT,CAAb","sourcesContent":["import { useContext, useState } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\n\ntype RecordControlProps = {\n    recording: boolean;\n    stopEverything: () => void;\n    startRecording: () => void;\n    questionIdx: number;\n};\n\nconst RecordControl = (props: RecordControlProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    const record = () => {\n        props.stopEverything();\n        const startTone = new Audio(startToneUrl);\n        startTone.onended = props.startRecording;\n        startTone.play();\n    };\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Control\n                onClick={props.recording ? props.stopEverything : record}\n                narrowWindow={narrowWindow}\n                recording={props.recording}\n            >\n                <div style={{paddingBottom:\"10%\"}}> \n                <span> \n                <FaMicrophone /> &nbsp;\n                {props.recording && \"Done\"}\n                {!props.recording && \"Tap to answer\"}\n                </span>\n                </div>\n\n            </Control>\n        </div>\n    );\n};\n\nexport default RecordControl;\n\nconst Control = styled.button<{ narrowWindow: boolean; recording: boolean }>`\npadding: 10px 20px;\nbackground-color: #fad000;\nborder: none;\nborder-radius: 5px;\n    color: black;\n    font-weight: bold;\n\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 45%;\n    border: 1px solid ${props => (props.recording ? \"red\" : \"#414142\")};\n    color: ${props => (props.recording ? \"red\" : \"black\")};\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n"]},"metadata":{},"sourceType":"module"}