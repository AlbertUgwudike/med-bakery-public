{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/TaskSection.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2,\n    _templateObject3;\n\nimport { useContext } from \"react\";\nimport { FaMicrophone, FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TaskSection = function TaskSection(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space between\"\n    },\n    children: [props.responseAvailable && /*#__PURE__*/_jsxDEV(PlaybackControl, {\n      onClick: props.playing ? props.stopEverything : props.playResponse,\n      narrowWindow: narrowWindow,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n          busy: props.playing,\n          children: props.playing ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 46\n          }, _this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 60\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, _this), !props.responseAvailable && /*#__PURE__*/_jsxDEV(MicControl, {\n      onClick: props.recording ? props.stopEverything : props.recordResponse,\n      narrowWindow: narrowWindow,\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        busy: props.recording,\n        children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, _this), props.loadingRecorder && \"Please Wait....\", props.recording && \"Answer now!\", !(props.loadingRecorder || props.recording) && \"Click to answer!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskSection, \"veOw0VdmvVP6A+6/HalGX29hfpk=\");\n\n_c = TaskSection;\nexport default TaskSection;\nvar MicControl = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 100%;\\n    border: 1px solid #414142;\\n    color: #fad000;\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c2 = MicControl;\nvar PlaybackControl = styled.button(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 100%;\\n    border: 1px solid #414142;\\n    color: #fad000;\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c3 = PlaybackControl;\nvar ToggleButton = styled.button(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    height: 35px;\\n    width: 35px;\\n    border-radius: 50%;\\n    border: 1px solid \", \";\\n    color: \", \";\\n    margin: 10px;\\n    background-color: transparent;\\n\"])), function (props) {\n  return props.busy ? \"red\" : \"#FAD000\";\n}, function (props) {\n  return props.busy ? \"red\" : \"#FAD000\";\n});\n_c4 = ToggleButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TaskSection\");\n$RefreshReg$(_c2, \"MicControl\");\n$RefreshReg$(_c3, \"PlaybackControl\");\n$RefreshReg$(_c4, \"ToggleButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/TaskSection.tsx"],"names":["useContext","FaMicrophone","FaPause","FaPlay","styled","MetaContext","TaskSection","props","narrowWindow","display","justifyContent","responseAvailable","playing","stopEverything","playResponse","width","recording","recordResponse","loadingRecorder","MicControl","button","PlaybackControl","ToggleButton","busy"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,MAAhC,QAA8C,gBAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAaA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAAA;;AAC7C,oBAAyBP,UAAU,CAACK,WAAD,CAAnC;AAAA,MAAQG,YAAR,eAAQA,YAAR;;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,eACKH,KAAK,CAACI,iBAAN,iBACG,QAAC,eAAD;AACI,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,GAAgBL,KAAK,CAACM,cAAtB,GAAuCN,KAAK,CAACO,YAD1D;AAEI,MAAA,YAAY,EAAEN,YAFlB;AAAA,6BAII;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAER,KAAK,CAACK,OAA1B;AAAA,oBACKL,KAAK,CAACK,OAAN,gBAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,mBAAhB,gBAA8B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,aAFR,EAcK,CAACL,KAAK,CAACI,iBAAP,iBACG,QAAC,UAAD;AACI,MAAA,OAAO,EAAEJ,KAAK,CAACS,SAAN,GAAkBT,KAAK,CAACM,cAAxB,GAAyCN,KAAK,CAACU,cAD5D;AAEI,MAAA,YAAY,EAAET,YAFlB;AAAA,8BAII,QAAC,YAAD;AAAc,QAAA,IAAI,EAAED,KAAK,CAACS,SAA1B;AAAA,+BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAJJ,EAOKT,KAAK,CAACW,eAAN,IAAyB,iBAP9B,EAQKX,KAAK,CAACS,SAAN,IAAmB,aARxB,EASK,EAAET,KAAK,CAACW,eAAN,IAAyBX,KAAK,CAACS,SAAjC,KAA+C,kBATpD;AAAA;AAAA;AAAA;AAAA;AAAA,aAfR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA8BH,CAhCD;;GAAMV,W;;KAAAA,W;AAkCN,eAAeA,WAAf;AAEA,IAAMa,UAAU,GAAGf,MAAM,CAACgB,MAAV,gSASC,UAAAb,KAAK;AAAA,SAAKA,KAAK,CAACC,YAAN,GAAqB,MAArB,GAA8B,MAAnC;AAAA,CATN,CAAhB;MAAMW,U;AAYN,IAAME,eAAe,GAAGjB,MAAM,CAACgB,MAAV,kSASJ,UAAAb,KAAK;AAAA,SAAKA,KAAK,CAACC,YAAN,GAAqB,MAArB,GAA8B,MAAnC;AAAA,CATD,CAArB;MAAMa,e;AAYN,IAAMC,YAAY,GAAGlB,MAAM,CAACgB,MAAV,8OAIM,UAAAb,KAAK;AAAA,SAAKA,KAAK,CAACgB,IAAN,GAAa,KAAb,GAAqB,SAA1B;AAAA,CAJX,EAKL,UAAAhB,KAAK;AAAA,SAAKA,KAAK,CAACgB,IAAN,GAAa,KAAb,GAAqB,SAA1B;AAAA,CALA,CAAlB;MAAMD,Y","sourcesContent":["import { useContext } from \"react\";\nimport { FaMicrophone, FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { responseId } from \"./types\";\n\ntype TaskSectionProps = {\n    recording: boolean;\n    recordResponse: () => void;\n    playing: boolean;\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAvailable: boolean;\n    loadingRecorder: boolean;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space between\" }}>\n            {props.responseAvailable && (\n                <PlaybackControl\n                    onClick={props.playing ? props.stopEverything : props.playResponse}\n                    narrowWindow={narrowWindow}\n                >\n                    <div style={{ width: \"20%\" }}>\n                        <ToggleButton busy={props.playing}>\n                            {props.playing ? <FaPause /> : <FaPlay />}\n                        </ToggleButton>\n                    </div>\n                </PlaybackControl>\n            )}\n\n            {!props.responseAvailable && (\n                <MicControl\n                    onClick={props.recording ? props.stopEverything : props.recordResponse}\n                    narrowWindow={narrowWindow}\n                >\n                    <ToggleButton busy={props.recording}>\n                        <FaMicrophone />\n                    </ToggleButton>\n                    {props.loadingRecorder && \"Please Wait....\"}\n                    {props.recording && \"Answer now!\"}\n                    {!(props.loadingRecorder || props.recording) && \"Click to answer!\"}\n                </MicControl>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst MicControl = styled.button<{ narrowWindow: boolean }>`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 100%;\n    border: 1px solid #414142;\n    color: #fad000;\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n\nconst PlaybackControl = styled.button<{ narrowWindow: boolean }>`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 100%;\n    border: 1px solid #414142;\n    color: #fad000;\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n\nconst ToggleButton = styled.button<{ busy: boolean }>`\n    height: 35px;\n    width: 35px;\n    border-radius: 50%;\n    border: 1px solid ${props => (props.busy ? \"red\" : \"#FAD000\")};\n    color: ${props => (props.busy ? \"red\" : \"#FAD000\")};\n    margin: 10px;\n    background-color: transparent;\n`;\n"]},"metadata":{},"sourceType":"module"}