{"ast":null,"code":"import _objectSpread from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect}from\"react\";import{Timer}from\"./Common\";import{useLoopTime,convertToString}from\"./hooks\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TimerApparatus=function TimerApparatus(props){var secondTicker=useLoopTime(props.startTime-1);// this here dohickey saves the current timer value when compnenets unmounts, we use\n// the brief prop boolean flag to indicate different timings for brief vs section\nuseEffect(function(){return function(){props.updateStation(function(station){return _objectSpread(_objectSpread({},station),{},{timePermitted:props.brief?station.timePermitted:secondTicker});});};},[]);if(secondTicker<=0)props.nextFunc();return/*#__PURE__*/_jsxs(Timer,{children:[\" \",convertToString(secondTicker)]});};export default TimerApparatus;","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/AlphaTimer.tsx"],"names":["useEffect","Timer","useLoopTime","convertToString","TimerApparatus","props","secondTicker","startTime","updateStation","station","timePermitted","brief","nextFunc"],"mappings":"gIAAA,OAAmCA,SAAnC,KAAoD,OAApD,CAEA,OAASC,KAAT,KAAsB,UAAtB,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,SAA7C,C,6CAUA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAgC,CACnD,GAAMC,CAAAA,YAAY,CAAGJ,WAAW,CAACG,KAAK,CAACE,SAAN,CAAkB,CAAnB,CAAhC,CAEA;AACA;AACAP,SAAS,CACL,iBAAM,WAAM,CACRK,KAAK,CAACG,aAAN,CAAoB,SAAAC,OAAO,wCACpBA,OADoB,MAEvBC,aAAa,CAAEL,KAAK,CAACM,KAAN,CAAcF,OAAO,CAACC,aAAtB,CAAsCJ,YAF9B,IAA3B,EAIH,CALD,EADK,CAOL,EAPK,CAAT,CAUA,GAAIA,YAAY,EAAI,CAApB,CAAuBD,KAAK,CAACO,QAAN,GAEvB,mBAAO,MAAC,KAAD,gBAAST,eAAe,CAACG,YAAD,CAAxB,GAAP,CACH,CAlBD,CAoBA,cAAeF,CAAAA,cAAf","sourcesContent":["import { Dispatch, SetStateAction, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Timer } from \"./Common\";\nimport { useLoopTime, convertToString } from \"./hooks\";\nimport { Station } from \"./types\";\n\ntype TimerApparatusProps = {\n    brief?: boolean;\n    startTime: number;\n    nextFunc: () => void;\n    updateStation: Dispatch<SetStateAction<Station>>;\n};\n\nconst TimerApparatus = (props: TimerApparatusProps) => {\n    const secondTicker = useLoopTime(props.startTime - 1);\n\n    // this here dohickey saves the current timer value when compnenets unmounts, we use\n    // the brief prop boolean flag to indicate different timings for brief vs section\n    useEffect(\n        () => () => {\n            props.updateStation(station => ({\n                ...station,\n                timePermitted: props.brief ? station.timePermitted : secondTicker,\n            }));\n        },\n        []\n    );\n\n    if (secondTicker <= 0) props.nextFunc();\n\n    return <Timer> {convertToString(secondTicker)}</Timer>;\n};\n\nexport default TimerApparatus;\n"]},"metadata":{},"sourceType":"module"}