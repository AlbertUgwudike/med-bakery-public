{"ast":null,"code":"import _regeneratorRuntime from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';\nexport var createMessageHandler = function createMessageHandler(receiver, workerImplementation) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var _ref$data, id, method, params, messageHandler, response, synchronousResponse, result, _synchronousResponse$, transferables, message, _err$status, status;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref$data = _ref.data, id = _ref$data.id, method = _ref$data.method, params = _ref$data.params;\n              messageHandler = workerImplementation[method];\n              _context.prev = 2;\n\n              if (!(messageHandler === undefined)) {\n                _context.next = 5;\n                break;\n              }\n\n              throw renderMethodNotFoundError({\n                method: method\n              });\n\n            case 5:\n              response = params === undefined ? messageHandler() : messageHandler(params);\n\n              if (!(response === undefined)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw renderMissingResponseError({\n                method: method\n              });\n\n            case 8:\n              if (!(response instanceof Promise)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 11;\n              return response;\n\n            case 11:\n              _context.t0 = _context.sent;\n              _context.next = 15;\n              break;\n\n            case 14:\n              _context.t0 = response;\n\n            case 15:\n              synchronousResponse = _context.t0;\n\n              if (!(id === null)) {\n                _context.next = 21;\n                break;\n              }\n\n              if (!(synchronousResponse.result !== undefined)) {\n                _context.next = 19;\n                break;\n              }\n\n              throw renderUnexpectedResultError({\n                method: method\n              });\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              if (!(synchronousResponse.result === undefined)) {\n                _context.next = 23;\n                break;\n              }\n\n              throw renderUnexpectedResultError({\n                method: method\n              });\n\n            case 23:\n              result = synchronousResponse.result, _synchronousResponse$ = synchronousResponse.transferables, transferables = _synchronousResponse$ === void 0 ? [] : _synchronousResponse$;\n              receiver.postMessage({\n                id: id,\n                result: result\n              }, transferables);\n\n            case 25:\n              _context.next = 31;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t1 = _context[\"catch\"](2);\n              message = _context.t1.message, _err$status = _context.t1.status, status = _err$status === void 0 ? -32603 : _err$status;\n              receiver.postMessage({\n                error: {\n                  code: status,\n                  message: message\n                },\n                id: id\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 27]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}