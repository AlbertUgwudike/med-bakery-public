{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGSummary.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ECGSummary = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n\n  const selectEcgOption = name => {\n    console.log(props.topics);\n    props.updateTopics(props.topics.map(topic => topic.name === name ? { ...topic,\n      selected: !topic.selected\n    } : topic));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: darkMode ? \"#FAD000\" : \"#7babff\"\n        },\n        children: \" ECG \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 44\n      }, this), \" Trainer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      darkMode: darkMode,\n      children: \" Select your sauce! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), props.topics.map(topic => {\n      const percentage = Math.round(100 * topic.correct / topic.attempts);\n      return /*#__PURE__*/_jsxDEV(OptionButton, {\n        selected: topic.selected,\n        onClick: () => selectEcgOption(topic.name),\n        darkMode: darkMode,\n        children: [/*#__PURE__*/_jsxDEV(CategoryTitle, {\n          children: topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            marginLeft: \"10px\",\n            width: \"max-content\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ScoreDiv, {\n            darkMode: darkMode,\n            children: [\"Attempted: \", topic.attempts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ScoreDiv, {\n            darkMode: darkMode,\n            children: [\"Correct: \", topic.correct]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(OuterPill, {\n          children: /*#__PURE__*/_jsxDEV(InnerPill, {\n            percentage: percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: props.topics.filter(topic => topic.selected).length > 0 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/User/ECG/Session\",\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          darkMode: darkMode,\n          active: true,\n          style: {\n            marginTop: \"50px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(StartButton, {\n        darkMode: darkMode,\n        active: false,\n        style: {\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ECGSummary, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = ECGSummary;\nexport default ECGSummary;\nconst OptionButton = styled.button`\n    background-color: ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    margin: 15px 10px 15px 10px;\n    border-style: none;\n    border-radius: 10px;\n    width: 100%;\n    padding:0.5%;\n    text-align: left;\n    &:hover {\n        background-color: ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#7735FD\" : \"#FBE9EE\"};\n    }\n`;\n_c2 = OptionButton;\nconst StartButton = styled.button`\n    background-color: ${props => props.active ? \"#FAD000\" : \"grey\"};\n    padding: 10px;\n    color: black;\n    font: 30px Proxima;\n    border-radius: 10px;\n    width: 200px;\n    border: none;\n`;\n_c3 = StartButton;\nconst CategoryTitle = styled.div`\n    margin: 1px 0px 2px 10px;\n    font-size: 22px;\n`;\n_c4 = CategoryTitle;\nconst ScoreDiv = styled.div`\n    font-size: 10px;\n    margin: 5px;\n`;\n_c5 = ScoreDiv;\nconst OuterPill = styled.div`\n    display: inline-block;\n    width: 75%;\n    height: 20px;\n    background-color: white;\n    border-radius: 5px;\n    margin: 0 0 5px 10px;\n`;\n_c6 = OuterPill;\nconst InnerPill = styled.div`\n    width: ${props => props.percentage}%;\n    height: 20px;\n    background-color: orange;\n    border-radius: 5px;\n`;\n_c7 = InnerPill;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ECGSummary\");\n$RefreshReg$(_c2, \"OptionButton\");\n$RefreshReg$(_c3, \"StartButton\");\n$RefreshReg$(_c4, \"CategoryTitle\");\n$RefreshReg$(_c5, \"ScoreDiv\");\n$RefreshReg$(_c6, \"OuterPill\");\n$RefreshReg$(_c7, \"InnerPill\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGSummary.tsx"],"names":["Link","styled","Title","Subtitle","useContext","MetaContext","ECGSummary","props","darkMode","selectEcgOption","name","console","log","topics","updateTopics","map","topic","selected","color","percentage","Math","round","correct","attempts","display","marginLeft","width","textAlign","filter","length","marginTop","OptionButton","button","StartButton","active","CategoryTitle","div","ScoreDiv","OuterPill","InnerPill"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { EcgTopic } from \"./Generator/ECGTypes\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\n\ntype ECGSummaryProps = {\n    topics: EcgTopic[];\n    updateTopics: React.Dispatch<React.SetStateAction<EcgTopic[]>>;\n}\n\nconst ECGSummary = (props: ECGSummaryProps) => {\n\n    const { darkMode } = useContext(MetaContext);\n\n    const selectEcgOption = (name: string) => {\n        console.log(props.topics);\n        props.updateTopics(props.topics.map(topic => topic.name === name ? { ...topic, selected: !topic.selected } : topic))\n    }\n\n    return (\n        <>\n            \n            <Title darkMode = { darkMode }><span style = {{ color: (darkMode ? \"#FAD000\" : \"#7babff\") }}> ECG </span> Trainer</Title>\n\n            <Subtitle darkMode = { darkMode }> Select your sauce! </Subtitle>\n\n            {\n                props.topics.map(topic => {\n\n                    const percentage = Math.round(100 * topic.correct / topic.attempts);\n\n                    return (\n                        <OptionButton \n                            selected = { topic.selected }\n                            onClick = { () => selectEcgOption(topic.name) }\n                            darkMode = { darkMode }\n                        > \n                            <CategoryTitle>{ topic.name }</CategoryTitle>\n\n                            <div style = {{ display: \"inline-block\", marginLeft: \"10px\", width: \"max-content\" }}>\n                                <ScoreDiv darkMode = { darkMode }>Attempted: { topic.attempts }</ScoreDiv>\n                                <ScoreDiv darkMode = { darkMode }>Correct: { topic.correct }</ScoreDiv>\n                            </div>\n\n                            <OuterPill>\n                                <InnerPill percentage = { percentage } />\n                            </OuterPill>\n\n                        </OptionButton>\n                    )\n                })\n            }\n\n            <div style = {{ textAlign: \"center\" }}>\n                {\n                    props.topics.filter(topic => topic.selected).length > 0 \n                        ?   <Link to = \"/User/ECG/Session\"> \n                                <StartButton darkMode = { darkMode } active = { true } style = {{ marginTop: \"50px\" }} >\n                                    <span>Start</span>\n                                </StartButton>\n                            </Link>\n                        :   <StartButton darkMode = { darkMode } active = { false } style = {{ marginTop: \"50px\" }} >\n                                <span>Start</span>\n                            </StartButton>\n                }\n            </div>\n\n        </>\n    );\n}\n\nexport default ECGSummary;\n\n\nconst OptionButton = styled.button<{ darkMode: boolean, selected: boolean }>`\n    background-color: ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : ( props.darkMode ? \"#9546f05e\" : \"#b1def599\" ) };\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    margin: 15px 10px 15px 10px;\n    border-style: none;\n    border-radius: 10px;\n    width: 100%;\n    padding:0.5%;\n    text-align: left;\n    &:hover {\n        background-color: ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : (props.darkMode ? \"#7735FD\" : \"#FBE9EE\") };\n    }\n`\n\nconst StartButton = styled.button<{ darkMode: boolean, active: boolean }>`\n    background-color: ${ props => props.active ? \"#FAD000\" : \"grey\" };\n    padding: 10px;\n    color: black;\n    font: 30px Proxima;\n    border-radius: 10px;\n    width: 200px;\n    border: none;\n`\n\nconst CategoryTitle = styled.div`\n    margin: 1px 0px 2px 10px;\n    font-size: 22px;\n`\n\nconst ScoreDiv = styled.div<{ darkMode: boolean }>`\n    font-size: 10px;\n    margin: 5px;\n` \n\nconst OuterPill = styled.div`\n    display: inline-block;\n    width: 75%;\n    height: 20px;\n    background-color: white;\n    border-radius: 5px;\n    margin: 0 0 5px 10px;\n`\n\nconst InnerPill = styled.div<{ percentage: number }>`\n    width: ${ props => props.percentage }%;\n    height: 20px;\n    background-color: orange;\n    border-radius: 5px;\n`"]},"metadata":{},"sourceType":"module"}