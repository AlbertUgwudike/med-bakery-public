{"ast":null,"code":"export var createWakeLock = function createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction) {\n  return function (type) {\n    return wrapSubscribeFunction(function (observer) {\n      if (window === null || window.navigator === undefined || window.navigator.wakeLock === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var releaseWakeLock = function releaseWakeLock(wakeLockSentinel) {\n        return wakeLockSentinel.release().catch(function () {// Ignore errors.\n        });\n      };\n\n      var removeReleaseEventListener = function removeReleaseEventListener(wakeLockSentinel) {\n        wakeLockSentinel.onrelease = null;\n      };\n\n      var isActive = true;\n\n      var unsubscribeWhileRequesting = function unsubscribeWhileRequesting() {\n        isActive = false;\n      };\n\n      var unsubscribe = unsubscribeWhileRequesting;\n\n      var requestWakeLock = function requestWakeLock() {\n        return window.navigator.wakeLock.request(type).then(function (wakeLockSentinel) {\n          if (isActive) {\n            observer.next(true);\n          }\n\n          if (isActive) {\n            wakeLockSentinel.onrelease = function () {\n              observer.next(false);\n              unsubscribe = unsubscribeWhileRequesting;\n              removeReleaseEventListener(wakeLockSentinel);\n              requestWakeLock();\n            };\n\n            unsubscribe = function unsubscribe() {\n              removeReleaseEventListener(wakeLockSentinel);\n              releaseWakeLock(wakeLockSentinel);\n            };\n          } else {\n            releaseWakeLock(wakeLockSentinel);\n          }\n        }, function (err) {\n          if (isActive) {\n            observer.error(err);\n          }\n        });\n      };\n\n      requestWakeLock();\n      return function () {\n        return unsubscribe();\n      };\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}