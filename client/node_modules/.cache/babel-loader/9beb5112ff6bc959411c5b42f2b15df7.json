{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import axios from\"../../myaxios\";import{useContext,useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import styled from\"styled-components\";import MetaContext from\"../../MetaContext\";import{NullQuestion}from\"./exampleQuestions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuestionSelector=function QuestionSelector(props){// these will be null in the actual implementatiuon\n// initalised once questions are retrieved\nvar _useState=useState([NullQuestion]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],updateQuestions=_useState2[1];var _useState3=useState(NullQuestion),_useState4=_slicedToArray(_useState3,2),selectedQuestion=_useState4[0],updateSelectedQuestion=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),selectedFinding=_useState6[0],updateSelectedFinding=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedCategory=_useState8[0],updateSelectedCategory=_useState8[1];var _useContext=useContext(MetaContext),SERVER_URL=_useContext.SERVER_URL,token=_useContext.token;var loadQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(SERVER_URL+\"/interp/get_questions\",{token:token});case 2:res=_context.sent;updateQuestions(res.data.questions);updateSelectedQuestion(res.data.questions[0]);updateSelectedFinding(res.data.questions[0].finding);updateSelectedCategory(res.data.questions[0].category);case 7:case\"end\":return _context.stop();}}},_callee);}));return function loadQuestions(){return _ref.apply(this,arguments);};}();useEffect(function(){loadQuestions();},[]);var categories=Array.apply(void 0,_toConsumableArray(new Set(questions.map(function(q){return q.category;}))));var changeSelection=function changeSelection(category,finding,idx){updateSelectedCategory(category);var filteredForCategory=questions.filter(function(q){return q.category===category;});// no finding selected, set question to first in category\nif(finding===\"\"){updateSelectedFinding(filteredForCategory[0].finding);updateSelectedQuestion(filteredForCategory[0]);return;}// finding has been provided\nupdateSelectedFinding(finding);var filteredForfinding=filteredForCategory.filter(function(q){return q.finding===finding;});// no specific index selected\nif(idx===-1){updateSelectedQuestion(filteredForfinding[0]);return;}// valid idx has been selected\nupdateSelectedQuestion(filteredForfinding[idx]);};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"15%\"},children:categories.map(function(c){var findings=Array.apply(void 0,_toConsumableArray(new Set(questions.filter(function(q){return q.category===c;}).map(function(q){return q.finding;}))));return/*#__PURE__*/_jsxs(CategoryPanel,{selected:c===selectedCategory,children:[/*#__PURE__*/_jsx(CategoryTitle,{children:c}),findings.map(function(f){return/*#__PURE__*/_jsx(FindingOption,{selected:f===selectedFinding&&c===selectedCategory,onClick:function onClick(){return changeSelection(c,f,-1);},children:f});})]});})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",backgroundColor:\"#040C18\",width:\"80%\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:\"25%\"},children:[questions.filter(function(q){return q.category===selectedCategory&&q.finding===selectedFinding;}).map(function(q,i){return/*#__PURE__*/_jsx(FindingOption,{onClick:function onClick(){return changeSelection(q.category,q.finding,i);},selected:q.title===selectedQuestion.title,children:q.title});}),/*#__PURE__*/_jsx(Link,{to:\"/DataInterpretation/Question\",children:/*#__PURE__*/_jsx(Title,{onClick:function onClick(){return props.updateCurrentQuestion(selectedQuestion);},children:/*#__PURE__*/_jsx(\"span\",{children:\"Free practice questions\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"60%\"},children:[/*#__PURE__*/_jsxs(QuestionSummary,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"30px\"},children:selectedQuestion.title}),/*#__PURE__*/_jsx(Img,{src:SERVER_URL+\"/media/interp/\"+selectedQuestion.image}),/*#__PURE__*/_jsx(Features,{children:selectedQuestion.description})]}),/*#__PURE__*/_jsx(Link,{to:\"/DataInterpretation/Question\",children:/*#__PURE__*/_jsx(StartButton,{onClick:function onClick(){return props.updateCurrentQuestion(selectedQuestion);}})})]})]})]});};export default QuestionSelector;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    background-color: #031B34;\\n    margin: 5%;\\n    padding: 20px 10px;\\n    display: flex;\\n    justify-content: space-around;\\n    height: 1000px;\\n\"])));var FindingOption=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\nbackground-color: \",\";\\ncolor: \",\";\\n    margin: 5%;\\n    padding: 5%;\\n    display: flex;\\n    cursor: pointer;\\n\"])),function(props){return props.selected?\"#042c54\":\"transparent\";},function(props){return props.selected?\"white\":\"#81AFDD\";});var CategoryTitle=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    font-size: 20px;\\n    margin: 5px;\\n\"])));var CategoryPanel=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin-bottom: 10px;\\n    padding: 10px 5px;\\n    border: 0.25px solid grey;\\n    margin: 10px;\\n    background-color: #040C18;\\n\"])));var QuestionSummary=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    border: 5px solid #031B34;\\n    margin: 10px;\\n    font-size: 20px;\\n    padding: 2%;\\n\"])));var Img=styled.img(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    height: 300px;\\n\"])));var Features=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    text-align: left;\\n    border: 0.25px solid grey;\\n    margin: 10px;\\n    padding: 20px;\\n\"])));var Title=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\ntext-align: center;\\nmargin-bottom: 10px;\\npadding: 10px 5px;\\nborder: 0.25px solid grey;\\nmargin: 10px;\\nbackground-color: #fad000;\\ncolor: black;\\nmargin: 5%;\\nborder-radius: 5px;\\nspan {\\n    color: black;\\n    font-weight: bold;\\n  }\\n\"])));var StartButton=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n    cursor: pointer;\\n    width: 80%;\\n    background-color: #fad000;\\n    color: black;\\n    text-align: center;\\n    margin: auto;\\n\"])));","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/QuestionSelector.tsx"],"names":["axios","useContext","useEffect","useState","Link","styled","MetaContext","NullQuestion","QuestionSelector","props","questions","updateQuestions","selectedQuestion","updateSelectedQuestion","selectedFinding","updateSelectedFinding","selectedCategory","updateSelectedCategory","SERVER_URL","token","loadQuestions","post","res","data","finding","category","categories","Array","Set","map","q","changeSelection","idx","filteredForCategory","filter","filteredForfinding","width","c","findings","f","display","backgroundColor","i","title","updateCurrentQuestion","fontSize","image","description","Container","div","FindingOption","selected","CategoryTitle","CategoryPanel","QuestionSummary","Img","img","Features","Title","StartButton"],"mappings":"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","sourcesContent":["import axios from \"../../myaxios\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { DataInterpQuestion } from \"./types\";\nimport MetaContext from \"../../MetaContext\";\nimport { NullQuestion } from \"./exampleQuestions\";\n\ntype QuestionSelectorProps = {\n    updateCurrentQuestion: Dispatch<SetStateAction<DataInterpQuestion>>;\n};\n\nconst QuestionSelector = (props: QuestionSelectorProps) => {\n    // these will be null in the actual implementatiuon\n    // initalised once questions are retrieved\n    const [questions, updateQuestions] = useState([ NullQuestion ]);\n    const [selectedQuestion, updateSelectedQuestion] = useState(NullQuestion);\n    const [selectedFinding, updateSelectedFinding] = useState(\"\");\n    const [selectedCategory, updateSelectedCategory] = useState(\"\");\n\n    const { SERVER_URL, token } = useContext(MetaContext);\n\n    const loadQuestions = async () => {\n        const res = await axios.post(SERVER_URL + \"/interp/get_questions\", { token });\n        updateQuestions(res.data.questions);\n        updateSelectedQuestion(res.data.questions[0]);\n        updateSelectedFinding(res.data.questions[0].finding);\n        updateSelectedCategory(res.data.questions[0].category);\n    }\n\n    \n    useEffect( () => { loadQuestions(); }, [])\n\n    const categories = Array(...new Set(questions.map(q => q.category)));\n\n    const changeSelection = (category: string, finding: string, idx: number) => {\n        updateSelectedCategory(category);\n        const filteredForCategory = questions.filter(q => q.category === category);\n\n        // no finding selected, set question to first in category\n        if (finding === \"\") {\n            updateSelectedFinding(filteredForCategory[0].finding);\n            updateSelectedQuestion(filteredForCategory[0]);\n            return;\n        }\n\n        // finding has been provided\n        updateSelectedFinding(finding);\n        const filteredForfinding = filteredForCategory.filter(q => q.finding === finding);\n\n        // no specific index selected\n        if (idx === -1) {\n            updateSelectedQuestion(filteredForfinding[0]);\n            return;\n        }\n\n        // valid idx has been selected\n        updateSelectedQuestion(filteredForfinding[idx]);\n    };\n\n    return (\n        <Container>\n            <div style={{ width: \"15%\" }}>\n                {categories.map(c => {\n                    const findings = Array(\n                        ...new Set(questions.filter(q => q.category === c).map(q => q.finding))\n                    );\n\n                    return (\n                        <CategoryPanel selected={c === selectedCategory}>\n                            <CategoryTitle>{c}</CategoryTitle>\n                            {findings.map(f => (\n                                <FindingOption\n                                    selected={f === selectedFinding && c === selectedCategory}\n                                    onClick={() => changeSelection(c, f, -1)}\n                                >\n                                    {f}\n                                </FindingOption>\n                            ))}\n                        </CategoryPanel>\n\n                        \n                    );\n                })}\n\n\n            </div>\n            <div style={{ display: \"flex\", backgroundColor: \"#040C18\", width: \"80%\" }}>\n                <div style={{ width: \"25%\" }}>\n                    {questions\n                        .filter(\n                            q => q.category === selectedCategory && q.finding === selectedFinding\n                        )\n                        .map((q, i) => (\n                            <FindingOption\n                                onClick={() => changeSelection(q.category, q.finding, i)}\n                                selected={q.title === selectedQuestion.title}\n                            >\n                                {q.title}\n                            </FindingOption>\n                            \n                        ))}\n                <Link to=\"/DataInterpretation/Question\">\n                <Title onClick = {() => props.updateCurrentQuestion(selectedQuestion)}> \n                            \n                <span>Free practice questions</span>\n                \n                        {/* <StartButton onClick = {() => props.updateCurrentQuestion(selectedQuestion)} >Spot Diagnosis Questions</StartButton> */}\n                    \n\n                </Title>\n                </Link>\n\n                </div>\n                <div style={{ width: \"60%\" }}>\n                    <QuestionSummary>\n                        <div style={{ fontSize: \"30px\" }}>{selectedQuestion.title}</div>\n                        {/* image would be fetched from source in actual implementation */}\n                        <Img src={SERVER_URL + \"/media/interp/\" + selectedQuestion.image} />\n                        <Features>\n                            \n                            {selectedQuestion.description}\n                        </Features>\n                    </QuestionSummary>\n                    <Link to=\"/DataInterpretation/Question\">\n                        <StartButton onClick = {() => props.updateCurrentQuestion(selectedQuestion)} >\n\n                   \n\n                        </StartButton>\n                    </Link>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionSelector;\n\nconst Container = styled.div`\n    background-color: #031B34;\n    margin: 5%;\n    padding: 20px 10px;\n    display: flex;\n    justify-content: space-around;\n    height: 1000px;\n`;\n\nconst FindingOption = styled.div<{ selected: boolean }>`\nbackground-color: ${props => (props.selected ? \"#042c54\" : \"transparent\")};\ncolor: ${props => (props.selected ? \"white\" : \"#81AFDD\")};\n    margin: 5%;\n    padding: 5%;\n    display: flex;\n    cursor: pointer;\n`;\n\nconst CategoryTitle = styled.div`\n    font-size: 20px;\n    margin: 5px;\n`;\n\nconst CategoryPanel = styled.div<{ selected: boolean }>`\n    text-align: center;\n    margin-bottom: 10px;\n    padding: 10px 5px;\n    border: 0.25px solid grey;\n    margin: 10px;\n    background-color: #040C18;\n`;\n\nconst QuestionSummary = styled.div`\n    text-align: center;\n    border: 5px solid #031B34;\n    margin: 10px;\n    font-size: 20px;\n    padding: 2%;\n`;\n\nconst Img = styled.img`\n    height: 300px;\n`;\n\nconst Features = styled.div`\n    text-align: left;\n    border: 0.25px solid grey;\n    margin: 10px;\n    padding: 20px;\n`;\n\nconst Title = styled.div`\ntext-align: center;\nmargin-bottom: 10px;\npadding: 10px 5px;\nborder: 0.25px solid grey;\nmargin: 10px;\nbackground-color: #fad000;\ncolor: black;\nmargin: 5%;\nborder-radius: 5px;\nspan {\n    color: black;\n    font-weight: bold;\n  }\n`;\n\n\n\nconst StartButton = styled.div`\n    cursor: pointer;\n    width: 80%;\n    background-color: #fad000;\n    color: black;\n    text-align: center;\n    margin: auto;\n`;\n"]},"metadata":{},"sourceType":"module"}