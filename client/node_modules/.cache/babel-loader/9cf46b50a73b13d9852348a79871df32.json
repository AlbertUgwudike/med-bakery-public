{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/RecordControl.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RecordControl = function RecordControl(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  var record = function record() {\n    props.stopEverything();\n    var startTone = new Audio(startToneUrl);\n\n    startTone.onended = function (_) {\n      props.startRecording();\n    };\n\n    startTone.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Control, {\n      onClick: props.recording ? props.stopEverything : record,\n      narrowWindow: narrowWindow,\n      recording: props.recording,\n      children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), \" \\xA0\", props.recording && \"Tap me when you've answered\", !props.recording && \"Tap to answer!!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RecordControl, \"veOw0VdmvVP6A+6/HalGX29hfpk=\");\n\n_c = RecordControl;\nexport default RecordControl;\nvar Control = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 45%;\\n    border: 1px solid \", \";\\n    color: \", \";\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.recording ? \"red\" : \"#414142\";\n}, function (props) {\n  return props.recording ? \"red\" : \"#FAD000\";\n}, function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c2 = Control;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecordControl\");\n$RefreshReg$(_c2, \"Control\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/RecordControl.tsx"],"names":["useContext","FaMicrophone","styled","MetaContext","startToneUrl","RecordControl","props","narrowWindow","record","stopEverything","startTone","Audio","onended","_","startRecording","play","display","justifyContent","recording","Control","button"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA+B;AAAA;;AACjD,oBAAyBN,UAAU,CAACG,WAAD,CAAnC;AAAA,MAAQI,YAAR,eAAQA,YAAR;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBF,IAAAA,KAAK,CAACG,cAAN;AACA,QAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAUP,YAAV,CAAlB;;AACAM,IAAAA,SAAS,CAACE,OAAV,GAAoB,UAAAC,CAAC,EAAI;AACrBP,MAAAA,KAAK,CAACQ,cAAN;AACH,KAFD;;AAGAJ,IAAAA,SAAS,CAACK,IAAV;AACH,GAPD;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,2BACI,QAAC,OAAD;AACI,MAAA,OAAO,EAAEX,KAAK,CAACY,SAAN,GAAkBZ,KAAK,CAACG,cAAxB,GAAyCD,MADtD;AAEI,MAAA,YAAY,EAAED,YAFlB;AAGI,MAAA,SAAS,EAAED,KAAK,CAACY,SAHrB;AAAA,8BAKI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eALJ,WAMKZ,KAAK,CAACY,SAAN,IAAmB,6BANxB,EAOK,CAACZ,KAAK,CAACY,SAAP,IAAoB,iBAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CAxBD;;GAAMb,a;;KAAAA,a;AA0BN,eAAeA,aAAf;AAEA,IAAMc,OAAO,GAAGjB,MAAM,CAACkB,MAAV,yRAOW,UAAAd,KAAK;AAAA,SAAKA,KAAK,CAACY,SAAN,GAAkB,KAAlB,GAA0B,SAA/B;AAAA,CAPhB,EAQA,UAAAZ,KAAK;AAAA,SAAKA,KAAK,CAACY,SAAN,GAAkB,KAAlB,GAA0B,SAA/B;AAAA,CARL,EASI,UAAAZ,KAAK;AAAA,SAAKA,KAAK,CAACC,YAAN,GAAqB,MAArB,GAA8B,MAAnC;AAAA,CATT,CAAb;MAAMY,O","sourcesContent":["import { useContext, useState } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport startToneUrl from \"../media/start.mp3\";\n\ntype RecordControlProps = {\n    recording: boolean;\n    stopEverything: () => void;\n    startRecording: () => void;\n};\n\nconst RecordControl = (props: RecordControlProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    const record = () => {\n        props.stopEverything();\n        const startTone = new Audio(startToneUrl);\n        startTone.onended = _ => {\n            props.startRecording();\n        };\n        startTone.play();\n    };\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Control\n                onClick={props.recording ? props.stopEverything : record}\n                narrowWindow={narrowWindow}\n                recording={props.recording}\n            >\n                <FaMicrophone /> &nbsp;\n                {props.recording && \"Tap me when you've answered\"}\n                {!props.recording && \"Tap to answer!!\"}\n            </Control>\n        </div>\n    );\n};\n\nexport default RecordControl;\n\nconst Control = styled.button<{ narrowWindow: boolean; recording: boolean }>`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 45%;\n    border: 1px solid ${props => (props.recording ? \"red\" : \"#414142\")};\n    color: ${props => (props.recording ? \"red\" : \"#FAD000\")};\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n"]},"metadata":{},"sourceType":"module"}