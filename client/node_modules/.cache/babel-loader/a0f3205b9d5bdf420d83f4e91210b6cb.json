{"ast":null,"code":"// the null answered question as a signal to the server\nexport const NOMORE = {\n  sections: [{\n    stem: \"No More Questions\",\n    question: \"\",\n    explanations: [],\n    options: [],\n    correctOption: 1,\n    selectedOption: -1,\n    percentages: [0, 0, 0, 0, 0],\n    learningPointIdxs: [0]\n  }],\n  categoryPath: [],\n  _id: \"\",\n  answered: false,\n  questionIdx: -1,\n  chat: [],\n  notes: \"\",\n  timeLastAttempted: 0,\n  timeLastUpdated: 0,\n  type: \"active\"\n};","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/types.tsx"],"names":["NOMORE","sections","stem","question","explanations","options","correctOption","selectedOption","percentages","learningPointIdxs","categoryPath","_id","answered","questionIdx","chat","notes","timeLastAttempted","timeLastUpdated","type"],"mappings":"AAsDA;AACA,OAAO,MAAMA,MAAsB,GAAG;AAClCC,EAAAA,QAAQ,EAAE,CAAC;AACPC,IAAAA,IAAI,EAAE,mBADC;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,YAAY,EAAE,EAHP;AAIPC,IAAAA,OAAO,EAAE,EAJF;AAKPC,IAAAA,aAAa,EAAE,CALR;AAMPC,IAAAA,cAAc,EAAE,CAAC,CANV;AAOPC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAPN;AAQPC,IAAAA,iBAAiB,EAAE,CAAC,CAAD;AARZ,GAAD,CADwB;AAWlCC,EAAAA,YAAY,EAAE,EAXoB;AAYlCC,EAAAA,GAAG,EAAE,EAZ6B;AAalCC,EAAAA,QAAQ,EAAE,KAbwB;AAclCC,EAAAA,WAAW,EAAE,CAAC,CAdoB;AAelCC,EAAAA,IAAI,EAAE,EAf4B;AAgBlCC,EAAAA,KAAK,EAAE,EAhB2B;AAiBlCC,EAAAA,iBAAiB,EAAE,CAjBe;AAkBlCC,EAAAA,eAAe,EAAE,CAlBiB;AAmBlCC,EAAAA,IAAI,EAAE;AAnB4B,CAA/B","sourcesContent":["export type MasterCategory = {\n    categoryTitle: string,\n    totalQuestionCount: number,\n    answeredQuestionsCount: number,\n    correctlyAnsweredCount: number,\n    subcategories: MasterCategory[],\n    selected: boolean\n}\n\nexport type Section = {\n    correctOption: number;\n    explanations: string[];\n    learningPointIdxs: number[];\n    options: string[];\n    percentages: number[];\n    question: string;\n    selectedOption: number;\n    stem: string;\n}\n\nexport type FinalsQuestion = {\n    _id: string;\n    answered: boolean;\n    categoryPath: string[];\n    chat: { email: string, message: string }[];\n    notes: string;\n    questionIdx: number;\n    sections: Section[];\n    timeLastAttempted: number;\n    timeLastUpdated: number;\n    type: \"demo\" | \"active\" | \"hidden\";\n}\n\nexport type Product = {\n    name: string;\n    description: string;\n    path: string;\n    imgsrc: string;\n}\n\nexport type TextBookTopicSection = {\n    sectionTitle: string;\n    content: string;\n}\n\nexport type TextBookTopic = {\n    _id: any;\n    topicTitle: string;\n    learningPointIdx: number[];\n    topicIdx: number;\n    categoryPath: string[];\n    sections: TextBookTopicSection[]\n}\n\n// the null answered question as a signal to the server\nexport const NOMORE: FinalsQuestion = {\n    sections: [{\n        stem: \"No More Questions\",\n        question: \"\",\n        explanations: [],\n        options: [],\n        correctOption: 1,\n        selectedOption: -1,\n        percentages: [0, 0, 0, 0, 0],\n        learningPointIdxs: [0]\n    }],\n    categoryPath: [],\n    _id: \"\",\n    answered: false,\n    questionIdx: -1,\n    chat: [],\n    notes: \"\",\n    timeLastAttempted: 0,\n    timeLastUpdated: 0,\n    type: \"active\"\n}"]},"metadata":{},"sourceType":"module"}