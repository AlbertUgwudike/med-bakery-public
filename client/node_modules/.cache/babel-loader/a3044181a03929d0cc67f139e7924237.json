{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/CategorySelector.tsx\",\n    _this = this,\n    _templateObject,\n    _templateObject2;\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CategorySelector = function CategorySelector(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"All\"].concat(_toConsumableArray(new Set(props.stationSummaries.map(function (ss) {\n      return ss.category;\n    })))).map(function (c) {\n      return /*#__PURE__*/_jsxDEV(CategoryButton, {\n        selected: props.category === c,\n        onClick: function onClick() {\n          return props.updateCategory(c);\n        },\n        children: c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = CategorySelector;\nexport default CategorySelector;\nvar Container = styled.select(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: flex;\\n    margin-bottom: 20px;\\n    overflow: scroll;\\n    -ms-overflow-style: none; /* for Internet Explorer, Edge */\\n    scrollbar-width: none; /* for Firefox */\\n    overflow-y: scroll;\\n    &::-webkit-scrollbar {\\n        display: none; /* for Chrome, Safari, and Opera */\\n    }\\n\"])));\n_c2 = Container;\nvar CategoryButton = styled.option(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    margin-left: 5px;\\n    padding: 5px;\\n    border: 1px solid \", \";\\n    background-color: \", \";\\n    color: \", \";\\n    &:hover {\\n        border: 1px solid #fad000;\\n        cursor: pointer;\\n    }\\n\"])), function (props) {\n  return props.selected ? \"#fad000\" : \"grey\";\n}, function (props) {\n  return props.selected ? \"#fad000\" : \"grey\";\n}, function (props) {\n  return props.selected ? \"black\" : \"white\";\n});\n_c3 = CategoryButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CategorySelector\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"CategoryButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/CategorySelector.tsx"],"names":["React","styled","CategorySelector","props","concat","Set","stationSummaries","map","ss","category","c","updateCategory","Container","select","CategoryButton","option","selected"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAkC;AACvD,sBACI,QAAC,SAAD;AAAA,cACK,CAAC,KAAD,EAAQC,MAAR,oBAAmB,IAAIC,GAAJ,CAAQF,KAAK,CAACG,gBAAN,CAAuBC,GAAvB,CAA2B,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,QAAP;AAAA,KAA7B,CAAR,CAAnB,GAA4EF,GAA5E,CAAgF,UAAAG,CAAC;AAAA,0BAC9E,QAAC,cAAD;AACI,QAAA,QAAQ,EAAEP,KAAK,CAACM,QAAN,KAAmBC,CADjC;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMP,KAAK,CAACQ,cAAN,CAAqBD,CAArB,CAAN;AAAA,SAFb;AAAA,kBAIKA;AAJL;AAAA;AAAA;AAAA;AAAA,eAD8E;AAAA,KAAjF;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CAbD;;KAAMR,gB;AAeN,eAAeA,gBAAf;AAEA,IAAMU,SAAS,GAAGX,MAAM,CAACY,MAAV,mXAAf;MAAMD,S;AAYN,IAAME,cAAc,GAAGb,MAAM,CAACc,MAAV,oRAGI,UAAAZ,KAAK;AAAA,SAAKA,KAAK,CAACa,QAAN,GAAiB,SAAjB,GAA6B,MAAlC;AAAA,CAHT,EAII,UAAAb,KAAK;AAAA,SAAKA,KAAK,CAACa,QAAN,GAAiB,SAAjB,GAA6B,MAAlC;AAAA,CAJT,EAKP,UAAAb,KAAK;AAAA,SAAKA,KAAK,CAACa,QAAN,GAAiB,OAAjB,GAA2B,OAAhC;AAAA,CALE,CAApB;MAAMF,c","sourcesContent":["import React, { Dispatch, SetStateAction } from \"react\";\nimport styled from \"styled-components\";\nimport { StationSummary } from \"./types\";\n\ntype CategorySelectorProps = {\n    updateCategory: Dispatch<SetStateAction<string>>;\n    stationSummaries: StationSummary[];\n    category: string;\n};\n\nconst CategorySelector = (props: CategorySelectorProps) => {\n    return (\n        <Container>\n            {[\"All\"].concat([...new Set(props.stationSummaries.map(ss => ss.category))]).map(c => (\n                <CategoryButton\n                    selected={props.category === c}\n                    onClick={() => props.updateCategory(c)}\n                >\n                    {c}\n                </CategoryButton>\n            ))}\n        </Container>\n    );\n};\n\nexport default CategorySelector;\n\nconst Container = styled.select`\n    display: flex;\n    margin-bottom: 20px;\n    overflow: scroll;\n    -ms-overflow-style: none; /* for Internet Explorer, Edge */\n    scrollbar-width: none; /* for Firefox */\n    overflow-y: scroll;\n    &::-webkit-scrollbar {\n        display: none; /* for Chrome, Safari, and Opera */\n    }\n`;\n\nconst CategoryButton = styled.option<{ selected: boolean }>`\n    margin-left: 5px;\n    padding: 5px;\n    border: 1px solid ${props => (props.selected ? \"#fad000\" : \"grey\")};\n    background-color: ${props => (props.selected ? \"#fad000\" : \"grey\")};\n    color: ${props => (props.selected ? \"black\" : \"white\")};\n    &:hover {\n        border: 1px solid #fad000;\n        cursor: pointer;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}