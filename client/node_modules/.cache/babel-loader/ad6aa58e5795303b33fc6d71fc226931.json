{"ast":null,"code":"import _regeneratorRuntime from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var createAddRecorderAudioWorkletModule = function createAddRecorderAudioWorkletModule(blobConstructor, urlConstructor, worklet) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(addAudioWorkletModule) {\n      var blob, url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              blob = new blobConstructor([worklet], {\n                type: 'application/javascript; charset=utf-8'\n              });\n              url = urlConstructor.createObjectURL(blob);\n              _context.prev = 2;\n              _context.next = 5;\n              return addAudioWorkletModule(url);\n\n            case 5:\n              _context.prev = 5;\n              urlConstructor.revokeObjectURL(url);\n              return _context.finish(5);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2,, 5, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["../../../src/factories/add-recorder-audio-worklet-module.ts"],"names":[],"mappings":";;AAAA,OAAO,IAAM,mCAAmC,GAAG,SAAtC,mCAAsC,CAAC,eAAD,EAA+B,cAA/B,EAA2D,OAA3D,EAA8E;AAC7H;AAAA,wEAAO,iBAAO,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACG,cAAA,IADH,GACU,IAAI,eAAJ,CAAoB,CAAC,OAAD,CAApB,EAA+B;AAAE,gBAAA,IAAI,EAAE;AAAR,eAA/B,CADV;AAEG,cAAA,GAFH,GAES,cAAc,CAAC,eAAf,CAA+B,IAA/B,CAFT;AAAA;AAAA;AAAA,qBAKO,qBAAqB,CAAC,GAAD,CAL5B;;AAAA;AAAA;AAOC,cAAA,cAAc,CAAC,eAAf,CAA+B,GAA/B;AAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAUH,CAXM","sourceRoot":"","sourcesContent":["export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map"]},"metadata":{},"sourceType":"module"}