{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/PreviousSessionsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport { Title } from '../General/Title';\nimport { Subtitle } from '../General/Subtitle';\nimport MetaContext from '../../MetaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PreviousSessionsPage = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n\n  const createSessionArray = (q, idx) => {\n    const correctlyAnsweredSectionCount = q.sections.reduce((acc, s) => acc + (s.correctOption === s.selectedOption ? 1 : 0), 0);\n    const percentageCorrect = Math.round(100 * correctlyAnsweredSectionCount / q.sections.length);\n    return /*#__PURE__*/_jsxDEV(QuestionListItem, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(Percentage, {\n        darkMode: darkMode,\n        children: [percentageCorrect, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuestionTitle, {\n        darkMode: darkMode,\n        children: [\" \", idx + 1, \". \", q.categoryPath[q.categoryPath.length - 1], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dosset, {\n        children: q.sections.map((s, i) => /*#__PURE__*/_jsxDEV(Pill, {\n          darkMode: darkMode,\n          correct: s.correctOption === s.selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: darkMode ? \"#FAD000\" : \"#7babff\"\n        },\n        children: \" Finals \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), \" Questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      darkMode: darkMode,\n      children: \"Previous Sessions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), props.previousSessions.length > 0 ? props.previousSessions.map(previousSession => /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/User/Finals/LastSession/Session\",\n      children: /*#__PURE__*/_jsxDEV(QuestionList, {\n        darkMode: darkMode,\n        onClick: () => props.updateSelectedSession(previousSession),\n        children: previousSession.map(createSessionArray)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      style: {\n        color: 'grey'\n      },\n      children: \"Do Some Questions!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PreviousSessionsPage, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = PreviousSessionsPage;\nexport default PreviousSessionsPage;\nconst QuestionList = styled.ul`\n    display: flex;\n    align-items: center;\n    overflow: scroll;\n    background-color: ${props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    border-radius: 20px;\n    margin: 20px 0;\n    padding: 10px;\n`;\n_c2 = QuestionList;\nconst QuestionListItem = styled.div`\n    display: inline-block;\n    width: 175px;\n    min-width: 175px;\n    background-color: ${props => props.darkMode ? \"#10132C\" : \"#F6F0F0\"};\n    box-shadow: ${props => props.darkMode ? \"2px 2px 2px #100A28\" : \"2px 2px 2px rgba(0, 0, 0, 0.25)\"}; \n    text-align: center;\n    border-radius: 20px;\n    margin: 10px;\n    padding: 10px 30px;\n    &:hover {\n        transform: scale(1.05);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    }\n`;\n_c3 = QuestionListItem;\nconst QuestionTitle = styled.div`\n    text-align: center;\n    margin-top: 10px;\n    color: ${props => props.darkMode ? \"#ffffff\" : \"#100A28\"};\n    font: 15px Proxima;\n`;\n_c4 = QuestionTitle;\nconst Percentage = styled.div`\n    text-align: center;\n    margin-top: 20px;\n    color: ${props => props.darkMode ? \"#ffffff\" : \"#100A28\"};\n    font: 35px Champion;\n`;\n_c5 = Percentage;\nconst Dosset = styled.div`\n    white-space: wrap;\n    margin: 10px auto 0 auto;\n    text-align: center;\n`;\n_c6 = Dosset;\nconst Pill = styled.div`\n    display: inline-block;\n    height: 16px;\n    width: 16px;\n    border-radius: 8px;\n    margin: 0px 2px;\n    background-color: ${props => props.correct ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#A94D53\" : \"#C6777D\"}\n`;\n_c7 = Pill;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"PreviousSessionsPage\");\n$RefreshReg$(_c2, \"QuestionList\");\n$RefreshReg$(_c3, \"QuestionListItem\");\n$RefreshReg$(_c4, \"QuestionTitle\");\n$RefreshReg$(_c5, \"Percentage\");\n$RefreshReg$(_c6, \"Dosset\");\n$RefreshReg$(_c7, \"Pill\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/PreviousSessionsPage.tsx"],"names":["Link","styled","React","useContext","Title","Subtitle","MetaContext","PreviousSessionsPage","props","darkMode","createSessionArray","q","idx","correctlyAnsweredSectionCount","sections","reduce","acc","s","correctOption","selectedOption","percentageCorrect","Math","round","length","categoryPath","map","i","color","previousSessions","previousSession","updateSelectedSession","QuestionList","ul","QuestionListItem","div","QuestionTitle","Percentage","Dosset","Pill","correct"],"mappings":"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","sourcesContent":["import { FinalsQuestion } from '../../types'; \nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport {Animated} from \"react-animated-css\";\nimport { Title } from '../General/Title';\nimport { Subtitle } from '../General/Subtitle';\nimport MetaContext from '../../MetaContext';\n\ntype PreviousSessionProps = {\n    previousSessions: FinalsQuestion[][];\n    updateSelectedSession: React.Dispatch<React.SetStateAction<FinalsQuestion[]>>;\n}\n\nconst PreviousSessionsPage = (props: PreviousSessionProps) => {\n\n    const { darkMode } = useContext(MetaContext);\n\n    const createSessionArray = (q: FinalsQuestion, idx: number) => {\n\n        const correctlyAnsweredSectionCount = q.sections.reduce((acc, s) => acc + (s.correctOption === s.selectedOption ? 1 : 0), 0);\n        const percentageCorrect = Math.round(100 * correctlyAnsweredSectionCount / q.sections.length);\n\n        return (\n            <QuestionListItem darkMode = { darkMode } key = {idx}>\n                \n                <Percentage darkMode = { darkMode }> \n                    { percentageCorrect } % \n                </Percentage>\n\n                <QuestionTitle darkMode = { darkMode }> {idx + 1}. { q.categoryPath[q.categoryPath.length - 1] } </QuestionTitle>\n\n                <Dosset > \n                    { q.sections.map( (s, i) => <Pill darkMode = { darkMode } correct = { s.correctOption === s.selectedOption } /> ) }  \n                </Dosset>\n                    \n            </QuestionListItem>\n        );\n    }\n\n    return (\n        <>\n\n            <Title darkMode = { darkMode }>\n                <span style = {{ color: (darkMode ? \"#FAD000\" : \"#7babff\") }}> Finals </span> Questions\n            </Title>\n\n            <Subtitle darkMode = { darkMode }>\n                Previous Sessions\n            </Subtitle>\n\n            {\n                props.previousSessions.length > 0\n                ?   props.previousSessions.map(previousSession => \n                        <Link to = \"/User/Finals/LastSession/Session\">\n                            <QuestionList darkMode = { darkMode } onClick = { () => props.updateSelectedSession(previousSession) }>\n                                { previousSession.map(createSessionArray) }\n                            </QuestionList>\n                        </Link>\n                    )\n\n                : <Title darkMode = { darkMode } style = {{ color: 'grey' }}>Do Some Questions!</Title>\n            }\n        \n        </>\n    );\n}\n\nexport default PreviousSessionsPage;\n\nconst QuestionList = styled.ul<{ darkMode: boolean }>`\n    display: flex;\n    align-items: center;\n    overflow: scroll;\n    background-color: ${ props => props.darkMode ? \"#9546f05e\" : \"#b1def599\" };\n    border-radius: 20px;\n    margin: 20px 0;\n    padding: 10px;\n`\n\nconst QuestionListItem = styled.div<{ darkMode: boolean }>`\n    display: inline-block;\n    width: 175px;\n    min-width: 175px;\n    background-color: ${ props => props.darkMode ? \"#10132C\" : \"#F6F0F0\" };\n    box-shadow: ${ props => props.darkMode ? \"2px 2px 2px #100A28\" : \"2px 2px 2px rgba(0, 0, 0, 0.25)\" }; \n    text-align: center;\n    border-radius: 20px;\n    margin: 10px;\n    padding: 10px 30px;\n    &:hover {\n        transform: scale(1.05);\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    }\n`\nconst QuestionTitle = styled.div<{ darkMode: boolean}>`\n    text-align: center;\n    margin-top: 10px;\n    color: ${ props => props.darkMode ? \"#ffffff\" : \"#100A28\" };\n    font: 15px Proxima;\n`\n\nconst Percentage = styled.div<{ darkMode: boolean}>`\n    text-align: center;\n    margin-top: 20px;\n    color: ${ props => props.darkMode ? \"#ffffff\" : \"#100A28\" };\n    font: 35px Champion;\n`\n\nconst Dosset = styled.div`\n    white-space: wrap;\n    margin: 10px auto 0 auto;\n    text-align: center;\n`\n\nconst Pill  = styled.div<{ correct: boolean, darkMode: boolean }>`\n    display: inline-block;\n    height: 16px;\n    width: 16px;\n    border-radius: 8px;\n    margin: 0px 2px;\n    background-color: ${ props => props.correct ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : (props.darkMode ? \"#A94D53\" : \"#C6777D\") }\n`"]},"metadata":{},"sourceType":"module"}