{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/TaskSection.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext } from \"react\";\nimport { FaMicrophone, FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TaskSection = function TaskSection(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [props.responseAvailable && /*#__PURE__*/_jsxDEV(Control, {\n      onClick: props.playing ? props.stopEverything : props.playResponse,\n      narrowWindow: narrowWindow,\n      children: props.playing ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }, _this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 52\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, _this), !props.responseAvailable && /*#__PURE__*/_jsxDEV(Control, {\n      onClick: props.recording ? props.stopEverything : props.recordResponse,\n      narrowWindow: narrowWindow,\n      children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, _this), \" \\xA0\", props.loadingRecorder && \"Please Wait....\", props.recording && \"Answer now!\", !(props.loadingRecorder || props.recording) && \"Click to answer!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskSection, \"veOw0VdmvVP6A+6/HalGX29hfpk=\");\n\n_c = TaskSection;\nexport default TaskSection;\nvar Control = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 30%;\\n    border: 1px solid #414142;\\n    color: #fad000;\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c2 = Control;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskSection\");\n$RefreshReg$(_c2, \"Control\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/TaskSection.tsx"],"names":["useContext","FaMicrophone","FaPause","FaPlay","styled","MetaContext","TaskSection","props","narrowWindow","display","justifyContent","responseAvailable","playing","stopEverything","playResponse","recording","recordResponse","loadingRecorder","Control","button"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,MAAhC,QAA8C,gBAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAaA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAAA;;AAC7C,oBAAyBP,UAAU,CAACK,WAAD,CAAnC;AAAA,MAAQG,YAAR,eAAQA,YAAR;;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,eACKH,KAAK,CAACI,iBAAN,iBACG,QAAC,OAAD;AACI,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,GAAgBL,KAAK,CAACM,cAAtB,GAAuCN,KAAK,CAACO,YAD1D;AAEI,MAAA,YAAY,EAAEN,YAFlB;AAAA,gBAIKD,KAAK,CAACK,OAAN,gBAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,eAAhB,gBAA8B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJnC;AAAA;AAAA;AAAA;AAAA,aAFR,EAUK,CAACL,KAAK,CAACI,iBAAP,iBACG,QAAC,OAAD;AACI,MAAA,OAAO,EAAEJ,KAAK,CAACQ,SAAN,GAAkBR,KAAK,CAACM,cAAxB,GAAyCN,KAAK,CAACS,cAD5D;AAEI,MAAA,YAAY,EAAER,YAFlB;AAAA,8BAII,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAJJ,WAKKD,KAAK,CAACU,eAAN,IAAyB,iBAL9B,EAMKV,KAAK,CAACQ,SAAN,IAAmB,aANxB,EAOK,EAAER,KAAK,CAACU,eAAN,IAAyBV,KAAK,CAACQ,SAAjC,KAA+C,kBAPpD;AAAA;AAAA;AAAA;AAAA;AAAA,aAXR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CA1BD;;GAAMT,W;;KAAAA,W;AA4BN,eAAeA,WAAf;AAEA,IAAMY,OAAO,GAAGd,MAAM,CAACe,MAAV,+RASI,UAAAZ,KAAK;AAAA,SAAKA,KAAK,CAACC,YAAN,GAAqB,MAArB,GAA8B,MAAnC;AAAA,CATT,CAAb;MAAMU,O","sourcesContent":["import { useContext } from \"react\";\nimport { FaMicrophone, FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { responseId } from \"./types\";\n\ntype TaskSectionProps = {\n    recording: boolean;\n    recordResponse: () => void;\n    playing: boolean;\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAvailable: boolean;\n    loadingRecorder: boolean;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {props.responseAvailable && (\n                <Control\n                    onClick={props.playing ? props.stopEverything : props.playResponse}\n                    narrowWindow={narrowWindow}\n                >\n                    {props.playing ? <FaPause /> : <FaPlay />}\n                </Control>\n            )}\n\n            {!props.responseAvailable && (\n                <Control\n                    onClick={props.recording ? props.stopEverything : props.recordResponse}\n                    narrowWindow={narrowWindow}\n                >\n                    <FaMicrophone /> &nbsp;\n                    {props.loadingRecorder && \"Please Wait....\"}\n                    {props.recording && \"Answer now!\"}\n                    {!(props.loadingRecorder || props.recording) && \"Click to answer!\"}\n                </Control>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst Control = styled.button<{ narrowWindow: boolean }>`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 30%;\n    border: 1px solid #414142;\n    color: #fad000;\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n"]},"metadata":{},"sourceType":"module"}