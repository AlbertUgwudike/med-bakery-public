{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { produceHeat } from \"../../functions\";\nimport { startAudioRecordingId } from \"./types\";\nexport var useLoopTime = function useLoopTime(upperLimit) {\n  _s();\n\n  var _useState = useState(upperLimit),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setTime(function (time) {\n        if (time === 0) {\n          clearInterval(interval);\n          return 0;\n        } else return time - 1;\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return time;\n};\n\n_s(useLoopTime, \"HAa3Zkp51pBKEVcKaVE0XDzjv8k=\");\n\nexport var playStartTone = function playStartTone() {\n  var _document$getElementB;\n\n  return (_document$getElementB = document.getElementById(startAudioRecordingId)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.play();\n};\n\nvar handleAudioSession = function handleAudioSession(stream, updateFunc, startFunc) {\n  // cannot make media recorder if stream invalid\n  if (!stream) return;\n  var recorder = new MediaRecorder(stream);\n\n  recorder.ondataavailable = function (e) {\n    var blob = new Blob([e.data], {\n      type: \"audio/ogg; codecs=opus\"\n    });\n    updateFunc(window.URL.createObjectURL(blob));\n  };\n\n  recorder.onstart = startFunc;\n\n  recorder.onstop = function () {\n    stream.getTracks().forEach(function (track) {\n      return track.stop();\n    });\n    playStartTone();\n  };\n\n  recorder.start();\n  return recorder;\n};\n\nexport var useRecorder = function useRecorder(updateFunc, startFunc) {\n  _s2();\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recorder = _useState4[0],\n      updateRecorder = _useState4[1]; // attempt to retrieve a user input stream\n\n\n  var startRecorder = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var sesh, _recorder;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return navigator.mediaDevices.getUserMedia({\n                audio: true\n              });\n\n            case 3:\n              sesh = _context.sent;\n              _recorder = handleAudioSession(sesh, updateFunc, startFunc);\n              updateRecorder(_recorder);\n              produceHeat(11);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"startRecorder (hooks.tsx): Failed to commence audio session\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function startRecorder() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return [startRecorder, function () {\n    return recorder === null || recorder === void 0 ? void 0 : recorder.stop();\n  }];\n};\n\n_s2(useRecorder, \"AWW46P3126+v/4zylA7z458PW8w=\");\n\nexport var generateWaveSurfer = function generateWaveSurfer(containerId, audioUrl) {\n  var ws = WaveSurfer.create(waveSurferParams(containerId));\n  if (audioUrl) ws.load(audioUrl);\n  return ws;\n};\nexport var waveSurferParams = function waveSurferParams(containerId) {\n  return {\n    container: \"#\" + containerId,\n    waveColor: \"white\",\n    progressColor: \"#FAD000\",\n    height: 20,\n    cursorWidth: 0,\n    hideScrollbar: true\n  };\n};\nexport var toggleMarkPoint = function toggleMarkPoint(station, questionIdx, pointId) {\n  return _objectSpread(_objectSpread({}, station), {}, {\n    questions: station.questions.map(function (q, i) {\n      return i === questionIdx ? _objectSpread(_objectSpread({}, q), {}, {\n        markScheme: q.markScheme.map(function (ms) {\n          return _objectSpread(_objectSpread({}, ms), {}, {\n            points: ms.points.map(function (pt) {\n              return _objectSpread(_objectSpread({}, pt), {}, {\n                selected: pt.pointId === pointId ? !pt.selected : pt.selected\n              });\n            })\n          });\n        })\n      }) : q;\n    })\n  });\n};\nexport var countPoints = function countPoints(markScheme) {\n  return markScheme.reduce(function (acc, a) {\n    return [acc[0] + a.points.reduce(function (total, pt) {\n      return total + (pt.selected ? 1 : 0);\n    }, 0), acc[1] + a.points.length];\n  }, [0, 0]);\n};\nexport var binaryToCode = function binaryToCode(points) {\n  var arr = points.reverse();\n  return arr.reduce(function (acc, n, i) {\n    return acc += n * Math.pow(2, i);\n  }, 0);\n};\nexport var getBinaryDigits = function getBinaryDigits(n) {\n  var curr = n;\n  var arr = [];\n\n  while (curr > 0) {\n    arr.push(curr % 2 === 0 ? 0 : 1);\n    curr = Math.floor(curr / 2);\n  }\n\n  return arr.reverse();\n};\nexport var markPercentage = function markPercentage(markCode) {\n  var marks = getBinaryDigits(markCode).slice(1);\n  return marks.length > 0 ? Math.round(100 * marks.reduce(function (a, b) {\n    return a + b;\n  }, 0) / marks.length) : 0;\n};\nexport var populateMarkScheme = function populateMarkScheme(station, marks) {\n  var idx = 0;\n  station.questions.forEach(function (q) {\n    return q.markScheme.forEach(function (ms) {\n      return ms.points.forEach(function (p) {\n        p.selected = marks[idx] === 1;\n        idx += 1;\n      });\n    });\n  });\n  return station;\n};\nexport var rawToUrl = function rawToUrl(raw, type) {\n  var byteArray = new Uint8Array(raw.length);\n\n  for (var i = 0; i < raw.length; i++) {\n    byteArray[i] = raw.charCodeAt(i);\n  }\n\n  return window.URL.createObjectURL(new Blob([byteArray], {\n    type: type\n  }));\n};\nexport var populateResponseAudios = function populateResponseAudios(station, responseAudios) {\n  station.questions.forEach(function (q, i) {\n    q.responseAudio = rawToUrl(responseAudios[i], \"audio/mp3\");\n  });\n  return station;\n};\nexport var downloadAssets = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(station, SERVER_URL) {\n    var _iterator, _step, question;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper(station.questions);\n            _context2.prev = 1;\n\n            _iterator.s();\n\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 16;\n              break;\n            }\n\n            question = _step.value;\n            _context2.next = 7;\n            return convertToLocal(question.exemplarAudio, SERVER_URL);\n\n          case 7:\n            question.exemplarAudio = _context2.sent;\n            _context2.next = 10;\n            return convertToLocal(question.questionAudio, SERVER_URL);\n\n          case 10:\n            question.questionAudio = _context2.sent;\n            _context2.next = 13;\n            return convertToLocal(question.img, SERVER_URL);\n\n          case 13:\n            question.img = _context2.sent;\n\n          case 14:\n            _context2.next = 3;\n            break;\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](1);\n\n            _iterator.e(_context2.t0);\n\n          case 21:\n            _context2.prev = 21;\n\n            _iterator.f();\n\n            return _context2.finish(21);\n\n          case 24:\n            return _context2.abrupt(\"return\", new Promise(function (r, _) {\n              return r(station);\n            }));\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 18, 21, 24]]);\n  }));\n\n  return function downloadAssets(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar convertToLocal = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(remoteUrl, SERVER_URL) {\n    var fres;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(SERVER_URL + \"/media/osce/\" + remoteUrl);\n\n          case 2:\n            fres = _context4.sent;\n            return _context4.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(r, _) {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.t0 = r;\n                        _context3.t1 = window.URL;\n                        _context3.next = 4;\n                        return fres.blob();\n\n                      case 4:\n                        _context3.t2 = _context3.sent;\n                        _context3.t3 = _context3.t1.createObjectURL.call(_context3.t1, _context3.t2);\n                        return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t3));\n\n                      case 7:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function convertToLocal(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport var extractReponseAudio = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(questions) {\n    var arrays;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            arrays = questions.map( /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(question) {\n                var res, buffer;\n                return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        if (!(question.responseAudio === \"\")) {\n                          _context5.next = 2;\n                          break;\n                        }\n\n                        return _context5.abrupt(\"return\", \"\");\n\n                      case 2:\n                        _context5.next = 4;\n                        return fetch(question.responseAudio);\n\n                      case 4:\n                        res = _context5.sent;\n                        _context5.next = 7;\n                        return res.arrayBuffer();\n\n                      case 7:\n                        buffer = _context5.sent;\n                        return _context5.abrupt(\"return\", Buffer.from(buffer).toString(\"binary\"));\n\n                      case 9:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x8) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n            return _context6.abrupt(\"return\", Promise.all(arrays));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function extractReponseAudio(_x7) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var convertToString = function convertToString(time) {\n  var minutes = Math.floor(time / 60);\n  var minuteString = minutes < 10 ? \"0\" + minutes : \"\" + minutes;\n  var seconds = time % 60;\n  var secondsString = seconds < 10 ? \"0\" + seconds : \"\" + seconds;\n  return minuteString + \":\" + secondsString;\n};\nexport var useUserDetails = function useUserDetails(SERVER_URL, token) {\n  _s3();\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userLoading = _useState6[0],\n      updateUserLoading = _useState6[1];\n\n  var _useState7 = useState({\n    answeredStations: [],\n    purchasedOsce: false\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userDetailsOsce = _useState8[0],\n      updateUserDetailsOsce = _useState8[1];\n\n  var loadUserDetails = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var res, _res$data, answeredStations, purchasedOsce;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              updateUserLoading(true);\n              _context7.prev = 1;\n              _context7.next = 4;\n              return axios.post(SERVER_URL + \"/user/osce_details\", {\n                token: token\n              });\n\n            case 4:\n              res = _context7.sent;\n\n              if (res.data.success) {\n                _context7.next = 7;\n                break;\n              }\n\n              throw \"loadUserDetails (OSCEPage.tsx): user details retrieval failed\";\n\n            case 7:\n              _res$data = res.data, answeredStations = _res$data.answeredStations, purchasedOsce = _res$data.purchasedOsce;\n              updateUserDetailsOsce({\n                answeredStations: answeredStations,\n                purchasedOsce: purchasedOsce\n              });\n              _context7.next = 14;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](1);\n              console.error(_context7.t0);\n\n            case 14:\n              updateUserLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 11]]);\n    }));\n\n    return function loadUserDetails() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (token) {\n      loadUserDetails();\n    } else {\n      updateUserDetailsOsce({\n        answeredStations: [],\n        purchasedOsce: false\n      });\n    }\n  }, [token]);\n  return [userDetailsOsce, userLoading];\n};\n\n_s3(useUserDetails, \"WoOlxmAEiDDyntCAQELNnOJN12w=\");\n\nexport var useStations = function useStations(SERVER_URL, token) {\n  _s4();\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      stationeSummariesLoading = _useState10[0],\n      updateSummariesLoading = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      stationSummarires = _useState12[0],\n      updateStationSummaries = _useState12[1];\n\n  var loadSummaries = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              updateSummariesLoading(true);\n              _context8.prev = 1;\n              _context8.next = 4;\n              return axios.post(SERVER_URL + \"/osce/get_stations\", {\n                token: token\n              });\n\n            case 4:\n              res = _context8.sent;\n\n              if (res.data.success) {\n                _context8.next = 7;\n                break;\n              }\n\n              throw \"loadSummaries (OSCEPage.tsx): station summary retrieval failed\";\n\n            case 7:\n              updateStationSummaries(res.data.summaries);\n              _context8.next = 13;\n              break;\n\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](1);\n              console.error(_context8.t0);\n\n            case 13:\n              console.log(\"yeet\");\n              updateSummariesLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 10]]);\n    }));\n\n    return function loadSummaries() {\n      return _ref8.apply(this, arguments);\n    };\n  }(); // cant have asynchronous effect callback\n\n\n  useEffect(function () {\n    loadSummaries();\n  }, []);\n  return [stationSummarires, stationeSummariesLoading];\n};\n\n_s4(useStations, \"7u/vekEhc/A75ZEdrRYGqG2iH74=\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/hooks.tsx"],"names":["axios","useEffect","useState","WaveSurfer","produceHeat","startAudioRecordingId","useLoopTime","upperLimit","time","setTime","interval","setInterval","clearInterval","playStartTone","document","getElementById","play","handleAudioSession","stream","updateFunc","startFunc","recorder","MediaRecorder","ondataavailable","e","blob","Blob","data","type","window","URL","createObjectURL","onstart","onstop","getTracks","forEach","track","stop","start","useRecorder","updateRecorder","startRecorder","navigator","mediaDevices","getUserMedia","audio","sesh","console","error","generateWaveSurfer","containerId","audioUrl","ws","create","waveSurferParams","load","container","waveColor","progressColor","height","cursorWidth","hideScrollbar","toggleMarkPoint","station","questionIdx","pointId","questions","map","q","i","markScheme","ms","points","pt","selected","countPoints","reduce","acc","a","total","length","binaryToCode","arr","reverse","n","Math","pow","getBinaryDigits","curr","push","floor","markPercentage","markCode","marks","slice","round","b","populateMarkScheme","idx","p","rawToUrl","raw","byteArray","Uint8Array","charCodeAt","populateResponseAudios","responseAudios","responseAudio","downloadAssets","SERVER_URL","question","convertToLocal","exemplarAudio","questionAudio","img","Promise","r","_","remoteUrl","fetch","fres","extractReponseAudio","arrays","res","arrayBuffer","buffer","Buffer","from","toString","all","convertToString","minutes","minuteString","seconds","secondsString","useUserDetails","token","userLoading","updateUserLoading","answeredStations","purchasedOsce","userDetailsOsce","updateUserDetailsOsce","loadUserDetails","post","success","useStations","stationeSummariesLoading","updateSummariesLoading","stationSummarires","updateStationSummaries","loadSummaries","summaries","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { produceHeat } from \"../../functions\";\nimport {\n    MarkSchemeSection,\n    mimeTypes,\n    Question,\n    startAudioRecordingId,\n    Station,\n    StationSummary,\n    UserDetailsOsce,\n} from \"./types\";\n\nexport const useLoopTime = (upperLimit: number): number => {\n    const [time, setTime] = useState(upperLimit);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTime(time => {\n                if (time === 0) {\n                    clearInterval(interval);\n                    return 0;\n                } else return time - 1;\n            });\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return time;\n};\n\nexport const playStartTone = () =>\n    (document.getElementById(startAudioRecordingId) as HTMLAudioElement)?.play();\n\nconst handleAudioSession = (\n    stream: MediaStream,\n    updateFunc: (audio: string) => void,\n    startFunc: () => void\n) => {\n    // cannot make media recorder if stream invalid\n    if (!stream) return;\n\n    const recorder = new MediaRecorder(stream);\n\n    recorder.ondataavailable = function (this, e) {\n        const blob = new Blob([e.data], { type: \"audio/ogg; codecs=opus\" });\n        updateFunc(window.URL.createObjectURL(blob));\n    };\n\n    recorder.onstart = startFunc;\n\n    recorder.onstop = () => {\n        stream.getTracks().forEach(track => track.stop());\n        playStartTone();\n    };\n\n    recorder.start();\n\n    return recorder;\n};\n\nexport const useRecorder = (\n    updateFunc: (audio: string) => void,\n    startFunc: () => void\n): [() => void, () => void] => {\n    const [recorder, updateRecorder] = useState<MediaRecorder>();\n\n    // attempt to retrieve a user input stream\n    const startRecorder = async () => {\n        try {\n            const sesh = await navigator.mediaDevices.getUserMedia({ audio: true });\n            const recorder = handleAudioSession(sesh, updateFunc, startFunc);\n            updateRecorder(recorder);\n            produceHeat(11);\n        } catch (e) {\n            console.error(\"startRecorder (hooks.tsx): Failed to commence audio session\");\n        }\n    };\n\n    return [startRecorder, () => recorder?.stop()];\n};\n\nexport const generateWaveSurfer = (containerId: string, audioUrl: string) => {\n    const ws = WaveSurfer.create(waveSurferParams(containerId));\n    if (audioUrl) ws.load(audioUrl);\n    return ws;\n};\n\nexport const waveSurferParams = (containerId: string) => ({\n    container: \"#\" + containerId,\n    waveColor: \"white\",\n    progressColor: \"#FAD000\",\n    height: 20,\n    cursorWidth: 0,\n    hideScrollbar: true,\n});\n\nexport const toggleMarkPoint = (\n    station: Station,\n    questionIdx: number,\n    pointId: number\n): Station => ({\n    ...station,\n    questions: station.questions.map((q, i) =>\n        i === questionIdx\n            ? {\n                  ...q,\n                  markScheme: q.markScheme.map(ms => ({\n                      ...ms,\n                      points: ms.points.map(pt => ({\n                          ...pt,\n                          selected: pt.pointId === pointId ? !pt.selected : pt.selected,\n                      })),\n                  })),\n              }\n            : q\n    ),\n});\n\nexport const countPoints = (markScheme: MarkSchemeSection[]): [number, number] => {\n    return markScheme.reduce(\n        (acc, a) => {\n            return [\n                acc[0] + a.points.reduce((total, pt) => total + (pt.selected ? 1 : 0), 0),\n                acc[1] + a.points.length,\n            ];\n        },\n        [0, 0]\n    );\n};\n\nexport const binaryToCode = (points: (0 | 1)[]): number => {\n    const arr = points.reverse();\n    return arr.reduce((acc, n, i) => (acc += n * Math.pow(2, i)), 0 as number);\n};\n\nexport const getBinaryDigits = (n: number): (0 | 1)[] => {\n    let curr = n;\n    let arr: (0 | 1)[] = [];\n    while (curr > 0) {\n        arr.push(curr % 2 === 0 ? 0 : 1);\n        curr = Math.floor(curr / 2);\n    }\n    return arr.reverse();\n};\n\nexport const markPercentage = (markCode: number): number => {\n    const marks = getBinaryDigits(markCode).slice(1);\n    return marks.length > 0\n        ? Math.round((100 * marks.reduce((a, b) => a + b, 0 as number)) / marks.length)\n        : 0;\n};\n\nexport const populateMarkScheme = (station: Station, marks: (0 | 1)[]): Station => {\n    let idx = 0;\n    station.questions.forEach(q =>\n        q.markScheme.forEach(ms =>\n            ms.points.forEach(p => {\n                p.selected = marks[idx] === 1;\n                idx += 1;\n            })\n        )\n    );\n    return station;\n};\n\nexport const rawToUrl = (raw: string, type: string): string => {\n    const byteArray = new Uint8Array(raw.length);\n    for (let i = 0; i < raw.length; i++) {\n        byteArray[i] = raw.charCodeAt(i);\n    }\n    return window.URL.createObjectURL(new Blob([byteArray], { type }));\n};\n\nexport const populateResponseAudios = (station: Station, responseAudios: string[]): Station => {\n    station.questions.forEach((q, i) => {\n        q.responseAudio = rawToUrl(responseAudios[i], \"audio/mp3\");\n    });\n    return station;\n};\n\nexport const downloadAssets = async (station: Station, SERVER_URL: string): Promise<Station> => {\n    for (const question of station.questions) {\n        // get local copies of exemplar, question and img\n        question.exemplarAudio = await convertToLocal(question.exemplarAudio, SERVER_URL);\n        question.questionAudio = await convertToLocal(question.questionAudio, SERVER_URL);\n        question.img = await convertToLocal(question.img, SERVER_URL);\n    }\n    return new Promise((r, _) => r(station));\n};\n\nconst convertToLocal = async (remoteUrl: string, SERVER_URL: string): Promise<string> => {\n    const fres = await fetch(SERVER_URL + \"/media/osce/\" + remoteUrl);\n    return new Promise(async (r, _) => r(window.URL.createObjectURL(await fres.blob())));\n};\n\nexport const extractReponseAudio = async (questions: Question[]): Promise<string[]> => {\n    const arrays = questions.map(async question => {\n        if (question.responseAudio === \"\") return \"\";\n        const res = await fetch(question.responseAudio);\n        const buffer = await res.arrayBuffer(); // <== no audio upload on iphone bug\n        return Buffer.from(buffer).toString(\"binary\");\n    });\n    return Promise.all(arrays);\n};\n\nexport const convertToString = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const minuteString = minutes < 10 ? \"0\" + minutes : \"\" + minutes;\n    const seconds = time % 60;\n    const secondsString = seconds < 10 ? \"0\" + seconds : \"\" + seconds;\n    return minuteString + \":\" + secondsString;\n};\n\nexport const useUserDetails = (SERVER_URL: string, token: string): [UserDetailsOsce, boolean] => {\n    const [userLoading, updateUserLoading] = useState(false);\n    const [userDetailsOsce, updateUserDetailsOsce] = useState<UserDetailsOsce>({\n        answeredStations: [],\n        purchasedOsce: false,\n    });\n\n    const loadUserDetails = async () => {\n        updateUserLoading(true);\n\n        try {\n            const res = await axios.post(SERVER_URL + \"/user/osce_details\", { token });\n\n            if (!res.data.success) {\n                throw \"loadUserDetails (OSCEPage.tsx): user details retrieval failed\";\n            }\n\n            const { answeredStations, purchasedOsce } = res.data;\n            updateUserDetailsOsce({ answeredStations, purchasedOsce });\n        } catch (error) {\n            console.error(error);\n        }\n\n        updateUserLoading(false);\n    };\n\n    useEffect(() => {\n        if (token) {\n            loadUserDetails();\n        } else {\n            updateUserDetailsOsce({\n                answeredStations: [],\n                purchasedOsce: false,\n            });\n        }\n    }, [token]);\n\n    return [userDetailsOsce, userLoading];\n};\n\nexport const useStations = (\n    SERVER_URL: string,\n    token: string\n): [stations: StationSummary[], loading: boolean] => {\n    const [stationeSummariesLoading, updateSummariesLoading] = useState(false);\n    const [stationSummarires, updateStationSummaries] = useState<StationSummary[]>([]);\n\n    const loadSummaries = async () => {\n        updateSummariesLoading(true);\n\n        try {\n            const res = await axios.post(SERVER_URL + \"/osce/get_stations\", { token });\n\n            if (!res.data.success) {\n                throw \"loadSummaries (OSCEPage.tsx): station summary retrieval failed\";\n            }\n\n            updateStationSummaries(res.data.summaries);\n        } catch (error) {\n            console.error(error);\n        }\n        console.log(\"yeet\");\n        updateSummariesLoading(false);\n    };\n\n    // cant have asynchronous effect callback\n    useEffect(() => {\n        loadSummaries();\n    }, []);\n\n    return [stationSummarires, stationeSummariesLoading];\n};\n"]},"metadata":{},"sourceType":"module"}