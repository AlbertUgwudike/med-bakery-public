{"ast":null,"code":"import _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  delayTime: 0,\n  maxDelayTime: 1\n};\nexport var createDelayNodeConstructor = function createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(DelayNode, _audioNodeConstructor);\n\n    var _super = _createSuper(DelayNode);\n\n    function DelayNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, DelayNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;\n      _this = _super.call(this, context, false, nativeDelayNode, delayNodeRenderer);\n      _this._delayTime = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDelayNode.delayTime);\n      setAudioNodeTailTime(_assertThisInitialized(_this), mergedOptions.maxDelayTime);\n      return _this;\n    }\n\n    _createClass(DelayNode, [{\n      key: \"delayTime\",\n      get: function get() {\n        return this._delayTime;\n      }\n    }]);\n\n    return DelayNode;\n  }(audioNodeConstructor);\n};","map":null,"metadata":{},"sourceType":"module"}