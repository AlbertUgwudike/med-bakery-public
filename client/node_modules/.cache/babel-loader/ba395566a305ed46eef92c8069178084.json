{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Header.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Login, LoginButton } from \"../HomePage/LoginLogout\";\nimport { StartButton } from \"./Common\";\nimport TimerApparatus from \"./TimerApparatus\";\nimport TimerBar from \"./TimerBar\";\nimport htmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Header = function Header(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      token = _useContext.token,\n      SERVER_URL = _useContext.SERVER_URL;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      briefShowing = _useState2[0],\n      updateBriefShowing = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayLoginOption = _useState4[0],\n      updateDisplayLoginOption = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), props.timedHeader ? /*#__PURE__*/_jsxDEV(TimerApparatus, {\n        station: props.station,\n        questionIdx: props.questionIdx,\n        updateStation: props.updateStation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TimerBar, {\n      percentage: props.percentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: function onClick() {\n            return updateBriefShowing(!briefShowing);\n          },\n          children: [briefShowing ? \"Hide\" : \"Show\", \" Brief\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this), token ? /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: function onClick() {\n          var _props$station;\n\n          return props.handleExit((_props$station = props.station) === null || _props$station === void 0 ? void 0 : _props$station.questions, token);\n        },\n        children: \"Exit Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(StartButton, {\n        onClick: function onClick() {\n          return updateDisplayLoginOption(true);\n        },\n        children: \"Exit Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, _this), displayLoginOption ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        label: \"Login & Save!\",\n        successCallback: function successCallback(t) {\n          var _props$station2;\n\n          return props.handleExit((_props$station2 = props.station) === null || _props$station2 === void 0 ? void 0 : _props$station2.questions, t);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/OSCE\",\n        children: /*#__PURE__*/_jsxDEV(LoginButton, {\n          children: \"Exit without saving.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), briefShowing ? htmlParser(props.briefPrompt) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Header, \"R7Oo2h8hspuPFJEr31F/DR+1LxQ=\");\n\n_c = Header;\nexport default Header;\nvar HeaderContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    position: sticky;\\n    top: 0;\\n    width: 100%;\\n    background-color: #1c2124;\\n    padding-top: 50px;\\n    opacity: 0.98;\\n    z-index: 999;\\n\"])));\n_c2 = HeaderContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"HeaderContainer\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Header.tsx"],"names":["useContext","useState","styled","MetaContext","Login","LoginButton","StartButton","TimerApparatus","TimerBar","htmlParser","Link","Header","props","token","SERVER_URL","briefShowing","updateBriefShowing","displayLoginOption","updateDisplayLoginOption","display","justifyContent","title","timedHeader","station","questionIdx","updateStation","percentage","handleExit","questions","textAlign","t","briefPrompt","HeaderContainer","div"],"mappings":"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","sourcesContent":["import axios from \"../../myaxios\";\nimport { Dispatch, ReactElement, SetStateAction, useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Login, LoginButton } from \"../HomePage/LoginLogout\";\nimport { StartButton } from \"./Common\";\nimport { NullStation } from \"./DemoStations/NullStation\";\nimport { binaryToCode, countPoints } from \"./hooks\";\nimport TimerApparatus from \"./TimerApparatus\";\nimport TimerBar from \"./TimerBar\";\nimport { Question, Station } from \"./types\";\nimport htmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\n\ntype HeaderProps = {\n    station: Station;\n    questionIdx?: number;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    timedHeader: boolean;\n    percentage: number;\n    briefPrompt: string;\n    title: string;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst Header = (props: HeaderProps) => {\n    const { token, SERVER_URL } = useContext(MetaContext);\n    const [briefShowing, updateBriefShowing] = useState(false);\n    const [displayLoginOption, updateDisplayLoginOption] = useState(false);\n\n    return (\n        <HeaderContainer>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                    <h2>{props.title}</h2>\n                </div>\n                {props.timedHeader ? (\n                    <TimerApparatus\n                        station={props.station!}\n                        questionIdx={props.questionIdx!}\n                        updateStation={props.updateStation!}\n                    />\n                ) : (\n                    <></>\n                )}\n            </div>\n\n            <TimerBar percentage={props.percentage} />\n\n            <br />\n\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                    <StartButton onClick={() => updateBriefShowing(!briefShowing)}>\n                        {briefShowing ? \"Hide\" : \"Show\"} Brief\n                    </StartButton>\n                </div>\n\n                {token ? (\n                    <StartButton onClick={() => props.handleExit(props.station?.questions, token)}>\n                        Exit Demo\n                    </StartButton>\n                ) : (\n                    <StartButton onClick={() => updateDisplayLoginOption(true)}>\n                        Exit Demo\n                    </StartButton>\n                )}\n            </div>\n\n            <br />\n\n            {displayLoginOption ? (\n                <div style={{ textAlign: \"center\" }}>\n                    <Login\n                        label={\"Login & Save!\"}\n                        successCallback={t => props.handleExit(props.station?.questions, t)}\n                    />\n                    <Link to=\"/OSCE\">\n                        <LoginButton>Exit without saving.</LoginButton>\n                    </Link>\n                </div>\n            ) : (\n                <></>\n            )}\n\n            {briefShowing ? htmlParser(props.briefPrompt) : <></>}\n        </HeaderContainer>\n    );\n};\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n    position: sticky;\n    top: 0;\n    width: 100%;\n    background-color: #1c2124;\n    padding-top: 50px;\n    opacity: 0.98;\n    z-index: 999;\n`;\n"]},"metadata":{},"sourceType":"module"}