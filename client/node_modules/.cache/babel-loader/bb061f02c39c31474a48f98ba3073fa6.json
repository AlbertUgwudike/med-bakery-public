{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReviewPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2;\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { Box, Container } from \"./Common\";\nimport { generateWaveSurfer } from \"./hooks\";\nimport MarkScheme from \"./MarkScheme\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport TaskSectionReview from \"./TaskSectionReview\";\nimport { exemplarId, responseId, promptId } from \"./types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar initalAudioState = {\n  promptAudio: null,\n  promptPlaying: true,\n  exemplarWaveSurfer: undefined,\n  responseWaveSurfer: undefined,\n  exemplarPlaying: false,\n  responsePlaiyng: false\n};\n\nvar QuestionReviewPage = function QuestionReviewPage(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      SERVER_URL = _useContext.SERVER_URL;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageExpanded = _useState2[0],\n      updateImageExpanded = _useState2[1];\n\n  var _useState3 = useState(initalAudioState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioState = _useState4[0],\n      updateAudioState = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showMarkScheme = _useState6[0],\n      updateShowMarkScheme = _useState6[1];\n\n  var location = useLocation();\n  var paths = location.pathname.split(\"/\");\n  var lastPath = paths[paths.length - 1];\n  var questionIdx = Number(lastPath.substring(lastPath.indexOf(\"w\") + 1));\n  var question = props.station.questions[questionIdx];\n  console.log(questionIdx);\n\n  var stopAllPlayback = function stopAllPlayback() {\n    var _audioState$promptAud, _audioState$exemplarW, _audioState$responseW;\n\n    (_audioState$promptAud = audioState.promptAudio) === null || _audioState$promptAud === void 0 ? void 0 : _audioState$promptAud.pause();\n    (_audioState$exemplarW = audioState.exemplarWaveSurfer) === null || _audioState$exemplarW === void 0 ? void 0 : _audioState$exemplarW.stop();\n    (_audioState$responseW = audioState.responseWaveSurfer) === null || _audioState$responseW === void 0 ? void 0 : _audioState$responseW.stop();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        exemplarPlaying: false,\n        responsePlaiyng: false,\n        promptPlaying: false\n      });\n    });\n  };\n\n  var _play = function play(id) {\n    var _audioState$exemplarW2, _audioState$promptAud2, _audioState$responseW2;\n\n    stopAllPlayback();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: id == promptId,\n        exemplarPlaying: id === exemplarId,\n        responsePlaiyng: id === responseId\n      });\n    });\n    if (id === exemplarId) (_audioState$exemplarW2 = audioState.exemplarWaveSurfer) === null || _audioState$exemplarW2 === void 0 ? void 0 : _audioState$exemplarW2.play();\n    if (id === promptId) (_audioState$promptAud2 = audioState.promptAudio) === null || _audioState$promptAud2 === void 0 ? void 0 : _audioState$promptAud2.play();\n    if (id === responseId) (_audioState$responseW2 = audioState.responseWaveSurfer) === null || _audioState$responseW2 === void 0 ? void 0 : _audioState$responseW2.play();\n  };\n\n  useEffect(function () {\n    [exemplarId, responseId].forEach(function (id) {\n      var container = document.getElementById(id);\n      if (container) container.innerHTML = \"\";\n    });\n    updateAudioState(_objectSpread(_objectSpread({}, initalAudioState), {}, {\n      promptAudio: document.getElementById(promptId),\n      exemplarWaveSurfer: generateWaveSurfer(exemplarId, question.exemplarAudio, stopAllPlayback),\n      responseWaveSurfer: generateWaveSurfer(responseId, question.responseAudio, stopAllPlayback)\n    }));\n  }, []); // cease playback when compnent unmounts <=== six hour bug :)\n  // useEffect(\n  //     () => stopAllPlayback,\n  //     [audioState.exemplarWaveSurfer, audioState.responseWaveSurfer]\n  // );\n\n  useEffect(stopAllPlayback, [questionIdx]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: props.station.questions.map(function (_, questionIdx) {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/OSCE/Station/Review\" + questionIdx,\n          children: function children(_ref) {\n            var match = _ref.match;\n            return /*#__PURE__*/_jsxDEV(CSSTransition, {\n              in: match !== null,\n              timeout: 1000,\n              classNames: \"page\",\n              unmountOnExit: true,\n              mountOnEnter: true,\n              style: {\n                position: \"relative\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(QuestionPrompt, {\n                    question: question,\n                    toggle: function toggle() {\n                      audioState.promptPlaying ? stopAllPlayback() : _play(promptId);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, _this), showMarkScheme ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textAlign: \"center\",\n                      position: \"relative\",\n                      marginTop: \"30px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Img, {\n                      src: question.img,\n                      imageExpanded: imageExpanded,\n                      onClick: function onClick() {\n                        return updateImageExpanded(!imageExpanded);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        position: \"absolute\",\n                        top: -25,\n                        width: \"100%\",\n                        color: \"grey\"\n                      },\n                      children: [\"Click to \", imageExpanded ? \"shrink\" : \"expand\", \"!\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 49\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 45\n                  }, _this) : /*#__PURE__*/_jsxDEV(MarkScheme, {\n                    updateStation: props.updateStation,\n                    markScheme: question.markScheme,\n                    questionIdx: questionIdx\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: responseId,\n      style: {\n        display: true ? \"block\" : \"hidden\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: exemplarId,\n      style: {\n        display: true ? \"block\" : \"hidden\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TaskSectionReview, {\n          label: \"You\",\n          playing: audioState.responsePlaiyng,\n          play: function play() {\n            return _play(responseId);\n          },\n          stop: stopAllPlayback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SchemeToggle, {\n          onClick: function onClick() {\n            return updateShowMarkScheme(!showMarkScheme);\n          },\n          children: \"Mark Scheme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TaskSectionReview, {\n          label: \"Exemplar\",\n          playing: audioState.exemplarPlaying,\n          play: function play() {\n            return _play(exemplarId);\n          },\n          stop: stopAllPlayback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(QuestionReviewPage, \"gkJ2S4S+sLPDnfLDnjjgFzvyJ1Q=\", false, function () {\n  return [useLocation];\n});\n\n_c = QuestionReviewPage;\nexport default QuestionReviewPage;\nvar Img = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    width: \", \";\\n    transition: width 0.2s;\\n    &:hover {\\n        cursor: pointer;\\n    }\\n\"])), function (props) {\n  return props.imageExpanded ? \"100%\" : \"60%\";\n});\n_c2 = Img;\nvar SchemeToggle = styled.button(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: #414142;\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    margin: auto;\\n    width: 100%;\\n    border: 1px solid #414142;\\n    color: #fad000;\\n\"])));\n_c3 = SchemeToggle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuestionReviewPage\");\n$RefreshReg$(_c2, \"Img\");\n$RefreshReg$(_c3, \"SchemeToggle\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReviewPage.tsx"],"names":["useContext","useEffect","useState","BrowserRouter","Route","useLocation","styled","MetaContext","Box","Container","generateWaveSurfer","MarkScheme","QuestionPrompt","TaskSectionReview","exemplarId","responseId","promptId","CSSTransition","initalAudioState","promptAudio","promptPlaying","exemplarWaveSurfer","undefined","responseWaveSurfer","exemplarPlaying","responsePlaiyng","QuestionReviewPage","props","SERVER_URL","imageExpanded","updateImageExpanded","audioState","updateAudioState","showMarkScheme","updateShowMarkScheme","location","paths","pathname","split","lastPath","length","questionIdx","Number","substring","indexOf","question","station","questions","console","log","stopAllPlayback","pause","stop","as","play","id","forEach","container","document","getElementById","innerHTML","exemplarAudio","responseAudio","textAlign","map","_","match","position","marginTop","img","top","width","color","updateStation","markScheme","display","justifyContent","Img","SchemeToggle","button"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, match, Route, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport MetaContext from \"../../MetaContext\";\nimport { Box, MoveOn, Container } from \"./Common\";\nimport { generateWaveSurfer } from \"./hooks\";\nimport MarkScheme from \"./MarkScheme\";\nimport QuestionPrompt from \"./QuestionPrompt\";\nimport TaskSectionReview from \"./TaskSectionReview\";\nimport { Station, exemplarId, responseId, promptId, Question } from \"./types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./styles.css\";\n\ntype QuestionReviewPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\ntype AudioState = {\n    promptAudio: HTMLAudioElement | null;\n    promptPlaying: boolean;\n    exemplarWaveSurfer: WaveSurfer | undefined;\n    responseWaveSurfer: WaveSurfer | undefined;\n    exemplarPlaying: boolean;\n    responsePlaiyng: boolean;\n};\n\nconst initalAudioState: AudioState = {\n    promptAudio: null,\n    promptPlaying: true,\n    exemplarWaveSurfer: undefined,\n    responseWaveSurfer: undefined,\n    exemplarPlaying: false,\n    responsePlaiyng: false,\n};\n\nconst QuestionReviewPage = (props: QuestionReviewPageProps) => {\n    const { SERVER_URL } = useContext(MetaContext);\n    const [imageExpanded, updateImageExpanded] = useState(false);\n    const [audioState, updateAudioState] = useState<AudioState>(initalAudioState);\n    const [showMarkScheme, updateShowMarkScheme] = useState(true);\n\n    const location = useLocation();\n    const paths = location.pathname.split(\"/\");\n    const lastPath = paths[paths.length - 1];\n    const questionIdx = Number(lastPath.substring(lastPath.indexOf(\"w\") + 1));\n    const question = props.station.questions[questionIdx];\n    console.log(questionIdx);\n\n    const stopAllPlayback = () => {\n        audioState.promptAudio?.pause();\n        audioState.exemplarWaveSurfer?.stop();\n        audioState.responseWaveSurfer?.stop();\n        updateAudioState(as => ({\n            ...as,\n            exemplarPlaying: false,\n            responsePlaiyng: false,\n            promptPlaying: false,\n        }));\n    };\n\n    const play = (id: string) => {\n        stopAllPlayback();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: id == promptId,\n            exemplarPlaying: id === exemplarId,\n            responsePlaiyng: id === responseId,\n        }));\n\n        if (id === exemplarId) audioState.exemplarWaveSurfer?.play();\n        if (id === promptId) audioState.promptAudio?.play();\n        if (id === responseId) audioState.responseWaveSurfer?.play();\n    };\n\n    useEffect(() => {\n        [exemplarId, responseId].forEach(id => {\n            const container = document.getElementById(id);\n            if (container) container.innerHTML = \"\";\n        });\n\n        updateAudioState({\n            ...initalAudioState,\n            promptAudio: document.getElementById(promptId) as HTMLAudioElement,\n            exemplarWaveSurfer: generateWaveSurfer(\n                exemplarId,\n                question.exemplarAudio,\n                stopAllPlayback\n            ),\n            responseWaveSurfer: generateWaveSurfer(\n                responseId,\n                question.responseAudio,\n                stopAllPlayback\n            ),\n        });\n    }, []);\n\n    // cease playback when compnent unmounts <=== six hour bug :)\n    // useEffect(\n    //     () => stopAllPlayback,\n    //     [audioState.exemplarWaveSurfer, audioState.responseWaveSurfer]\n    // );\n\n    useEffect(stopAllPlayback, [questionIdx]);\n\n    return (\n        <Container style={{ textAlign: \"center\" }}>\n            <BrowserRouter>\n                {props.station.questions.map((_, questionIdx) => (\n                    <Route exact path={\"/OSCE/Station/Review\" + questionIdx}>\n                        {({ match }) => (\n                            <CSSTransition\n                                in={match !== null}\n                                timeout={1000}\n                                classNames=\"page\"\n                                unmountOnExit\n                                mountOnEnter\n                                style={{ position: \"relative\" }}\n                            >\n                                <div className=\"page\">\n                                    <Box>\n                                        <QuestionPrompt\n                                            question={question}\n                                            toggle={() => {\n                                                audioState.promptPlaying\n                                                    ? stopAllPlayback()\n                                                    : play(promptId);\n                                            }}\n                                        />\n\n                                        {showMarkScheme ? (\n                                            <div\n                                                style={{\n                                                    textAlign: \"center\",\n                                                    position: \"relative\",\n                                                    marginTop: \"30px\",\n                                                }}\n                                            >\n                                                <Img\n                                                    src={question.img}\n                                                    imageExpanded={imageExpanded}\n                                                    onClick={() =>\n                                                        updateImageExpanded(!imageExpanded)\n                                                    }\n                                                ></Img>\n\n                                                <div\n                                                    style={{\n                                                        position: \"absolute\",\n                                                        top: -25,\n                                                        width: \"100%\",\n                                                        color: \"grey\",\n                                                    }}\n                                                >\n                                                    Click to {imageExpanded ? \"shrink\" : \"expand\"}!\n                                                </div>\n                                            </div>\n                                        ) : (\n                                            <MarkScheme\n                                                updateStation={props.updateStation}\n                                                markScheme={question.markScheme}\n                                                questionIdx={questionIdx}\n                                            />\n                                        )}\n                                        <br />\n                                    </Box>\n                                </div>\n                            </CSSTransition>\n                        )}\n                    </Route>\n                ))}\n            </BrowserRouter>\n\n            <div\n                id={responseId}\n                style={{\n                    display: true ? \"block\" : \"hidden\",\n                }}\n            ></div>\n            <div\n                id={exemplarId}\n                style={{\n                    display: true ? \"block\" : \"hidden\",\n                }}\n            ></div>\n            <br />\n            <br />\n\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ width: \"30%\" }}>\n                    <TaskSectionReview\n                        label=\"You\"\n                        playing={audioState.responsePlaiyng}\n                        play={() => play(responseId)}\n                        stop={stopAllPlayback}\n                    />\n                </div>\n\n                <div style={{ width: \"30%\" }}>\n                    <SchemeToggle onClick={() => updateShowMarkScheme(!showMarkScheme)}>\n                        Mark Scheme\n                    </SchemeToggle>\n                </div>\n\n                <div style={{ width: \"30%\" }}>\n                    <TaskSectionReview\n                        label=\"Exemplar\"\n                        playing={audioState.exemplarPlaying}\n                        play={() => play(exemplarId)}\n                        stop={stopAllPlayback}\n                    />\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default QuestionReviewPage;\n\nconst Img = styled.img<{ imageExpanded: boolean }>`\n    display: block;\n    margin: auto;\n    width: ${props => (props.imageExpanded ? \"100%\" : \"60%\")};\n    transition: width 0.2s;\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst SchemeToggle = styled.button`\n    background-color: #414142;\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    margin: auto;\n    width: 100%;\n    border: 1px solid #414142;\n    color: #fad000;\n`;\n"]},"metadata":{},"sourceType":"module"}