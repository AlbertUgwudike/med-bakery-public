{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/Generator/ECGSketch.tsx\",\n    _s = $RefreshSig$();\n\nimport Sketch from \"react-p5\";\nimport { useEffect, useState } from \"react\";\nimport { constants } from \"./ECGTypes\";\nimport { copy } from \"../Functions/utility\";\nimport styled from \"styled-components\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ECGSketch = props => {\n  _s();\n\n  const [selectedPOI, updateSelectedPOI] = useState(-1);\n  useEffect(() => updateSelectedPOI(-1), [props.question]);\n  const nullSignal = Array(4).fill(Array(constants.sampleCount).fill([0, false]));\n  const [prevSignal, updatePrevSignal] = useState(nullSignal);\n  const {\n    canvasWidth,\n    canvasHeight,\n    isoelectrics,\n    sampleCount,\n    leadConstants\n  } = constants;\n  const horizontalLittleSquareCount = 250;\n  const verticalLittleSquareCount = 80; // ONLY RENDER WHEN A VIABLE props.question.signal IS AVAILABLE\n\n  const viableSignal = props.question.signal.reduce((flag, row) => row && row.length === sampleCount && flag, true);\n  const emptySignal = props.question.signal.length === 0;\n  const POIOutOfBounds = selectedPOI >= props.question.pointsOfInterest.length;\n  if (!viableSignal || emptySignal || POIOutOfBounds) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\n  };\n\n  const draw = p5 => {\n    p5.background(props.theme.background); // draw le markers\n\n    for (let i = 0; i < horizontalLittleSquareCount; i++) {\n      const xcoord = i * canvasWidth / horizontalLittleSquareCount;\n\n      if (i % 5 === 0) {\n        p5.stroke(props.theme.majorTick);\n        p5.strokeWeight(1.5);\n        p5.line(xcoord, 0, xcoord, canvasHeight);\n      } else {\n        p5.stroke(props.theme.minorTick);\n        p5.strokeWeight(0.5);\n        p5.line(xcoord, 0, xcoord, canvasHeight);\n      }\n    }\n\n    for (let i = 0; i < verticalLittleSquareCount; i++) {\n      const ycoord = i * canvasHeight / verticalLittleSquareCount;\n\n      if (i % 5 === 0) {\n        p5.stroke(props.theme.majorTick);\n        p5.strokeWeight(1.5);\n        p5.line(0, ycoord, canvasWidth, ycoord);\n      } else {\n        p5.stroke(props.theme.minorTick);\n        p5.strokeWeight(0.5);\n        p5.line(0, ycoord, canvasWidth, ycoord);\n      }\n    } // draw le labels\n\n\n    p5.stroke(props.theme.label);\n    p5.strokeWeight(1);\n\n    for (const {\n      labelPos,\n      lead\n    } of leadConstants) {\n      p5.text(lead, labelPos.x, labelPos.y);\n    } // watermark\n\n\n    p5.stroke(props.theme.watermark);\n    p5.fill(props.theme.watermark);\n    p5.text(\"MedBakery Ltd\\nmedbakery.co.uk\", 10, 310); //nudge the previousSignal\n\n    let prevCopy = copy(prevSignal); //sooooo slow ugggggh\n\n    isoelectrics.map((_, row) => {\n      for (let i = 0; i < sampleCount; i++) {\n        const nudge = 0.2 * (props.question.signal[row][i][0] - prevCopy[row][i][0]);\n        prevCopy[row][i][0] += nudge;\n        prevCopy[row][i][1] = props.question.signal[row][i][1];\n      }\n    });\n    updatePrevSignal(prevCopy); // draw le props.question.signals\n\n    isoelectrics.map((iso, row) => {\n      p5.fill(0, 0, 0, 0);\n      p5.stroke(props.theme.signal);\n      p5.beginShape();\n\n      for (let i = 0; i < sampleCount; i++) {\n        if (prevSignal[row][i][1] && props.reviewMode) {\n          p5.endShape(); // end normal trace\n          // commence highlighted trace -------------------------------------------------\n\n          p5.stroke(props.theme.highlight);\n          p5.strokeWeight(2);\n          p5.beginShape();\n\n          for (let j = i; j < sampleCount && prevSignal[row][j][1]; j++) {\n            p5.vertex(j * canvasWidth / sampleCount, iso - prevSignal[row][i][0]);\n            i = j;\n          }\n\n          p5.endShape(); // ----------------------------------------------------------------------------\n\n          p5.stroke(props.theme.signal);\n          p5.strokeWeight(1); // resume normal trace\n\n          p5.beginShape();\n        } else {\n          p5.vertex(i * canvasWidth / sampleCount, iso - prevSignal[row][i][0]);\n        }\n      }\n\n      p5.endShape();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"scroll\",\n        display: \"inline-block\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: canvasWidth,\n          height: canvasHeight,\n          overflow: \"hidden\",\n          margin: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(Sketch, {\n            setup: setup,\n            draw: draw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), props.reviewMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [// do the hit box thing here\n          props.question.pointsOfInterest.map((poi, idx) => /*#__PURE__*/_jsxDEV(HitBox, {\n            style: {\n              position: \"absolute\",\n              top: poi.infoPos.y,\n              left: poi.infoPos.x,\n              opacity: idx === selectedPOI ? \"1\" : \"0.5\",\n              color: idx === selectedPOI ? \"green\" : \"white\"\n            },\n            onClick: () => updateSelectedPOI(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 45\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"500px\",\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n              position: \"absolute\",\n              left: 250,\n              top: 310,\n              color: \"white\"\n            },\n            children: selectedPOI === -1 ? \"choose a point of interest!\" : props.question.pointsOfInterest[selectedPOI].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ECGSketch, \"fyLzTcFfFJIqRPotq96X0HyJX0U=\");\n\n_c = ECGSketch;\nexport default ECGSketch;\nconst HitBox = styled.div`\n    height: 40px;\n    width: 20px;\n    cursor: pointer;\n`;\n_c2 = HitBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ECGSketch\");\n$RefreshReg$(_c2, \"HitBox\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/Generator/ECGSketch.tsx"],"names":["Sketch","useEffect","useState","constants","copy","styled","ECGSketch","props","selectedPOI","updateSelectedPOI","question","nullSignal","Array","fill","sampleCount","prevSignal","updatePrevSignal","canvasWidth","canvasHeight","isoelectrics","leadConstants","horizontalLittleSquareCount","verticalLittleSquareCount","viableSignal","signal","reduce","flag","row","length","emptySignal","POIOutOfBounds","pointsOfInterest","setup","p5","canvasParentRef","createCanvas","parent","draw","background","theme","i","xcoord","stroke","majorTick","strokeWeight","line","minorTick","ycoord","label","labelPos","lead","text","x","y","watermark","prevCopy","map","_","nudge","iso","beginShape","reviewMode","endShape","highlight","j","vertex","textAlign","overflow","display","width","position","height","margin","top","left","poi","idx","infoPos","opacity","color","backgroundColor","description","HitBox","div"],"mappings":"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","sourcesContent":["import Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport { useEffect, useState } from \"react\";\nimport { Theme } from \"./ECGSketchThemes\";\nimport { EcgQuestion, constants } from \"./ECGTypes\";\nimport { copy } from \"../Functions/utility\";\nimport styled from \"styled-components\";\n\nconst ECGSketch = (props: { question: EcgQuestion, theme: Theme, reviewMode: boolean }) => {\n    const [selectedPOI, updateSelectedPOI] = useState(-1)\n    useEffect(() => updateSelectedPOI(-1), [props.question])\n\n    const nullSignal = Array(4).fill(Array(constants.sampleCount).fill([0, false]))\n    const [prevSignal, updatePrevSignal] = useState(nullSignal);\n\n    const { canvasWidth, canvasHeight, isoelectrics, sampleCount, leadConstants } = constants;\n    const horizontalLittleSquareCount = 250;\n    const verticalLittleSquareCount = 80;\n\n    // ONLY RENDER WHEN A VIABLE props.question.signal IS AVAILABLE\n    const viableSignal = props.question.signal.reduce((flag, row) => row && row.length === sampleCount && flag, true as boolean);\n    const emptySignal = props.question.signal.length === 0;\n    const POIOutOfBounds = selectedPOI >= props.question.pointsOfInterest.length;\n\n    if (!viableSignal || emptySignal || POIOutOfBounds) return <></>;\n\n    const setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\n\t}\n\n    const draw = (p5: p5Types) => {\n        p5.background(props.theme.background);\n\n        // draw le markers\n        for(let i = 0; i < horizontalLittleSquareCount; i++) {\n            const xcoord = i * canvasWidth / horizontalLittleSquareCount;\n\n            if (i % 5 === 0) {\n                p5.stroke(props.theme.majorTick); p5.strokeWeight(1.5);\n                p5.line(xcoord, 0, xcoord, canvasHeight);\n            } else {\n                p5.stroke(props.theme.minorTick); p5.strokeWeight(0.5);\n                p5.line(xcoord, 0, xcoord, canvasHeight);\n            }\n        }\n\n        for(let i = 0; i < verticalLittleSquareCount; i++) {\n            const ycoord = i * canvasHeight / verticalLittleSquareCount;\n\n            if (i % 5 === 0) {\n                p5.stroke(props.theme.majorTick); p5.strokeWeight(1.5);\n                p5.line(0, ycoord, canvasWidth, ycoord);\n            } else {\n                p5.stroke(props.theme.minorTick); p5.strokeWeight(0.5);\n                p5.line(0, ycoord, canvasWidth, ycoord);\n            }\n        }\n\n        // draw le labels\n        p5.stroke(props.theme.label); p5.strokeWeight(1);\n        for (const { labelPos, lead } of leadConstants) {\n            p5.text(lead, labelPos.x, labelPos.y);\n        }\n\n        // watermark\n        p5.stroke(props.theme.watermark); p5.fill(props.theme.watermark) \n        p5.text(\"MedBakery Ltd\\nmedbakery.co.uk\", 10, 310)\n\n        //nudge the previousSignal\n        let prevCopy = copy(prevSignal) //sooooo slow ugggggh\n        isoelectrics.map( (_, row) => {\n            for (let i = 0; i < sampleCount; i++) { \n                const nudge = 0.2 * (props.question.signal[row][i][0] - prevCopy[row][i][0]);\n                prevCopy[row][i][0] += nudge\n                prevCopy[row][i][1] = props.question.signal[row][i][1]\n            }\n        });\n        updatePrevSignal(prevCopy)\n\n        // draw le props.question.signals\n        isoelectrics.map( (iso, row) => {\n            p5.fill(0,0,0,0); p5.stroke(props.theme.signal);\n            p5.beginShape();\n            for (let i = 0; i < sampleCount; i++) {\n\n                if (prevSignal[row][i][1] && props.reviewMode) {\n                    p5.endShape(); // end normal trace\n\n                    // commence highlighted trace -------------------------------------------------\n                    p5.stroke(props.theme.highlight); p5.strokeWeight(2);\n                    p5.beginShape();\n                    for(let j = i; j < sampleCount && prevSignal[row][j][1]; j++) {\n                        p5.vertex(j * canvasWidth / sampleCount, iso - prevSignal[row][i][0]);\n                        i = j;\n                    }\n                    p5.endShape();\n                    // ----------------------------------------------------------------------------\n\n                    p5.stroke(props.theme.signal); p5.strokeWeight(1); // resume normal trace\n                    p5.beginShape();\n\n                } else { p5.vertex(i * canvasWidth / sampleCount, iso - prevSignal[row][i][0]); }\n            }\n            p5.endShape();\n        });\n    }\n\n    return (\n        <div style = {{ textAlign: \"center\" }}>\n\n            <div style = {{ overflow: \"scroll\", display: \"inline-block\", width: \"100%\" }} >\n                <div style = {{ position: \"relative\", width: canvasWidth, height: canvasHeight, overflow: \"hidden\", margin: \"auto\" }}> \n\n                    <div  style = {{ position: \"absolute\", top: 0, left: 0 }}>\n                        <Sketch setup = { setup } draw = { draw }/> \n                    </div>\n\n                    {\n                        props.reviewMode\n                            ?   <>\n                                    { \n                                        // do the hit box thing here\n                                        props.question.pointsOfInterest.map((poi, idx) => \n                                            <HitBox\n                                                style = {{ \n                                                    position: \"absolute\", \n                                                    top: poi.infoPos.y, left: poi.infoPos.x, \n                                                    opacity: idx === selectedPOI ? \"1\" : \"0.5\",\n                                                    color: idx === selectedPOI ? \"green\" : \"white\"\n                                                }} \n                                                onClick = { () => updateSelectedPOI(idx) }\n                                            />\n                                        ) \n                                    }\n\n                                    <div style = {{ width: \"500px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\", position: \"absolute\", left: 250, top: 310, color: \"white\" }}>\n                                        { selectedPOI === -1 ? \"choose a point of interest!\" : props.question.pointsOfInterest[selectedPOI].description }\n                                    </div>\n                                </>\n                            :   <></>\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    )\n    \n}\n\nexport default ECGSketch;\n\nconst HitBox = styled.div`\n    height: 40px;\n    width: 20px;\n    cursor: pointer;\n`"]},"metadata":{},"sourceType":"module"}