{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionPage.tsx\",\n    _this = this;\n\nimport { Container } from \"../Common\";\nimport { startAudioRecordingId } from \"../types\";\nimport recordingStartAudioUrl from \"./media/start.mp3\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionContent from \"./QuestionContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar QuestionPage = function QuestionPage(props) {\n  var transitionStyles = props.questionIdx.curr < props.questionIdx.prev ? {\n    entering: {\n      transform: \"translateY(-150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(150%)\"\n    },\n    exited: {\n      transform: \"translateY(-150%)\"\n    }\n  } : {\n    entering: {\n      transform: \"translateY(150%)\"\n    },\n    entered: {\n      transform: \"translateY(0%)\"\n    },\n    exiting: {\n      transform: \"translateY(-150%)\"\n    },\n    exited: {\n      transform: \"translateY(150%)\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\"\n      },\n      children: props.station.questions.map(function (question, questionIdx) {\n        return /*#__PURE__*/_jsxDEV(Transition, {\n          in: questionIdx === props.questionIdx.curr,\n          timeout: 500,\n          unmountOnExit: true,\n          mountOnEnter: true,\n          children: function children(state) {\n            return /*#__PURE__*/_jsxDEV(QuestionContent, {\n              question: question,\n              lastQuestion: questionIdx === props.station.questions.length - 1,\n              updateStation: props.updateStation,\n              questionIdx: questionIdx,\n              updateQuestionIdx: props.updateQuestionIdx,\n              transitionStyle: transitionStyles[state]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: recordingStartAudioUrl,\n      id: startAudioRecordingId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = QuestionPage;\nexport default QuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionPage.tsx"],"names":["Container","startAudioRecordingId","recordingStartAudioUrl","Transition","QuestionContent","QuestionPage","props","transitionStyles","questionIdx","curr","prev","entering","transform","entered","exiting","exited","display","gridTemplateColumns","station","questions","map","question","state","length","updateStation","updateQuestionIdx"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,qBAAT,QAA+C,UAA/C;AACA,OAAOC,sBAAP,MAAmC,mBAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAA0B;AAC3C,MAAMC,gBAAwC,GAC1CD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,GAAyBH,KAAK,CAACE,WAAN,CAAkBE,IAA3C,GACM;AACIC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADd;AAEIC,IAAAA,OAAO,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAFb;AAGIE,IAAAA,OAAO,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAHb;AAIIG,IAAAA,MAAM,EAAE;AAAEH,MAAAA,SAAS,EAAE;AAAb;AAJZ,GADN,GAOM;AACID,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADd;AAEIC,IAAAA,OAAO,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAFb;AAGIE,IAAAA,OAAO,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAHb;AAIIG,IAAAA,MAAM,EAAE;AAAEH,MAAAA,SAAS,EAAE;AAAb;AAJZ,GARV;AAeA,sBACI,QAAC,SAAD;AAAA,4BACI;AACI,MAAA,KAAK,EAAE;AACHI,QAAAA,OAAO,EAAE,MADN;AAEHC,QAAAA,mBAAmB,EAAE;AAFlB,OADX;AAAA,gBAMKX,KAAK,CAACY,OAAN,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,UAACC,QAAD,EAAWb,WAAX;AAAA,4BACzB,QAAC,UAAD;AACI,UAAA,EAAE,EAAEA,WAAW,KAAKF,KAAK,CAACE,WAAN,CAAkBC,IAD1C;AAEI,UAAA,OAAO,EAAE,GAFb;AAGI,UAAA,aAAa,MAHjB;AAII,UAAA,YAAY,MAJhB;AAAA,oBAMK,kBAAAa,KAAK;AAAA,gCACF,QAAC,eAAD;AACI,cAAA,QAAQ,EAAED,QADd;AAEI,cAAA,YAAY,EAAEb,WAAW,KAAKF,KAAK,CAACY,OAAN,CAAcC,SAAd,CAAwBI,MAAxB,GAAiC,CAFnE;AAGI,cAAA,aAAa,EAAEjB,KAAK,CAACkB,aAHzB;AAII,cAAA,WAAW,EAAEhB,WAJjB;AAKI,cAAA,iBAAiB,EAAEF,KAAK,CAACmB,iBAL7B;AAMI,cAAA,eAAe,EAAElB,gBAAgB,CAACe,KAAD;AANrC;AAAA;AAAA;AAAA;AAAA,qBADE;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,iBADyB;AAAA,OAA5B;AANL;AAAA;AAAA;AAAA;AAAA,aADJ,eA4BI;AAAO,MAAA,GAAG,EAAEpB,sBAAZ;AAAoC,MAAA,EAAE,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,aA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgCH,CAhDD;;KAAMI,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Container } from \"../Common\";\nimport { startAudioRecordingId, Station } from \"../types\";\nimport recordingStartAudioUrl from \"./media/start.mp3\";\nimport { Transition } from \"react-transition-group\";\nimport QuestionContent from \"./QuestionContent\";\n\ntype QuestionProps = {\n    station: Station;\n    questionIdx: { prev: number; curr: number };\n    updateStation: Dispatch<SetStateAction<Station>>;\n    updateQuestionIdx: Dispatch<SetStateAction<{ curr: number; prev: number }>>;\n};\n\nconst QuestionPage = (props: QuestionProps) => {\n    const transitionStyles: { [key: string]: any } =\n        props.questionIdx.curr < props.questionIdx.prev\n            ? {\n                  entering: { transform: \"translateY(-150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(150%)\" },\n                  exited: { transform: \"translateY(-150%)\" },\n              }\n            : {\n                  entering: { transform: \"translateY(150%)\" },\n                  entered: { transform: \"translateY(0%)\" },\n                  exiting: { transform: \"translateY(-150%)\" },\n                  exited: { transform: \"translateY(150%)\" },\n              };\n\n    return (\n        <Container>\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"1fr\",\n                }}\n            >\n                {props.station.questions.map((question, questionIdx) => (\n                    <Transition\n                        in={questionIdx === props.questionIdx.curr}\n                        timeout={500}\n                        unmountOnExit\n                        mountOnEnter\n                    >\n                        {state => (\n                            <QuestionContent\n                                question={question}\n                                lastQuestion={questionIdx === props.station.questions.length - 1}\n                                updateStation={props.updateStation}\n                                questionIdx={questionIdx}\n                                updateQuestionIdx={props.updateQuestionIdx}\n                                transitionStyle={transitionStyles[state]}\n                            />\n                        )}\n                    </Transition>\n                ))}\n            </div>\n\n            <audio src={recordingStartAudioUrl} id={startAudioRecordingId} />\n        </Container>\n    );\n};\n\nexport default QuestionPage;\n"]},"metadata":{},"sourceType":"module"}