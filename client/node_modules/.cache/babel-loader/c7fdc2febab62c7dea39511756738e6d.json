{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2;\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useToken } from \"./functions\";\nimport { useState } from \"react\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { createBrowserHistory } from \"history\";\nimport styled from \"styled-components\";\nimport MetaContext from \"./MetaContext\";\nimport OSCEPage from \"./components/OSCEPage/OSCEPage\";\nimport ExpiryLoginPage from \"./components/ExpiryLoginPage/ExpiryLoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  var _useToken = useToken(),\n      token = _useToken.token,\n      setToken = _useToken.setToken;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1]; //initialise darkMode\n  // if we're on local host (development) then change url accordingly\n\n\n  var SERVER_URL = \"\";\n  var CLIENT_URL = \"\";\n\n  if (window.location.href.startsWith(\"http://localhost:3000/\")) {\n    SERVER_URL = \"http://localhost:3001\";\n    CLIENT_URL = \"http://localhost:3000\";\n  }\n\n  if (window.location.href.startsWith(\"https://medbakery.co.uk\")) {\n    SERVER_URL = \"https://medbakery.co.uk\";\n    CLIENT_URL = \"https://medbakery.co.uk\";\n  }\n\n  var history = createBrowserHistory();\n  var prevPath = null; // listen and notify Segment of client-side page updates\n\n  history.listen(function (location) {\n    if (location.pathname !== prevPath) {\n      prevPath = location.pathname;\n      window.analytics.page();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    darkMode: darkMode,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(MetaContext.Provider, {\n          value: {\n            darkMode: darkMode,\n            SERVER_URL: SERVER_URL,\n            CLIENT_URL: CLIENT_URL,\n            token: token,\n            setToken: setToken\n          },\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/OSCE\",\n            children: /*#__PURE__*/_jsxDEV(OSCEPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/ExpiryLogin\",\n            children: /*#__PURE__*/_jsxDEV(ExpiryLoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(App, \"IZy2UUaAkFX5WTeCHZbUyJDSa7k=\", false, function () {\n  return [useToken];\n});\n\n_c = App;\nexport default App;\nvar Container = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    color: \", \";\\n    fill: \", \";\\n    font-family: Proxima;\\n\"])), function (props) {\n  return props.darkMode ? \"white\" : \"black\";\n}, function (props) {\n  return props.darkMode ? \"#0072CE\" : \"#C02222\";\n});\n_c2 = Container;\nvar Background = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    background-color: \", \";\\n    background-image: url(\", \");\\n    background-size: 9%;\\n    background-attachment: fixed;\\n    position: fixed;\\n    filter: blur(0px);\\n    color: \", \";\\n    fill: \", \";\\n    font-family: Proxima;\\n    height: 100vh;\\n    width: 100%;\\n    z-index: -1;\\n\"])), function (props) {\n  return props.darkMode ? \"#272727\" : \"#ffffff\";\n}, function (props) {\n  return props.darkMode ? props.backlogodark : props.backlogolight;\n}, function (props) {\n  return props.darkMode ? \"white\" : \"black\";\n}, function (props) {\n  return props.darkMode ? \"#0072CE\" : \"#C02222\";\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/App.tsx"],"names":["BrowserRouter","Router","Route","Switch","useToken","useState","HomePage","createBrowserHistory","styled","MetaContext","OSCEPage","ExpiryLoginPage","App","token","setToken","darkMode","setDarkMode","SERVER_URL","CLIENT_URL","window","location","href","startsWith","history","prevPath","listen","pathname","analytics","page","Container","div","props","Background","backlogodark","backlogolight"],"mappings":";;;;;;;;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AACd,kBAA4BR,QAAQ,EAApC;AAAA,MAAQS,KAAR,aAAQA,KAAR;AAAA,MAAeC,QAAf,aAAeA,QAAf;;AACA,kBAAgCT,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB,iBAFc,CAEkC;AAEhD;;;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,UAArB,CAAgC,wBAAhC,CAAJ,EAA+D;AAC3DL,IAAAA,UAAU,GAAG,uBAAb;AACAC,IAAAA,UAAU,GAAG,uBAAb;AACH;;AAED,MAAIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,UAArB,CAAgC,yBAAhC,CAAJ,EAAgE;AAC5DL,IAAAA,UAAU,GAAG,yBAAb;AACAC,IAAAA,UAAU,GAAG,yBAAb;AACH;;AAED,MAAMK,OAAO,GAAGhB,oBAAoB,EAApC;AAEA,MAAIiB,QAAa,GAAG,IAApB,CApBc,CAsBd;;AACAD,EAAAA,OAAO,CAACE,MAAR,CAAe,UAAAL,QAAQ,EAAI;AACvB,QAAIA,QAAQ,CAACM,QAAT,KAAsBF,QAA1B,EAAoC;AAChCA,MAAAA,QAAQ,GAAGJ,QAAQ,CAACM,QAApB;AACAP,MAAAA,MAAM,CAACQ,SAAP,CAAiBC,IAAjB;AACH;AACJ,GALD;AAOA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEb,QAArB;AAAA,2BAEI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI,QAAC,WAAD,CAAa,QAAb;AACI,UAAA,KAAK,EAAE;AAAEA,YAAAA,QAAQ,EAARA,QAAF;AAAYE,YAAAA,UAAU,EAAVA,UAAZ;AAAwBC,YAAAA,UAAU,EAAVA,UAAxB;AAAoCL,YAAAA,KAAK,EAALA,KAApC;AAA2CC,YAAAA,QAAQ,EAARA;AAA3C,WADX;AAAA,kCAGI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAOI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBAPJ,eAWI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,cAAZ;AAAA,mCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CAtDD;;GAAMF,G;UAC0BR,Q;;;KAD1BQ,G;AAwDN,eAAeA,GAAf;AAEA,IAAMiB,SAAS,GAAGrB,MAAM,CAACsB,GAAV,sIACF,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAAChB,QAAN,GAAiB,OAAjB,GAA2B,OAAhC;AAAA,CADH,EAEH,UAAAgB,KAAK;AAAA,SAAKA,KAAK,CAAChB,QAAN,GAAiB,SAAjB,GAA6B,SAAlC;AAAA,CAFF,CAAf;MAAMc,S;AAMN,IAAMG,UAAU,GAAGxB,MAAM,CAACsB,GAAV,0WACQ,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAAChB,QAAN,GAAiB,SAAjB,GAA6B,SAAlC;AAAA,CADb,EAEY,UAAAgB,KAAK;AAAA,SAAKA,KAAK,CAAChB,QAAN,GAAiBgB,KAAK,CAACE,YAAvB,GAAsCF,KAAK,CAACG,aAAjD;AAAA,CAFjB,EAOH,UAAAH,KAAK;AAAA,SAAKA,KAAK,CAAChB,QAAN,GAAiB,OAAjB,GAA2B,OAAhC;AAAA,CAPF,EAQJ,UAAAgB,KAAK;AAAA,SAAKA,KAAK,CAAChB,QAAN,GAAiB,SAAjB,GAA6B,SAAlC;AAAA,CARD,CAAhB","sourcesContent":["import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useToken } from \"./functions\";\nimport { useState } from \"react\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport { createBrowserHistory } from \"history\";\nimport styled from \"styled-components\";\nimport MetaContext from \"./MetaContext\";\nimport OSCEPage from \"./components/OSCEPage/OSCEPage\";\nimport ExpiryLoginPage from \"./components/ExpiryLoginPage/ExpiryLoginPage\";\n\nconst App = () => {\n    const { token, setToken } = useToken();\n    const [darkMode, setDarkMode] = useState(true); //initialise darkMode\n\n    // if we're on local host (development) then change url accordingly\n    let SERVER_URL = \"\";\n    let CLIENT_URL = \"\";\n\n    if (window.location.href.startsWith(\"http://localhost:3000/\")) {\n        SERVER_URL = \"http://localhost:3001\";\n        CLIENT_URL = \"http://localhost:3000\";\n    }\n\n    if (window.location.href.startsWith(\"https://medbakery.co.uk\")) {\n        SERVER_URL = \"https://medbakery.co.uk\";\n        CLIENT_URL = \"https://medbakery.co.uk\";\n    }\n\n    const history = createBrowserHistory();\n\n    let prevPath: any = null;\n\n    // listen and notify Segment of client-side page updates\n    history.listen(location => {\n        if (location.pathname !== prevPath) {\n            prevPath = location.pathname;\n            window.analytics.page();\n        }\n    });\n\n    return (\n        <Container darkMode={darkMode}>\n            {/* <Background darkMode = { darkMode } backlogodark = { backlogodark } backlogolight = { backlogolight }> </Background> */}\n            <Router>\n                <Switch>\n                    <MetaContext.Provider\n                        value={{ darkMode, SERVER_URL, CLIENT_URL, token, setToken }}\n                    >\n                        <Route exact path=\"/\">\n                            <HomePage />\n                        </Route>\n\n                        <Route path=\"/OSCE\">\n                            <OSCEPage />\n                        </Route>\n\n                        <Route path=\"/ExpiryLogin\">\n                            <ExpiryLoginPage />\n                        </Route>\n                    </MetaContext.Provider>\n                </Switch>\n            </Router>\n        </Container>\n    );\n};\n\nexport default App;\n\nconst Container = styled.div<{ darkMode: boolean }>`\n    color: ${props => (props.darkMode ? \"white\" : \"black\")};\n    fill: ${props => (props.darkMode ? \"#0072CE\" : \"#C02222\")};\n    font-family: Proxima;\n`;\n\nconst Background = styled.div<{ darkMode: boolean; backlogodark: string; backlogolight: string }>`\n    background-color: ${props => (props.darkMode ? \"#272727\" : \"#ffffff\")};\n    background-image: url(${props => (props.darkMode ? props.backlogodark : props.backlogolight)});\n    background-size: 9%;\n    background-attachment: fixed;\n    position: fixed;\n    filter: blur(0px);\n    color: ${props => (props.darkMode ? \"white\" : \"black\")};\n    fill: ${props => (props.darkMode ? \"#0072CE\" : \"#C02222\")};\n    font-family: Proxima;\n    height: 100vh;\n    width: 100%;\n    z-index: -1;\n`;\n"]},"metadata":{},"sourceType":"module"}