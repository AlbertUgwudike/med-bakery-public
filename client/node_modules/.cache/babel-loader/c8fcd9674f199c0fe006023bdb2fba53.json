{"ast":null,"code":"import _defineProperty from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nvar ONGOING_REQUESTS = new WeakMap();\n\nvar createOrGetOngoingRequests = function createOrGetOngoingRequests(sender) {\n  if (ONGOING_REQUESTS.has(sender)) {\n    // @todo TypeScript needs to be convinced that has() works as expected.\n    return ONGOING_REQUESTS.get(sender);\n  }\n\n  var ongoingRequests = new Map();\n  ONGOING_REQUESTS.set(sender, ongoingRequests);\n  return ongoingRequests;\n};\n\nexport var createBroker = function createBroker(brokerImplementation) {\n  var fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n  return function (sender) {\n    var ongoingRequests = createOrGetOngoingRequests(sender);\n    sender.addEventListener('message', function (_ref) {\n      var message = _ref.data;\n      var id = message.id;\n\n      if (id !== null && ongoingRequests.has(id)) {\n        var _ongoingRequests$get = ongoingRequests.get(id),\n            reject = _ongoingRequests$get.reject,\n            resolve = _ongoingRequests$get.resolve;\n\n        ongoingRequests.delete(id);\n\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    });\n\n    if (isMessagePort(sender)) {\n      sender.start();\n    }\n\n    var call = function call(method) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return new Promise(function (resolve, reject) {\n        var id = generateUniqueNumber(ongoingRequests);\n        ongoingRequests.set(id, {\n          reject: reject,\n          resolve: resolve\n        });\n\n        if (params === null) {\n          sender.postMessage({\n            id: id,\n            method: method\n          }, transferables);\n        } else {\n          sender.postMessage({\n            id: id,\n            method: method,\n            params: params\n          }, transferables);\n        }\n      });\n    };\n\n    var notify = function notify(method, params) {\n      var transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      sender.postMessage({\n        id: null,\n        method: method,\n        params: params\n      }, transferables);\n    };\n\n    var functions = {};\n\n    for (var _i = 0, _Object$entries = Object.entries(fullBrokerImplementation); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          handler = _Object$entries$_i[1];\n\n      functions = _objectSpread(_objectSpread({}, functions), {}, _defineProperty({}, key, handler({\n        call: call,\n        notify: notify\n      })));\n    }\n\n    return _objectSpread({}, functions);\n  };\n};","map":null,"metadata":{},"sourceType":"module"}