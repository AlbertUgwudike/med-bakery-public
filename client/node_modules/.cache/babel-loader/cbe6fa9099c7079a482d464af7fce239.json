{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport AlphaHeader from \"./AlphaHeader\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar StationPage = function StationPage(props) {\n  _s();\n\n  var location = useLocation();\n  if (props.station.id === \"NullStation\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/OSCE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 52\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AlphaHeader, {\n      station: props.station,\n      updateStation: props.updateStation,\n      timedHeader: true,\n      percentage: 50,\n      briefPrompt: \"\",\n      title: \"station\",\n      handleExit: props.handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"page\",\n        timeout: 2000,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/OSCE/Station\",\n            children: /*#__PURE__*/_jsxDEV(Brief, {\n              station: props.station,\n              updateStation: props.updateStation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, _this), props.station.questions.map(function (_, questionIdx) {\n            return /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/OSCE/Station/\" + questionIdx,\n              children: /*#__PURE__*/_jsxDEV(QuestionPage, {\n                station: props.station,\n                updateStation: props.updateStation,\n                questionIdx: questionIdx,\n                handleExit: props.handleExit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, _this)\n            }, questionIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/OSCE/Station/Summary\",\n            children: /*#__PURE__*/_jsxDEV(Summary, {\n              station: props.station,\n              updateStation: props.updateStation,\n              handleExit: props.handleExit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, _this), props.station.questions.map(function (_, questionIdx) {\n            return /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/OSCE/Station/Review\" + questionIdx,\n              children: /*#__PURE__*/_jsxDEV(QuestionReviewPage, {\n                station: props.station,\n                updateStation: props.updateStation,\n                questionIdx: questionIdx,\n                handleExit: props.handleExit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, _this)\n            }, props.station.questions[questionIdx].question, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/OSCE/Station/MarkReview\",\n            children: /*#__PURE__*/_jsxDEV(MarkReviewPage, {\n              station: props.station,\n              updateStation: props.updateStation,\n              reviewMode: props.reviewMode,\n              handleExit: props.handleExit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this)\n      }, location.pathname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(StationPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = StationPage;\nexport default StationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/StationPage.tsx"],"names":["Redirect","Route","Switch","useLocation","TransitionGroup","CSSTransition","AlphaHeader","Brief","MarkReviewPage","QuestionPage","QuestionReviewPage","Summary","StationPage","props","location","station","id","updateStation","handleExit","questions","map","_","questionIdx","question","reviewMode","pathname"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport AlphaHeader from \"./AlphaHeader\";\nimport Brief from \"./Brief\";\nimport MarkReviewPage from \"./MarkReviewPage\";\nimport QuestionPage from \"./QuestionPage\";\nimport QuestionReviewPage from \"./QuestionReviewPage\";\nimport Summary from \"./Summary\";\nimport { AnsweredStationDetails, Question, Station } from \"./types\";\n\ntype StationPageProps = {\n    station: Station;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    answeredStations: AnsweredStationDetails[];\n    reviewMode: boolean;\n    handleExit: (questions: Question[], tok: string) => void;\n};\n\nconst StationPage = (props: StationPageProps) => {\n    const location = useLocation();\n\n    if (props.station.id === \"NullStation\") return <Redirect to=\"/OSCE\" />;\n\n    return (\n        <>\n            <AlphaHeader\n                station={props.station}\n                updateStation={props.updateStation}\n                timedHeader={true}\n                percentage={50}\n                briefPrompt={\"\"}\n                title=\"station\"\n                handleExit={props.handleExit}\n            />\n\n            <TransitionGroup>\n                <CSSTransition key={location.pathname} classNames=\"page\" timeout={2000}>\n                    <Switch>\n                        <Route exact path=\"/OSCE/Station\">\n                            <Brief station={props.station} updateStation={props.updateStation} />\n                        </Route>\n\n                        {props.station.questions.map((_, questionIdx) => (\n                            <Route exact path={\"/OSCE/Station/\" + questionIdx} key={questionIdx}>\n                                <QuestionPage\n                                    station={props.station}\n                                    updateStation={props.updateStation}\n                                    questionIdx={questionIdx}\n                                    handleExit={props.handleExit}\n                                />\n                            </Route>\n                        ))}\n\n                        <Route exact path=\"/OSCE/Station/Summary\">\n                            <Summary\n                                station={props.station}\n                                updateStation={props.updateStation}\n                                handleExit={props.handleExit}\n                            />\n                        </Route>\n\n                        {props.station.questions.map((_, questionIdx) => (\n                            <Route\n                                exact\n                                path={\"/OSCE/Station/Review\" + questionIdx}\n                                key={props.station.questions[questionIdx].question}\n                            >\n                                <QuestionReviewPage\n                                    station={props.station}\n                                    updateStation={props.updateStation}\n                                    questionIdx={questionIdx}\n                                    handleExit={props.handleExit}\n                                />\n                            </Route>\n                        ))}\n\n                        <Route exact path=\"/OSCE/Station/MarkReview\">\n                            <MarkReviewPage\n                                station={props.station}\n                                updateStation={props.updateStation}\n                                reviewMode={props.reviewMode}\n                                handleExit={props.handleExit}\n                            />\n                        </Route>\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        </>\n    );\n};\n\nexport default StationPage;\n"]},"metadata":{},"sourceType":"module"}