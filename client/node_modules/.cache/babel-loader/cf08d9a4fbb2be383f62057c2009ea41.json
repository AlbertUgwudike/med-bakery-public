{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useEffect } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { generateWaveSurfer } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TaskSection = function TaskSection(props) {\n  _s();\n\n  var _props$responseWaveSu2;\n\n  useEffect(function () {\n    var container = document.getElementById(\"waveform\" + props.questionIdx);\n    if (container) container.innerHTML = \"\";\n    props.updateResponseWaveSurfer(generateWaveSurfer(\"waveform\" + props.questionIdx, props.responseAudio));\n  }, [props.responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: !props.responseAudio ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        style: {\n          margin: \"10px 0\",\n          width: \"10%\",\n          backgroundColor: \"#242528\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Panel, {\n        style: {\n          margin: \"10px 0\",\n          width: \"87%\",\n          backgroundColor: \"#242528\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"waveform\" + props.questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        onClick: function onClick() {\n          var _props$responseWaveSu;\n\n          return ((_props$responseWaveSu = props.responseWaveSurfer) === null || _props$responseWaveSu === void 0 ? void 0 : _props$responseWaveSu.isPlaying()) ? props.stopEverything() : props.playResponse();\n        },\n        style: {\n          margin: \"10px 0\",\n          width: \"10%\"\n        },\n        children: ((_props$responseWaveSu2 = props.responseWaveSurfer) === null || _props$responseWaveSu2 === void 0 ? void 0 : _props$responseWaveSu2.isPlaying()) ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 66\n        }, _this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 80\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Panel, {\n        style: {\n          margin: \"10px 0\",\n          width: \"87%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"waveform\" + props.questionIdx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TaskSection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TaskSection;\nexport default TaskSection;\nvar Panel = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: #303237;\\n    padding: 0 10px;\\n    border-radius: 10px;\\n\"])));\n_c2 = Panel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskSection\");\n$RefreshReg$(_c2, \"Panel\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/WaveSurfer.tsx"],"names":["useEffect","FaPause","FaPlay","styled","generateWaveSurfer","TaskSection","props","container","document","getElementById","questionIdx","innerHTML","updateResponseWaveSurfer","responseAudio","display","justifyContent","margin","width","backgroundColor","responseWaveSurfer","isPlaying","stopEverything","playResponse","Panel","div"],"mappings":";;;;;;;AAAA,SAAqDA,SAArD,QAAsE,OAAtE;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,UAAnC;;;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAAA;;AAAA;;AAC7CN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMO,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAaH,KAAK,CAACI,WAA3C,CAAlB;AACA,QAAIH,SAAJ,EAAeA,SAAS,CAACI,SAAV,GAAsB,EAAtB;AAEfL,IAAAA,KAAK,CAACM,wBAAN,CACIR,kBAAkB,CAAC,aAAaE,KAAK,CAACI,WAApB,EAAiCJ,KAAK,CAACO,aAAvC,CADtB;AAGH,GAPQ,EAON,CAACP,KAAK,CAACO,aAAP,CAPM,CAAT;AASA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA,cACK,CAACT,KAAK,CAACO,aAAP,gBACG;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE,KAA3B;AAAkCC,UAAAA,eAAe,EAAE;AAAnD;AADX;AAAA;AAAA;AAAA;AAAA,eADJ,eAII,QAAC,KAAD;AACI,QAAA,KAAK,EAAE;AACHF,UAAAA,MAAM,EAAE,QADL;AAEHC,UAAAA,KAAK,EAAE,KAFJ;AAGHC,UAAAA,eAAe,EAAE;AAHd,SADX;AAAA,+BAOI;AAAK,UAAA,EAAE,EAAE,aAAaZ,KAAK,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA,oBADH,gBAgBG;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,OAAO,EAAE;AAAA;;AAAA,iBACL,0BAAAJ,KAAK,CAACa,kBAAN,gFAA0BC,SAA1B,MACMd,KAAK,CAACe,cAAN,EADN,GAEMf,KAAK,CAACgB,YAAN,EAHD;AAAA,SADb;AAMI,QAAA,KAAK,EAAE;AAAEN,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SANX;AAAA,kBAQK,2BAAAX,KAAK,CAACa,kBAAN,kFAA0BC,SAA1B,mBAAwC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,iBAAxC,gBAAsD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAR3D;AAAA;AAAA;AAAA;AAAA,eADJ,eAWI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEJ,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SAAd;AAAA,+BACI;AAAK,UAAA,EAAE,EAAE,aAAaX,KAAK,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAXJ;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,WADJ;AAoCH,CA9CD;;GAAML,W;;KAAAA,W;AAgDN,eAAeA,WAAf;AAEA,IAAMkB,KAAK,GAAGpB,MAAM,CAACqB,GAAV,uJAAX;MAAMD,K","sourcesContent":["import { Dispatch, MutableRefObject, SetStateAction, useEffect } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { generateWaveSurfer } from \"../hooks\";\n\ntype TaskSectionProps = {\n    responseWaveSurfer: WaveSurfer | undefined;\n    playResponse: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    questionIdx: number;\n    updateResponseWaveSurfer: Dispatch<SetStateAction<WaveSurfer | undefined>>;\n};\n\nconst TaskSection = (props: TaskSectionProps) => {\n    useEffect(() => {\n        const container = document.getElementById(\"waveform\" + props.questionIdx);\n        if (container) container.innerHTML = \"\";\n\n        props.updateResponseWaveSurfer(\n            generateWaveSurfer(\"waveform\" + props.questionIdx, props.responseAudio)\n        );\n    }, [props.responseAudio]);\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {!props.responseAudio ? (\n                <>\n                    <Panel\n                        style={{ margin: \"10px 0\", width: \"10%\", backgroundColor: \"#242528\" }}\n                    ></Panel>\n                    <Panel\n                        style={{\n                            margin: \"10px 0\",\n                            width: \"87%\",\n                            backgroundColor: \"#242528\",\n                        }}\n                    >\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            ) : (\n                <>\n                    <Panel\n                        onClick={() =>\n                            props.responseWaveSurfer?.isPlaying()\n                                ? props.stopEverything()\n                                : props.playResponse()\n                        }\n                        style={{ margin: \"10px 0\", width: \"10%\" }}\n                    >\n                        {props.responseWaveSurfer?.isPlaying() ? <FaPause /> : <FaPlay />}\n                    </Panel>\n                    <Panel style={{ margin: \"10px 0\", width: \"87%\" }}>\n                        <div id={\"waveform\" + props.questionIdx}></div>\n                    </Panel>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default TaskSection;\n\nconst Panel = styled.div`\n    background-color: #303237;\n    padding: 0 10px;\n    border-radius: 10px;\n`;\n"]},"metadata":{},"sourceType":"module"}