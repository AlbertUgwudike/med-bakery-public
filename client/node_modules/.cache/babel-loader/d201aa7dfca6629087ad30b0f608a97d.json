{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGAnsweredOptions.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport MetaContext from '../../MetaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ECGAnsweredOptions = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    darkMode: darkMode,\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: props.section.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"150px\",\n        overflow: \"scroll\"\n      },\n      children: props.section.options.map(option => {\n        let backgroundColor = darkMode ? \"grey\" : \"#FBE9EE\";\n        if (option === props.section.correct) backgroundColor = \"#1C725C\";else if (option === props.section.selected) backgroundColor = \"#A94D53\";\n        return /*#__PURE__*/_jsxDEV(Option, {\n          style: {\n            backgroundColor,\n            color: ![\"grey\", \"#FBE9EE\"].includes(backgroundColor) ? \"white\" : \"black\"\n          },\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ECGAnsweredOptions, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = ECGAnsweredOptions;\nexport default ECGAnsweredOptions;\nconst Panel = styled.div`\n    display: inline-block;\n    background-color: ${props => props.darkMode ? \"#1f1f1f\" : \"#f6f5f0\"};\n    border: 2.5px solid ${props => props.darkMode ? \"#838383\" : \"white\"};\n    box-shadow: ${props => props.darkMode ? \"0px 0px 10px black\" : \"0px 0px 5px gray\"};\n    border-radius: 5px;\n    padding: 10px; \n    margin: 10px;\n    width: 250px;\n    height: 250px;\n`;\n_c2 = Panel;\nconst Title = styled.div`\n    font: 30px Champion;\n    text-align: center;\n    padding: 20px;\n`;\n_c3 = Title;\nconst Option = styled.div`\n    border-style: none;\n    border-radius: 5px;\n    margin: 10px 0px;\n    width: 100%;\n`;\n_c4 = Option;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ECGAnsweredOptions\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Option\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGAnsweredOptions.tsx"],"names":["useContext","styled","MetaContext","ECGAnsweredOptions","props","darkMode","section","label","height","overflow","options","map","option","backgroundColor","correct","selected","color","includes","Panel","div","Title","Option"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AASA,MAAMC,kBAAkB,GAAIC,KAAD,IAA2B;AAAA;;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACE,WAAD,CAA/B;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,QAAQ,EAAKG,QAApB;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAKA,QAApB;AAAA,gBAAiCD,KAAK,CAACE,OAAN,CAAcC;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAI;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAd;AAAA,gBAEIL,KAAK,CAACE,OAAN,CAAcI,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,IAAI;AAEhC,YAAIC,eAAe,GAAGR,QAAQ,GAAG,MAAH,GAAY,SAA1C;AACA,YAAIO,MAAM,KAAKR,KAAK,CAACE,OAAN,CAAcQ,OAA7B,EAAsCD,eAAe,GAAG,SAAlB,CAAtC,KACK,IAAID,MAAM,KAAKR,KAAK,CAACE,OAAN,CAAcS,QAA7B,EAAuCF,eAAe,GAAG,SAAlB;AAE5C,4BACI,QAAC,MAAD;AACI,UAAA,KAAK,EAAI;AAAEA,YAAAA,eAAF;AAAmBG,YAAAA,KAAK,EAAE,CAAC,CAAC,MAAD,EAAS,SAAT,EAAoBC,QAApB,CAA6BJ,eAA7B,CAAD,GAAiD,OAAjD,GAA2D;AAArF,WADb;AAAA,oBAGMD;AAHN;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OAbD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA1BD;;GAAMT,kB;;KAAAA,kB;AA4BN,eAAeA,kBAAf;AAEA,MAAMe,KAAK,GAAGjB,MAAM,CAACkB,GAA2B;AAChD;AACA,wBAAyBf,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,SAAW;AAC1E,0BAA2BD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,OAAS;AAC1E,kBAAmBD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,oBAAjB,GAAwC,kBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMa,K;AAYN,MAAME,KAAK,GAAGnB,MAAM,CAACkB,GAA2B;AAChD;AACA;AACA;AACA,CAJA;MAAMC,K;AAMN,MAAMC,MAAM,GAAGpB,MAAM,CAACkB,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;MAAME,M","sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport MetaContext from '../../MetaContext';\n\ntype OptionSection = { label: string, selected: string, correct: string, options: string[] };\n\ntype ECGOptionProps = {\n    handleOptionChange: (label: string, selected: string) => void;\n    section: OptionSection;\n}\n\nconst ECGAnsweredOptions = (props: ECGOptionProps) => {\n    const { darkMode } = useContext(MetaContext);\n\n    return (\n        <Panel darkMode = { darkMode }>\n            <Title darkMode = { darkMode }>{ props.section.label }</Title>\n            <div style = {{ height: \"150px\", overflow: \"scroll\" }}>\n            { \n                props.section.options.map(option => {\n\n                    let backgroundColor = darkMode ? \"grey\" : \"#FBE9EE\";\n                    if (option === props.section.correct) backgroundColor = \"#1C725C\";\n                    else if (option === props.section.selected) backgroundColor = \"#A94D53\";\n\n                    return(\n                        <Option \n                            style = {{ backgroundColor, color: ![\"grey\", \"#FBE9EE\"].includes(backgroundColor) ? \"white\" : \"black\" }} \n                        >\n                            { option }\n                        </Option>\n                    )\n                }) \n            }\n            </div>\n        </Panel>\n    );\n}\n\nexport default ECGAnsweredOptions;\n\nconst Panel = styled.div<{ darkMode: boolean }>`\n    display: inline-block;\n    background-color: ${ props => props.darkMode ? \"#1f1f1f\" : \"#f6f5f0\" };\n    border: 2.5px solid ${ props => props.darkMode ? \"#838383\" : \"white\" };\n    box-shadow: ${ props => props.darkMode ? \"0px 0px 10px black\" : \"0px 0px 5px gray\" };\n    border-radius: 5px;\n    padding: 10px; \n    margin: 10px;\n    width: 250px;\n    height: 250px;\n`\n\nconst Title = styled.div<{ darkMode: boolean }>`\n    font: 30px Champion;\n    text-align: center;\n    padding: 20px;\n`\n\nconst Option = styled.div`\n    border-style: none;\n    border-radius: 5px;\n    margin: 10px 0px;\n    width: 100%;\n`"]},"metadata":{},"sourceType":"module"}