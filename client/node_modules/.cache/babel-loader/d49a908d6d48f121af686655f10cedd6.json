{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ECGSummary from \"./ECGSummary\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ECGSession from \"./ECGSession\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ECGPage = props => {\n  _s();\n\n  const {\n    token,\n    SERVER_URL\n  } = useContext(MetaContext);\n  const [topics, updateTopics] = useState([]);\n  useEffect(() => {\n    axios.post(SERVER_URL + \"/ecgs/topics\", {\n      token\n    }).then(res => {\n      updateTopics(res.data);\n    });\n  }, []);\n\n  const finishEcgSession = () => {\n    console.log(\"topics to be sent\", topics);\n    window.analytics.track({\n      userId: \"\",\n      event: \"ECG session finished\"\n    });\n    axios.post(SERVER_URL + \"/ecgs/finishsession\", {\n      token,\n      topics\n    }).then(res => {\n      console.log(\"scores updated\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/User/ECG\",\n      children: /*#__PURE__*/_jsxDEV(ECGSummary, {\n        topics: topics,\n        updateTopics: updateTopics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/User/ECG/Session\",\n      children: topics.length > 0 ? /*#__PURE__*/_jsxDEV(ECGSession, {\n        topics: topics.filter(topic => topic.selected),\n        finishEcgSession: finishEcgSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/User/ECG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ECGPage, \"FxE+TLPxT2xuzqEHmyGuvIGwr7Y=\");\n\n_c = ECGPage;\nexport default ECGPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ECGPage\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/ECGPage/ECGPage.tsx"],"names":["Switch","Route","Redirect","ECGSummary","useContext","useEffect","useState","axios","ECGSession","MetaContext","ECGPage","props","token","SERVER_URL","topics","updateTopics","post","then","res","data","finishEcgSession","console","log","window","analytics","track","userId","event","length","filter","topic","selected"],"mappings":";;;AACA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAyB;AAAA;;AACrC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBT,UAAU,CAACK,WAAD,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,YAAT,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACS,IAAN,CAAWH,UAAU,GAAG,cAAxB,EAAwC;AAAED,MAAAA;AAAF,KAAxC,EACMK,IADN,CACWC,GAAG,IAAI;AACTH,MAAAA,YAAY,CAACG,GAAG,CAACC,IAAL,CAAZ;AACH,KAHN;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAE3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCR,MAAjC;AACAS,IAAAA,MAAM,CAACC,SAAP,CAAiBC,KAAjB,CAAuB;AACnBC,MAAAA,MAAM,EAAE,EADW;AAEnBC,MAAAA,KAAK,EAAE;AAFY,KAAvB;AAIApB,IAAAA,KAAK,CAACS,IAAN,CAAWH,UAAU,GAAG,qBAAxB,EAA+C;AAAED,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA/C,EACMG,IADN,CACWC,GAAG,IAAI;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,KAHN;AAIH,GAXD;;AAaA,sBACI,QAAC,MAAD;AAAA,4BAEI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,WAApB;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,MAAM,EAAKR,MADf;AAEI,QAAA,YAAY,EAAKC;AAFrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,mBAAd;AAAA,gBAEQD,MAAM,CAACc,MAAP,GAAgB,CAAhB,gBACQ,QAAC,UAAD;AACI,QAAA,MAAM,EAAKd,MAAM,CAACe,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,QAA7B,CADf;AAEI,QAAA,gBAAgB,EAAKX;AAFzB;AAAA;AAAA;AAAA;AAAA,cADR,gBAKQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA;AAPhB;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA/CD;;GAAMV,O;;KAAAA,O;AAiDN,eAAeA,OAAf","sourcesContent":["import { EcgTopic } from \"./Generator/ECGTypes\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ECGSummary from \"./ECGSummary\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ECGSession from \"./ECGSession\";\nimport MetaContext from \"../../MetaContext\";\n\ntype ECGPageProps = {}\n\nconst ECGPage = (props: ECGPageProps) => {\n    const { token, SERVER_URL } = useContext(MetaContext);\n    const [topics, updateTopics] = useState([] as EcgTopic[])\n\n    useEffect(() => {\n        axios.post(SERVER_URL + \"/ecgs/topics\", { token })\n             .then(res => {\n                 updateTopics(res.data)\n             });\n    }, [])\n\n    const finishEcgSession = () => {\n\n        console.log(\"topics to be sent\", topics);\n        window.analytics.track({\n            userId: \"\",\n            event: \"ECG session finished\"\n        })\n        axios.post(SERVER_URL + \"/ecgs/finishsession\", { token, topics })\n             .then(res => {\n                 console.log(\"scores updated\")\n             });\n    }\n\n    return (\n        <Switch>\n\n            <Route exact path = \"/User/ECG\"> \n                <ECGSummary \n                    topics = { topics }\n                    updateTopics = { updateTopics }\n                />\n            </Route>\n\n            <Route path = \"/User/ECG/Session\">\n                { \n                    topics.length > 0 \n                        ?   <ECGSession \n                                topics = { topics.filter(topic => topic.selected) }\n                                finishEcgSession = { finishEcgSession }\n                            />\n                        :   <Redirect to = \"/User/ECG\" />\n                }\n            </Route>\n\n        </Switch>\n    );\n}\n\nexport default ECGPage;"]},"metadata":{},"sourceType":"module"}