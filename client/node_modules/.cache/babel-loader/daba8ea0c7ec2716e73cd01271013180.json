{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import styled from\"styled-components\";import{Link}from\"react-router-dom\";import{FaTimes}from\"react-icons/fa\";import{useContext}from\"react\";import MetaContext from\"../../MetaContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QuestionPage=function QuestionPage(props){console.log(props.question);var _useContext=useContext(MetaContext),SERVER_URL=_useContext.SERVER_URL,token=_useContext.token;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/DataInterpretation\",children:/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",top:5,left:10},children:/*#__PURE__*/_jsx(FaTimes,{})})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(QuestionText,{children:props.question.task}),/*#__PURE__*/_jsx(Content,{children:/*#__PURE__*/_jsx(Img,{src:SERVER_URL+\"/media/interp/\"+props.question.image})}),/*#__PURE__*/_jsx(Link,{to:\"/DataInterpretation/Answer\",children:/*#__PURE__*/_jsx(ShowAnswer,{children:\"Show Answer\"})})]})]});};export default QuestionPage;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    margin: 50px auto;\\n    max-width: 800px;\\n\"])));var QuestionText=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    background-color: #2f3237;\\n    border-radius: 2px;\\n    padding: 10px;\\n\"])));var Content=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    background-color: #2f3237;\\n    width: 100%;\\n    margin: 25px 0px;\\n    padding: 25px;\\n    border-radius: 2px;\\n\"])));var Img=styled.img(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    width: 200px;\\n\"])));var ShowAnswer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    background-color: #ffb000;\\n    color: black;\\n    border-radius: 2px;\\n    padding: 10px;\\n    font-size: 20px;\\n    cursor: pointer;\\n\"])));","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/DataInterpPage/TaskPage.tsx"],"names":["styled","Link","FaTimes","useContext","MetaContext","QuestionPage","props","console","log","question","SERVER_URL","token","position","top","left","task","image","Container","div","QuestionText","Content","Img","img","ShowAnswer"],"mappings":"yOAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CAGA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAAmCC,UAAnC,KAA0E,OAA1E,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,C,6IAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAA8B,CAC/CC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB,EACA,gBAA8BN,UAAU,CAACC,WAAD,CAAxC,CAAQM,UAAR,aAAQA,UAAR,CAAoBC,KAApB,aAAoBA,KAApB,CACA,mBACI,wCACI,KAAC,IAAD,EAAM,EAAE,CAAG,qBAAX,uBACI,YAAK,KAAK,CAAI,CAAEC,QAAQ,CAAE,UAAZ,CAAwBC,GAAG,CAAE,CAA7B,CAAgCC,IAAI,CAAE,EAAtC,CAAd,uBAA0D,KAAC,OAAD,IAA1D,EADJ,EADJ,cAII,MAAC,SAAD,yBACI,KAAC,YAAD,WAAeR,KAAK,CAACG,QAAN,CAAeM,IAA9B,EADJ,cAEI,KAAC,OAAD,wBAAS,KAAC,GAAD,EAAK,GAAG,CAAIL,UAAU,CAAG,gBAAb,CAAgCJ,KAAK,CAACG,QAAN,CAAeO,KAA3D,EAAT,EAFJ,cAGI,KAAC,IAAD,EAAM,EAAE,CAAG,4BAAX,uBAAwC,KAAC,UAAD,0BAAxC,EAHJ,GAJJ,GADJ,CAaH,CAhBD,CAkBA,cAAeX,CAAAA,YAAf,CAEA,GAAMY,CAAAA,SAAS,CAAGjB,MAAM,CAACkB,GAAV,2IAAf,CAMA,GAAMC,CAAAA,YAAY,CAAGnB,MAAM,CAACkB,GAAV,kJAAlB,CAMA,GAAME,CAAAA,OAAO,CAAGpB,MAAM,CAACkB,GAAV,2LAAb,CAQA,GAAMG,CAAAA,GAAG,CAAGrB,MAAM,CAACsB,GAAV,wFAAT,CAIA,GAAMC,CAAAA,UAAU,CAAGvB,MAAM,CAACkB,GAAV,iNAAhB","sourcesContent":["import styled from \"styled-components\";\nimport { DataInterpQuestion } from \"./types\";\nimport pneumo from \"./Pneumothorax.png\";\nimport { Link } from \"react-router-dom\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport MetaContext from \"../../MetaContext\";\n\n\ntype QuestionPageProps = {\n    question: DataInterpQuestion;\n};\n\nconst QuestionPage = (props: QuestionPageProps) => {\n    console.log(props.question)\n    const { SERVER_URL, token } = useContext(MetaContext);\n    return (\n        <>\n            <Link to = \"/DataInterpretation\" >\n                <div style = {{ position: \"absolute\", top: 5, left: 10 }}><FaTimes /></div>\n            </Link>\n            <Container>\n                <QuestionText>{props.question.task}</QuestionText>\n                <Content><Img src = {SERVER_URL + \"/media/interp/\" + props.question.image} /></Content>\n                <Link to = \"/DataInterpretation/Answer\"><ShowAnswer>Show Answer</ShowAnswer></Link>\n                \n            </Container>\n        </>\n    );\n};\n\nexport default QuestionPage;\n\nconst Container = styled.div`\n    text-align: center;\n    margin: 50px auto;\n    max-width: 800px;\n`\n\nconst QuestionText = styled.div`\n    background-color: #2f3237;\n    border-radius: 2px;\n    padding: 10px;\n`\n\nconst Content = styled.div`\n    background-color: #2f3237;\n    width: 100%;\n    margin: 25px 0px;\n    padding: 25px;\n    border-radius: 2px;\n`\n\nconst Img = styled.img`\n    width: 200px;\n`\n\nconst ShowAnswer = styled.div`\n    background-color: #ffb000;\n    color: black;\n    border-radius: 2px;\n    padding: 10px;\n    font-size: 20px;\n    cursor: pointer;\n`\n"]},"metadata":{},"sourceType":"module"}