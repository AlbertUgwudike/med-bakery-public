{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/TextBookPage/TopicSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TopicSelector = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n\n  const renderSelector = topic => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/User/Finals/TextBook/Subject\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        darkMode: darkMode,\n        onClick: () => props.updateCurrentTopic(topic),\n        children: topic.topicTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: darkMode ? \"#FAD000\" : \"#7babff\"\n        },\n        children: \" Finals \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), \" Questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      darkMode: darkMode,\n      children: \"Choose Your Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\" \", props.topics.map(renderSelector), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TopicSelector, \"PnQ/ys69gTWC7ND+ZGDKVPZ9Xno=\");\n\n_c = TopicSelector;\nexport default TopicSelector;\nconst Button = styled.button`\n    display: block;\n    width: 100%;\n    max-width: 500px;\n    border-style: none;\n    border-radius: 10px;\n    text-align: left;\n    padding: 5px;\n    padding-left: 40px;\n    margin: 10px auto;\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    background-color: ${props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    &:hover {\n        background-color: ${props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\"}; \n    }\n`;\n_c2 = Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopicSelector\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/TextBookPage/TopicSelector.tsx"],"names":["Link","styled","Title","Subtitle","useContext","MetaContext","TopicSelector","props","darkMode","renderSelector","topic","updateCurrentTopic","topicTitle","color","textAlign","topics","map","Button","button"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAA+B;AAAA;;AAEjD,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,UAAU,CAACC,WAAD,CAA/B;;AAEA,QAAMI,cAAc,GAAIC,KAAD,IAA0B;AAC7C,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,+BAAX;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAKF,QAArB;AAAgC,QAAA,OAAO,EAAK,MAAMD,KAAK,CAACI,kBAAN,CAAyBD,KAAzB,CAAlD;AAAA,kBACMA,KAAK,CAACE;AADZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD;;AAUA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAKJ,QAApB;AAAA,8BACI;AAAM,QAAA,KAAK,EAAI;AAAEK,UAAAA,KAAK,EAAGL,QAAQ,GAAG,SAAH,GAAe;AAAjC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAKA,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI;AAAK,MAAA,KAAK,EAAI;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAd;AAAA,sBAA2CP,KAAK,CAACQ,MAAN,CAAaC,GAAb,CAAiBP,cAAjB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH,CAzBD;;GAAMH,a;;KAAAA,a;AA2BN,eAAeA,aAAf;AAEA,MAAMW,MAAM,GAAGhB,MAAM,CAACiB,MAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAcX,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,OAAjB,GAA2B,OAAS;AAC3D,wBAAyBD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,WAAjB,GAA+B,WAAc;AAC/E;AACA,4BAA6BD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,yBAAjB,GAA6C,SAAW;AAC9F;AACA,CAfA;MAAMS,M","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { TextBookTopic } from \"../../types\";\nimport styled from \"styled-components\";\nimport { Container } from \"../General/Container\";\nimport BackButton from \"../General/BackButton\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport { useContext } from \"react\";\nimport MetaContext from \"../../MetaContext\";\n\ntype TopicSelectorProps = {\n    topics: TextBookTopic[];\n    updateCurrentTopic: React.Dispatch<React.SetStateAction<TextBookTopic>>;\n}\n\nconst TopicSelector = (props: TopicSelectorProps) => {\n\n    const { darkMode } = useContext(MetaContext);\n\n    const renderSelector = (topic: TextBookTopic) => {\n        return (\n            <Link to = \"/User/Finals/TextBook/Subject\" >\n                <Button darkMode = { darkMode } onClick = { () => props.updateCurrentTopic(topic) }>\n                    { topic.topicTitle }\n                </Button>\n            </Link>\n        )\n    }\n\n    return (\n        <>\n            <Title darkMode = { darkMode }>\n                <span style = {{ color: (darkMode ? \"#FAD000\" : \"#7babff\") }}> Finals </span> Questions\n            </Title>\n\n            <Subtitle darkMode = { darkMode }>Choose Your Subject</Subtitle>\n\n            <div style = {{ textAlign: \"center\" }} > { props.topics.map(renderSelector) } </div>\n        </>\n    )\n}\n\nexport default TopicSelector;\n\nconst Button = styled.button<{ darkMode: boolean }>`\n    display: block;\n    width: 100%;\n    max-width: 500px;\n    border-style: none;\n    border-radius: 10px;\n    text-align: left;\n    padding: 5px;\n    padding-left: 40px;\n    margin: 10px auto;\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    background-color: ${ props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"  };\n    &:hover {\n        background-color: ${ props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\" }; \n    }\n`"]},"metadata":{},"sourceType":"module"}