{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReview/WaveSurferReview.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport { Box } from \"../Common\";\nimport { generateWaveSurfer } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar WaveSurferReview = function WaveSurferReview(props) {\n  _s();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      responseSelected = _useState2[0],\n      updateResponseSelected = _useState2[1];\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  var loadSurfer = function loadSurfer(audio) {\n    props.stopEverything();\n    var container = document.getElementById(\"waveform\" + props.questionIdx);\n    if (container) container.innerHTML = \"\";\n    var waveSurfer = generateWaveSurfer(\"waveform\" + props.questionIdx, audio);\n    props.updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        waveSurfer: waveSurfer\n      });\n    });\n    waveSurfer.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(AudioSelect, {\n      onClick: function onClick() {\n        if (responseSelected) props.playing ? props.stopEverything() : props.play();else loadSurfer(props.responseAudio);\n      },\n      narrowWindow: narrowWindow,\n      selected: responseSelected,\n      children: \"You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(AudioSelect, {\n      onClick: function onClick() {\n        if (!responseSelected) props.playing ? props.stopEverything() : props.play();\n        loadSurfer(props.exemplarAudio);\n      },\n      narrowWindow: narrowWindow,\n      selected: !responseSelected,\n      children: \"Exemplar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: \"10px 0\",\n        width: \"87%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"waveform\" + props.questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(WaveSurferReview, \"9+rvbVGnknk/rtFHPxDVj9ffatY=\");\n\n_c = WaveSurferReview;\nexport default WaveSurferReview;\nvar AudioSelect = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    background-color: \", \";\\n    border-radius: 5px;\\n    height: 35px;\\n    align-content: center;\\n    width: 30%;\\n    border: 1px solid #414142;\\n    color: \", \";\\n    font-size: \", \";\\n\"])), function (props) {\n  return props.selected ? \"green\" : \"#414142\";\n}, function (props) {\n  return props.selected ? \"white\" : \"#FAD000\";\n}, function (props) {\n  return props.narrowWindow ? \"12px\" : \"15px\";\n});\n_c2 = AudioSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WaveSurferReview\");\n$RefreshReg$(_c2, \"AudioSelect\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/QuestionReview/WaveSurferReview.tsx"],"names":["useContext","useState","styled","MetaContext","Box","generateWaveSurfer","WaveSurferReview","props","responseSelected","updateResponseSelected","narrowWindow","loadSurfer","audio","stopEverything","container","document","getElementById","questionIdx","innerHTML","waveSurfer","updateAudioState","as","play","display","justifyContent","playing","responseAudio","exemplarAudio","margin","width","AudioSelect","button","selected"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { FaPause, FaPlay } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../../MetaContext\";\nimport { Box } from \"../Common\";\nimport { generateWaveSurfer } from \"../hooks\";\nimport { AudioState } from \"./QuestionReviewContent\";\n\ntype WaveSurferReviewProps = {\n    playing: boolean;\n    play: () => void;\n    stopEverything: () => void;\n    responseAudio: string;\n    exemplarAudio: string;\n    updateAudioState: Dispatch<SetStateAction<AudioState>>;\n    questionIdx: number;\n};\n\nconst WaveSurferReview = (props: WaveSurferReviewProps) => {\n    const [responseSelected, updateResponseSelected] = useState(true);\n    const { narrowWindow } = useContext(MetaContext);\n\n    const loadSurfer = (audio: string) => {\n        props.stopEverything();\n        const container = document.getElementById(\"waveform\" + props.questionIdx);\n        if (container) container.innerHTML = \"\";\n\n        const waveSurfer = generateWaveSurfer(\"waveform\" + props.questionIdx, audio);\n        props.updateAudioState(as => ({\n            ...as,\n            waveSurfer,\n        }));\n        waveSurfer.play();\n    };\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <AudioSelect\n                onClick={() => {\n                    if (responseSelected) props.playing ? props.stopEverything() : props.play();\n                    else loadSurfer(props.responseAudio);\n                }}\n                narrowWindow={narrowWindow}\n                selected={responseSelected}\n            >\n                You\n            </AudioSelect>\n\n            <AudioSelect\n                onClick={() => {\n                    if (!responseSelected) props.playing ? props.stopEverything() : props.play();\n                    loadSurfer(props.exemplarAudio);\n                }}\n                narrowWindow={narrowWindow}\n                selected={!responseSelected}\n            >\n                Exemplar\n            </AudioSelect>\n\n            <Box style={{ margin: \"10px 0\", width: \"87%\" }}>\n                <div id={\"waveform\" + props.questionIdx}></div>\n            </Box>\n        </div>\n    );\n};\n\nexport default WaveSurferReview;\n\nconst AudioSelect = styled.button<{ selected: boolean; narrowWindow: boolean }>`\n    background-color: ${props => (props.selected ? \"green\" : \"#414142\")};\n    border-radius: 5px;\n    height: 35px;\n    align-content: center;\n    width: 30%;\n    border: 1px solid #414142;\n    color: ${props => (props.selected ? \"white\" : \"#FAD000\")};\n    font-size: ${props => (props.narrowWindow ? \"12px\" : \"15px\")};\n`;\n"]},"metadata":{},"sourceType":"module"}