{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/CategorySelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject,\n    _templateObject2;\n\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CategorySelector = function CategorySelector(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  return narrowWindow ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      onChange: function onChange(e) {\n        return props.updateCategory(e.target.value);\n      },\n      children: [\"All\"].concat(_toConsumableArray(new Set(props.stationSummaries.map(function (ss) {\n        return ss.category;\n      })))).map(function (c, i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginRight: \"20px\"\n    },\n    children: _toConsumableArray(new Set(props.stationSummaries.map(function (ss) {\n      return ss.category;\n    }))).map(function (c, i) {\n      return /*#__PURE__*/_jsxDEV(Category, {\n        selected: c === props.category,\n        onClick: function onClick() {\n          return props.updateCategory(c === props.category ? \"All\" : c);\n        },\n        children: c\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CategorySelector, \"veOw0VdmvVP6A+6/HalGX29hfpk=\");\n\n_c = CategorySelector;\nexport default CategorySelector;\nvar Select = styled.select(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-bottom: 20px;\\n    background-color: #1c2124;\\n    border-radius: 5px;\\n    color: white;\\n    border-style: none;\\n    padding: 5px;\\n    text-align: center;\\n\"])));\n_c2 = Select;\nvar Category = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    margin-bottom: 20px;\\n    background-color: \", \";\\n    border-radius: 5px;\\n    color: white;\\n    border-style: none;\\n    padding: 5px;\\n    cursor: pointer;\\n\"])), function (props) {\n  return props.selected ? \"#1c2124\" : \"transparent\";\n});\n_c3 = Category;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CategorySelector\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"Category\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/CategorySelector.tsx"],"names":["React","useContext","styled","MetaContext","CategorySelector","props","narrowWindow","e","updateCategory","target","value","concat","Set","stationSummaries","map","ss","category","c","i","marginRight","Select","select","Category","div","selected"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAA0CC,UAA1C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAkC;AAAA;;AACvD,oBAAyBJ,UAAU,CAACE,WAAD,CAAnC;AAAA,MAAQG,YAAR,eAAQA,YAAR;;AAEA,SAAOA,YAAY,gBACf;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,eAAIF,KAAK,CAACG,cAAN,CAAqBD,CAAC,CAACE,MAAF,CAASC,KAA9B,CAAJ;AAAA,OAAnB;AAAA,gBACK,CAAC,KAAD,EACIC,MADJ,oBACe,IAAIC,GAAJ,CAAQP,KAAK,CAACQ,gBAAN,CAAuBC,GAAvB,CAA2B,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,QAAP;AAAA,OAA7B,CAAR,CADf,GAEIF,GAFJ,CAEQ,UAACG,CAAD,EAAIC,CAAJ;AAAA,4BACD;AAAA,oBAAiBD;AAAjB,WAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,iBADC;AAAA,OAFR;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADe,gBAWf;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAZ;AAAA,cACK,mBAAI,IAAIP,GAAJ,CAAQP,KAAK,CAACQ,gBAAN,CAAuBC,GAAvB,CAA2B,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,QAAP;AAAA,KAA7B,CAAR,CAAJ,EAA4DF,GAA5D,CAAgE,UAACG,CAAD,EAAIC,CAAJ;AAAA,0BAC7D,QAAC,QAAD;AACI,QAAA,QAAQ,EAAED,CAAC,KAAKZ,KAAK,CAACW,QAD1B;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMX,KAAK,CAACG,cAAN,CAAqBS,CAAC,KAAKZ,KAAK,CAACW,QAAZ,GAAuB,KAAvB,GAA+BC,CAApD,CAAN;AAAA,SAFb;AAAA,kBAKKA;AALL,SAGSC,CAHT;AAAA;AAAA;AAAA;AAAA,eAD6D;AAAA,KAAhE;AADL;AAAA;AAAA;AAAA;AAAA,WAXJ;AAuBH,CA1BD;;GAAMd,gB;;KAAAA,gB;AA4BN,eAAeA,gBAAf;AAEA,IAAMgB,MAAM,GAAGlB,MAAM,CAACmB,MAAV,kPAAZ;MAAMD,M;AAUN,IAAME,QAAQ,GAAGpB,MAAM,CAACqB,GAAV,+OAEU,UAAAlB,KAAK;AAAA,SAAKA,KAAK,CAACmB,QAAN,GAAiB,SAAjB,GAA6B,aAAlC;AAAA,CAFf,CAAd;MAAMF,Q","sourcesContent":["import React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport MetaContext from \"../../MetaContext\";\nimport { StationSummary } from \"./types\";\n\ntype CategorySelectorProps = {\n    updateCategory: Dispatch<SetStateAction<string>>;\n    stationSummaries: StationSummary[];\n    category: string;\n};\n\nconst CategorySelector = (props: CategorySelectorProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n\n    return narrowWindow ? (\n        <div>\n            <Select onChange={e => props.updateCategory(e.target.value)}>\n                {[\"All\"]\n                    .concat([...new Set(props.stationSummaries.map(ss => ss.category))])\n                    .map((c, i) => (\n                        <option key={i}>{c}</option>\n                    ))}\n            </Select>\n        </div>\n    ) : (\n        <div style={{ marginRight: \"20px\" }}>\n            {[...new Set(props.stationSummaries.map(ss => ss.category))].map((c, i) => (\n                <Category\n                    selected={c === props.category}\n                    onClick={() => props.updateCategory(c === props.category ? \"All\" : c)}\n                    key={i}\n                >\n                    {c}\n                </Category>\n            ))}\n        </div>\n    );\n};\n\nexport default CategorySelector;\n\nconst Select = styled.select`\n    margin-bottom: 20px;\n    background-color: #1c2124;\n    border-radius: 5px;\n    color: white;\n    border-style: none;\n    padding: 5px;\n    text-align: center;\n`;\n\nconst Category = styled.div<{ selected: boolean }>`\n    margin-bottom: 20px;\n    background-color: ${props => (props.selected ? \"#1c2124\" : \"transparent\")};\n    border-radius: 5px;\n    color: white;\n    border-style: none;\n    padding: 5px;\n    cursor: pointer;\n`;\n"]},"metadata":{},"sourceType":"module"}