{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StartButton } from \"./Common\";\nimport TimerApparatus from \"./TimerApparatus\";\nimport TimerBar from \"./TimerBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const [briefShowing, updateBriefShowing] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"sticky\",\n      top: 0,\n      width: \"100%\",\n      backgroundColor: \"#1C2124\",\n      paddingTop: \"50px\",\n      opacity: \"0.98\",\n      zIndex: 999\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), props.timedHeader ? /*#__PURE__*/_jsxDEV(TimerApparatus, {\n        station: props.station,\n        questionIdx: props.questionIdx,\n        updateStation: props.updateStation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimerBar, {\n      percentage: props.percentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: () => updateBriefShowing(!briefShowing),\n          children: [briefShowing ? \"Hide\" : \"Show\", \" Brief\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/OSCE\",\n          children: /*#__PURE__*/_jsxDEV(StartButton, {\n            children: \"Exit Demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), briefShowing ? props.briefPrompt : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"q0wS/yIjj9PNjSltzKWD4IJUjRE=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Header.tsx"],"names":["useState","Link","StartButton","TimerApparatus","TimerBar","Header","props","briefShowing","updateBriefShowing","position","top","width","backgroundColor","paddingTop","opacity","zIndex","display","justifyContent","title","timedHeader","station","questionIdx","updateStation","percentage","briefPrompt"],"mappings":";;;AAAA,SAAiDA,QAAjD,QAAiE,OAAjE;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAaA,MAAMC,MAAM,GAAIC,KAAD,IAAwB;AAAA;;AAEnC,QAAM,CAACC,YAAD,EAAeC,kBAAf,IAAqCR,QAAQ,CAAC,KAAD,CAAnD;AAEA,sBACI;AAAK,IAAA,KAAK,EAAI;AAAES,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,GAAG,EAAE,CAA3B;AAA8BC,MAAAA,KAAK,EAAE,MAArC;AAA6CC,MAAAA,eAAe,EAAE,SAA9D;AAAyEC,MAAAA,UAAU,EAAE,MAArF;AAA6FC,MAAAA,OAAO,EAAE,MAAtG;AAA8GC,MAAAA,MAAM,EAAE;AAAtH,KAAd;AAAA,4BAEI;AAAK,MAAA,KAAK,EAAI;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAd;AAAA,8BACI;AAAA,+BAAK;AAAA,oBAAMX,KAAK,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQZ,KAAK,CAACa,WAAN,gBACQ,QAAC,cAAD;AACI,QAAA,OAAO,EAAKb,KAAK,CAACc,OADtB;AAEI,QAAA,WAAW,EAAKd,KAAK,CAACe,WAF1B;AAGI,QAAA,aAAa,EAAKf,KAAK,CAACgB;AAH5B;AAAA;AAAA;AAAA;AAAA,cADR,gBAMQ,qCAThB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAKhB,KAAK,CAACiB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAfJ,eAiBI;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAmBI;AAAK,MAAA,KAAK,EAAI;AAAEP,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAd;AAAA,8BAEI;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAK,MAAMT,kBAAkB,CAAC,CAACD,YAAF,CAAjD;AAAA,qBACMA,YAAY,GAAG,MAAH,GAAY,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA,+BAAK,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,OAAX;AAAA,iCAAmB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eA+BI;AAAA;AAAA;AAAA;AAAA,YA/BJ,EAiCMA,YAAY,GAAGD,KAAK,CAACkB,WAAT,gBAAuB,qCAjCzC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA1CD;;GAAMnB,M;;KAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import { Dispatch, ReactElement, SetStateAction, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StartButton } from \"./Common\";\nimport TimerApparatus from \"./TimerApparatus\";\nimport TimerBar from \"./TimerBar\";\nimport { Station_new } from \"./types\"\n\ntype HeaderProps = {\n    station?: Station_new;\n    questionIdx?: number;\n    updateStation?: Dispatch<SetStateAction<Station_new>>\n    timedHeader: boolean;\n    percentage: number;\n    briefPrompt: ReactElement;\n    title: string;\n}\n\nconst Header = (props: HeaderProps) => {\n\n    const [briefShowing, updateBriefShowing] = useState(false);\n\n    return (\n        <div style = {{ position: \"sticky\", top: 0, width: \"100%\", backgroundColor: \"#1C2124\", paddingTop: \"50px\", opacity: \"0.98\", zIndex: 999 }}>\n\n            <div style = {{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div><h2>{ props.title }</h2></div>\n                {\n                    props.timedHeader\n                        ?   <TimerApparatus \n                                station = { props.station! } \n                                questionIdx = { props.questionIdx! } \n                                updateStation = { props.updateStation! }\n                            />\n                        :   <></>\n                }\n            </div>\n\n            <TimerBar percentage = { props.percentage }/>\n\n            <br/>\n\n            <div style = {{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n                <div>\n                    <StartButton onClick = { () => updateBriefShowing(!briefShowing) }>\n                        { briefShowing ? \"Hide\" : \"Show\" } Brief\n                    </StartButton>\n                </div>\n\n                <div><Link to = \"/OSCE\"><StartButton>Exit Demo</StartButton></Link></div>\n\n            </div>\n\n            <br/>\n\n            { briefShowing ? props.briefPrompt : <></> }\n            \n        </div>\n    )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}