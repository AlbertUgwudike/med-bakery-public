{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/albert/projects/med-bakery-react/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionContent.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _templateObject;\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport styled from \"styled-components\";\nimport { copy } from \"../../../old-components/ECGPage/Functions/utility\";\nimport { Box } from \"../Common\";\nimport { playStartTone } from \"../hooks\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport RecordControl from \"./RecordControl\";\nimport WaveSurfer from \"./WaveSurfer\";\nimport { promptId } from \"../types\";\nimport MetaContext from \"../../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar getPromptAudio = function getPromptAudio(idx) {\n  return document.getElementById(promptId + idx);\n};\n\nvar QuestionContent = function QuestionContent(props) {\n  _s();\n\n  var _useContext = useContext(MetaContext),\n      narrowWindow = _useContext.narrowWindow;\n\n  var _useState = useState({\n    responseWaveSurfer: undefined,\n    promptPlaying: true,\n    responsePlaying: false,\n    recording: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      audioState = _useState2[0],\n      updateAudioState = _useState2[1];\n\n  var _useReactMediaRecorde = useReactMediaRecorder({\n    audio: true,\n    onStop: function onStop(blobUrl, _) {\n      playStartTone();\n      props.updateStation(function (s) {\n        s.questions[props.questionIdx].responseAudio = blobUrl ? blobUrl : \"\";\n        return copy(s); // because object is nested, react shallow compares\n      }); // advance question on recording completetion\n\n      // advance question on recording completetion\n      props.nextFunc();\n    }\n  }),\n      startRecording = _useReactMediaRecorde.startRecording,\n      stopRecording = _useReactMediaRecorde.stopRecording;\n\n  var stopEverything = function stopEverything() {\n    var _audioState$responseW;\n\n    getPromptAudio(props.questionIdx).pause();\n    (_audioState$responseW = audioState.responseWaveSurfer) === null || _audioState$responseW === void 0 ? void 0 : _audioState$responseW.stop();\n    if (audioState.recording) stopRecording();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: false,\n        responsePlaying: false,\n        recording: false\n      });\n    });\n  };\n\n  var play = function play(id) {\n    var _audioState$responseW2;\n\n    stopEverything();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        promptPlaying: id === promptId,\n        responsePlaying: id === \"waveform\" + props.questionIdx\n      });\n    });\n    if (id === promptId) getPromptAudio(props.questionIdx).play();else (_audioState$responseW2 = audioState.responseWaveSurfer) === null || _audioState$responseW2 === void 0 ? void 0 : _audioState$responseW2.play();\n  };\n\n  var record = function record() {\n    stopEverything();\n    playStartTone();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        recording: true\n      });\n    });\n    startRecording();\n  }; // add event listener for when prompt audio ceases\n\n\n  useEffect(function () {\n    getPromptAudio(props.questionIdx).addEventListener(\"ended\", function (_) {\n      updateAudioState(function (as) {\n        return _objectSpread(_objectSpread({}, as), {}, {\n          promptPlaying: false\n        });\n      });\n    });\n  }, []); // stop wavesurfer when transitions active or playback selection changes\n\n  useEffect(function () {\n    var _audioState$responseW3;\n\n    (_audioState$responseW3 = audioState.responseWaveSurfer) === null || _audioState$responseW3 === void 0 ? void 0 : _audioState$responseW3.stop();\n    updateAudioState(function (as) {\n      return _objectSpread(_objectSpread({}, as), {}, {\n        responsePlaiyng: false\n      });\n    });\n  }, [props.transitionStyle]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: _objectSpread({\n        gridRowStart: 2,\n        gridColumnStart: 1,\n        height: \"60vh\",\n        transition: \"transform \".concat(500, \"ms\")\n      }, props.transitionStyle),\n      children: [/*#__PURE__*/_jsxDEV(QuestionPrompt, {\n        question: props.question,\n        toggle: function toggle() {\n          audioState.promptPlaying ? stopEverything() : play(promptId);\n        },\n        promptId: promptId + props.questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"49vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Img, {\n          src: props.question.img,\n          narrowWindow: narrowWindow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        gridRowStart: 4,\n        gridColumnStart: 1,\n        zIndex: 700,\n        backgroundColor: \"#1c2124\",\n        height: \"15vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(WaveSurfer, {\n        playing: audioState.responsePlaying,\n        playResponse: function playResponse() {\n          return play(\"waveform\" + props.questionIdx);\n        },\n        stopEverything: stopEverything,\n        responseAudio: props.question.responseAudio,\n        updateAudioState: updateAudioState,\n        questionIdx: props.questionIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(RecordControl, {\n        recording: audioState.recording,\n        recordResponse: record,\n        stopEverything: stopEverything\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(QuestionContent, \"/6LAmFTrXYp8MoOaklmYTYfMleY=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = QuestionContent;\nexport default QuestionContent;\nvar Img = styled.img(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    display: block;\\n    margin: auto;\\n    max-width: 100%;\\n    max-height: 100%;\\n    transition: width 0.2s;\\n\"])));\n_c2 = Img;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuestionContent\");\n$RefreshReg$(_c2, \"Img\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Question/QuestionContent.tsx"],"names":["useContext","useEffect","useState","useReactMediaRecorder","styled","copy","Box","playStartTone","QuestionPrompt","RecordControl","WaveSurfer","promptId","MetaContext","getPromptAudio","idx","document","getElementById","QuestionContent","props","narrowWindow","responseWaveSurfer","undefined","promptPlaying","responsePlaying","recording","audioState","updateAudioState","audio","onStop","blobUrl","_","updateStation","s","questions","questionIdx","responseAudio","nextFunc","startRecording","stopRecording","stopEverything","pause","stop","as","play","id","record","addEventListener","responsePlaiyng","transitionStyle","gridRowStart","gridColumnStart","height","transition","question","display","alignItems","img","zIndex","backgroundColor","Img"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport styled from \"styled-components\";\nimport { copy } from \"../../../old-components/ECGPage/Functions/utility\";\nimport { Box } from \"../Common\";\nimport { playStartTone } from \"../hooks\";\nimport QuestionPrompt from \"../QuestionPrompt\";\nimport RecordControl from \"./RecordControl\";\nimport WaveSurfer from \"./WaveSurfer\";\nimport { promptId, Question, responseId, Station } from \"../types\";\nimport MetaContext from \"../../../MetaContext\";\n\ntype QuestionContentProps = {\n    question: Question;\n    updateStation: Dispatch<SetStateAction<Station>>;\n    questionIdx: number;\n    updateQuestionIdx: Dispatch<SetStateAction<{ prev: number; curr: number }>>;\n    transitionStyle: any;\n    nextFunc: () => void;\n};\n\nexport type AudioState = {\n    responseWaveSurfer: WaveSurfer | undefined;\n    promptPlaying: boolean;\n    responsePlaying: boolean;\n    recording: boolean;\n};\n\nconst getPromptAudio = (idx: number) => document.getElementById(promptId + idx) as HTMLAudioElement;\n\nconst QuestionContent = (props: QuestionContentProps) => {\n    const { narrowWindow } = useContext(MetaContext);\n    const [audioState, updateAudioState] = useState<AudioState>({\n        responseWaveSurfer: undefined,\n        promptPlaying: true,\n        responsePlaying: false,\n        recording: false,\n    });\n\n    const { startRecording, stopRecording } = useReactMediaRecorder({\n        audio: true,\n        onStop: (blobUrl, _) => {\n            playStartTone();\n            props.updateStation(s => {\n                s.questions[props.questionIdx].responseAudio = blobUrl ? blobUrl : \"\";\n                return copy(s); // because object is nested, react shallow compares\n            });\n\n            // advance question on recording completetion\n            props.nextFunc();\n        },\n    });\n\n    const stopEverything = () => {\n        getPromptAudio(props.questionIdx).pause();\n        audioState.responseWaveSurfer?.stop();\n        if (audioState.recording) stopRecording();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: false,\n            responsePlaying: false,\n            recording: false,\n        }));\n    };\n\n    const play = (id: string) => {\n        stopEverything();\n        updateAudioState(as => ({\n            ...as,\n            promptPlaying: id === promptId,\n            responsePlaying: id === \"waveform\" + props.questionIdx,\n        }));\n\n        if (id === promptId) getPromptAudio(props.questionIdx).play();\n        else audioState.responseWaveSurfer?.play();\n    };\n\n    const record = () => {\n        stopEverything();\n        playStartTone();\n        updateAudioState(as => ({ ...as, recording: true }));\n        startRecording();\n    };\n\n    // add event listener for when prompt audio ceases\n    useEffect(() => {\n        getPromptAudio(props.questionIdx).addEventListener(\"ended\", _ => {\n            updateAudioState(as => ({ ...as, promptPlaying: false }));\n        });\n    }, []);\n\n    // stop wavesurfer when transitions active or playback selection changes\n    useEffect(() => {\n        audioState.responseWaveSurfer?.stop();\n        updateAudioState(as => ({\n            ...as,\n            responsePlaiyng: false,\n        }));\n    }, [props.transitionStyle]);\n\n    return (\n        <>\n            <div\n                style={{\n                    gridRowStart: 2,\n                    gridColumnStart: 1,\n                    height: \"60vh\",\n                    transition: `transform ${500}ms`,\n                    ...props.transitionStyle,\n                }}\n            >\n                <QuestionPrompt\n                    question={props.question}\n                    toggle={() => {\n                        audioState.promptPlaying ? stopEverything() : play(promptId);\n                    }}\n                    promptId={promptId + props.questionIdx}\n                />\n                <Box\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        height: \"49vh\",\n                    }}\n                >\n                    <Img src={props.question.img} narrowWindow={narrowWindow}></Img>\n                    <br />\n                </Box>\n            </div>\n            <div\n                style={{\n                    gridRowStart: 4,\n                    gridColumnStart: 1,\n                    zIndex: 700,\n                    backgroundColor: \"#1c2124\",\n                    height: \"15vh\",\n                }}\n            >\n                <WaveSurfer\n                    playing={audioState.responsePlaying}\n                    playResponse={() => play(\"waveform\" + props.questionIdx)}\n                    stopEverything={stopEverything}\n                    responseAudio={props.question.responseAudio}\n                    updateAudioState={updateAudioState}\n                    questionIdx={props.questionIdx}\n                />\n\n                <RecordControl\n                    recording={audioState.recording}\n                    recordResponse={record}\n                    stopEverything={stopEverything}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default QuestionContent;\n\nconst Img = styled.img<{ narrowWindow: boolean }>`\n    display: block;\n    margin: auto;\n    max-width: 100%;\n    max-height: 100%;\n    transition: width 0.2s;\n`;\n"]},"metadata":{},"sourceType":"module"}