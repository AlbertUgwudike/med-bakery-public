{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/CategoryPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { updateCategory, getPaths } from \"../../functions\";\nimport Category from \"./Category\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryPage = props => {\n  _s();\n\n  const {\n    darkMode,\n    SERVER_URL,\n    token\n  } = useContext(MetaContext);\n  const [selectAll, updateSelectAll] = useState(false);\n  const [masterCategory, updateMasterCategory] = useState({\n    categoryTitle: \"\",\n    totalQuestionCount: 0,\n    answeredQuestionsCount: 0,\n    correctlyAnsweredCount: 0,\n    subcategories: [],\n    selected: false\n  });\n  useEffect(() => {\n    axios.post(SERVER_URL + \"/questions/finals/categorylist\", {\n      token\n    }).then(res => {\n      updateMasterCategory(res.data); // console.log(\"msater category\", res.data)\n    });\n  }, []);\n\n  const handleSelection = (path, value) => {\n    updateSelectAll(false);\n    updateMasterCategory(updateCategory(masterCategory, path, value));\n  }; // goes through master category and populates paths and totals\n\n\n  const beginSession = () => {\n    const paths = getPaths(masterCategory);\n    props.retriveQuestions(paths);\n  };\n\n  const handleSelectAll = () => {\n    updateSelectAll(!selectAll);\n    updateMasterCategory({ ...masterCategory,\n      subcategories: masterCategory.subcategories.map(sc => {\n        return { ...sc,\n          selected: !selectAll\n        };\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: darkMode ? \"#FAD000\" : \"#7babff\"\n        },\n        children: \" Finals \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), \" Questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      darkMode: darkMode,\n      children: \"Select Your Sauce!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        darkMode: darkMode,\n        onClick: handleSelectAll,\n        selected: selectAll,\n        children: \"SelectAll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        darkMode: darkMode,\n        onChange: props.handleSessionTypeChange,\n        value: props.sessionType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          children: \" Filter \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Unanswered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"All Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n      children: masterCategory.subcategories.map(category => /*#__PURE__*/_jsxDEV(Category, {\n        category: category,\n        handleSelection: handleSelection,\n        workingPath: [],\n        depth: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/User/Finals/Session\",\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: beginSession,\n          children: \"Start Cooking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryPage, \"4wE3NTIwWKGqILNUhnbp0ZFVxkI=\");\n\n_c = CategoryPage;\nexport default CategoryPage;\nconst Select = styled.select`\n    display: inline-block;\n    border-radius: 20px;\n    border: none;\n    font-size: 10px;\n    width: 100px;\n    height: 15px;\n    margin: 5px 10px;\n    text-align: center;\n    background-color: ${props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n`;\n_c2 = Select;\nconst Button = styled.button`\n    display: inline-block;\n    border-radius: 20px;\n    border: none;\n    font-size: 10px;\n    width: 100px;\n    height: 15px;\n    margin: 5px 10px;\n    text-align: center;\n    background-color: ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    &:hover {\n        background-color: ${props => props.selected ? props.darkMode ? \"#1C725C\" : \"#41BFA0\" : props.darkMode ? \"#7735FD\" : \"#FBE9EE\"};\n    }\n`;\n_c3 = Button;\nconst CategoryList = styled.div`\n    text-align: left;\n    margin-top: 10px;\n`;\n_c4 = CategoryList;\nconst StartButton = styled.button`\n    border-radius: 10px;\n    border: none;\n    font-size: 15px;\n    width: 150px;\n    height: 30px;\n    background-color: #FAD000;\n    color: black;\n    margin-top: 30px;\n`;\n_c5 = StartButton;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CategoryPage\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"CategoryList\");\n$RefreshReg$(_c5, \"StartButton\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/FinalsPage/CategoryPage.tsx"],"names":["updateCategory","getPaths","Category","axios","Link","styled","useContext","useEffect","useState","Title","Subtitle","MetaContext","CategoryPage","props","darkMode","SERVER_URL","token","selectAll","updateSelectAll","masterCategory","updateMasterCategory","categoryTitle","totalQuestionCount","answeredQuestionsCount","correctlyAnsweredCount","subcategories","selected","post","then","res","data","handleSelection","path","value","beginSession","paths","retriveQuestions","handleSelectAll","map","sc","maxWidth","margin","color","handleSessionTypeChange","sessionType","category","textAlign","Select","select","Button","button","CategoryList","div","StartButton"],"mappings":"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","sourcesContent":["import { updateCategory, getPaths } from \"../../functions\";\nimport Category from \"./Category\";\nimport { MasterCategory } from \"../../types\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport MetaContext from \"../../MetaContext\";\n\ntype CategoryPageProps = {\n    retriveQuestions: (paths: string[][]) => void;\n    handleSessionTypeChange: React.ChangeEventHandler<HTMLSelectElement>;\n    sessionType: string;\n}\n\nconst CategoryPage = (props: CategoryPageProps) => {\n\n    const { darkMode, SERVER_URL, token } = useContext(MetaContext);\n\n    const [selectAll, updateSelectAll] = useState(false);\n    const [masterCategory, updateMasterCategory] = useState({\n        categoryTitle: \"\",\n        totalQuestionCount: 0,\n        answeredQuestionsCount: 0,\n        correctlyAnsweredCount: 0,\n        subcategories: [],\n        selected: false\n    } as MasterCategory);\n\n    useEffect(() => {\n        axios.post(SERVER_URL + \"/questions/finals/categorylist\", { token })\n            .then(res => {\n                updateMasterCategory(res.data)\n                // console.log(\"msater category\", res.data)\n            });\n    }, [])\n\n    const handleSelection = (path: string[], value: boolean) => {\n        updateSelectAll(false);\n        updateMasterCategory(updateCategory(masterCategory, path, value));\n    }\n\n    // goes through master category and populates paths and totals\n    const beginSession = () => {\n        const paths = getPaths(masterCategory);\n        props.retriveQuestions(paths);\n    }\n\n    const handleSelectAll = () => {\n        updateSelectAll(!selectAll);\n        updateMasterCategory({ ...masterCategory, subcategories: masterCategory.subcategories.map(sc => { return { ...sc, selected: !selectAll } }) })\n    }\n\n    return (\n        <div style = {{ maxWidth: \"800px\", margin: \"auto\" }}>\n\n            <Title darkMode = { darkMode }>\n                <span style = {{ color: (darkMode ? \"#FAD000\" : \"#7babff\") }}> Finals </span> Questions\n            </Title>\n\n            <Subtitle darkMode = { darkMode }>\n                Select Your Sauce!\n            </Subtitle>\n\n            <br></br>\n\n            <div style = {{  }} >\n\n                <Button darkMode = { darkMode } onClick = { handleSelectAll } selected = { selectAll }>\n                    SelectAll \n                </Button>\n\n                <Select darkMode = { darkMode } onChange = { props.handleSessionTypeChange } value = { props.sessionType }>  \n                    <option disabled selected> Filter </option>       \n                    <option>Unanswered Questions</option>\n                    <option>All Questions</option>        \n                </Select>\n\n            </div>\n\n            <CategoryList>\n                {\n                    masterCategory.subcategories.map(category => \n                        <Category \n                            category = { category }\n                            handleSelection = { handleSelection }\n                            workingPath = { [] }\n                            depth = { 0 }\n                        /> \n                    )\n                }\n            </CategoryList>\n\n            <div style = {{ textAlign: \"center\" }}>\n                <Link to = \"/User/Finals/Session\">\n                    <StartButton onClick = { beginSession }>\n                        Start Cooking\n                    </StartButton>\n                </Link>\n            </div>\n\n        </div>\n    );\n}\n\nexport default CategoryPage;\n\nconst Select = styled.select<{ darkMode: boolean }>`\n    display: inline-block;\n    border-radius: 20px;\n    border: none;\n    font-size: 10px;\n    width: 100px;\n    height: 15px;\n    margin: 5px 10px;\n    text-align: center;\n    background-color: ${ props => props.darkMode ? \"#9546f05e\" : \"#b1def599\" };\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n`\n\nconst Button = styled.button<{ darkMode: boolean, selected?: boolean }>`\n    display: inline-block;\n    border-radius: 20px;\n    border: none;\n    font-size: 10px;\n    width: 100px;\n    height: 15px;\n    margin: 5px 10px;\n    text-align: center;\n    background-color: ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : ( props.darkMode ? \"#9546f05e\" : \"#b1def599\" ) };\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    &:hover {\n        background-color: ${ props => props.selected ? (props.darkMode ? \"#1C725C\" : \"#41BFA0\") : (props.darkMode ? \"#7735FD\" : \"#FBE9EE\") };\n    }\n`\n\nconst CategoryList = styled.div`\n    text-align: left;\n    margin-top: 10px;\n`\n\nconst StartButton = styled.button`\n    border-radius: 10px;\n    border: none;\n    font-size: 15px;\n    width: 150px;\n    height: 30px;\n    background-color: #FAD000;\n    color: black;\n    margin-top: 30px;\n`"]},"metadata":{},"sourceType":"module"}