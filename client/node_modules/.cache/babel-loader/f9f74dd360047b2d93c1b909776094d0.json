{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/TextBookPage/TopicPage.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { FaArrowDown, FaArrowUp } from \"react-icons/fa\";\nimport styled from 'styled-components';\nimport ReactHtmlParser from 'react-html-parser';\nimport BackButton from \"../General/BackButton\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport MetaContext from \"../../MetaContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Section = props => {\n  _s();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n  const [contentExposed, updateContentExposed] = useState(false);\n  return /*#__PURE__*/_jsxDEV(SectionDiv, {\n    darkMode: darkMode,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      darkMode: darkMode,\n      onClick: () => updateContentExposed(!contentExposed),\n      children: [props.section.sectionTitle, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline\",\n          float: \"right\"\n        },\n        children: contentExposed ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Explanation, {\n      darkMode: darkMode,\n      expanded: contentExposed,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [\" \", ReactHtmlParser(props.section.content), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Section, \"Dds4BFxzfZGh2JoFIPKU3CIMJJ8=\");\n\n_c = Section;\n\nconst TopicPage = props => {\n  _s2();\n\n  const {\n    darkMode\n  } = useContext(MetaContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      path: \"/User/Finals/TextBook\",\n      label: \"TextBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      darkMode: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: darkMode ? \"#FAD000\" : \"#7babff\"\n        },\n        children: \" Finals \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" Questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n      darkMode: darkMode,\n      children: props.topic.topicTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), props.topic.sections.map(s => /*#__PURE__*/_jsxDEV(Section, {\n      section: s\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true);\n};\n\n_s2(TopicPage, \"NMTVVNK9D9KcAINAzGr7OqQN7ms=\");\n\n_c2 = TopicPage;\nexport default TopicPage;\nconst Button = styled.button`\n    width: 100%;\n    border-style: none;\n    border-radius: 10px;\n    background-color: transparent;\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    font-size: 30px;\n    text-align: left;\n    padding: 5px;\n`;\n_c3 = Button;\nconst SectionDiv = styled.div`\n    padding: 20px;\n    max-width: 700px;\n    border-radius: 10px;\n    margin: 0 auto 20px auto;\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    background-color: ${props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"};\n    &:hover {\n        background-color: ${props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\"}; \n    }\n`;\n_c4 = SectionDiv;\nconst Explanation = styled.div`\n    color: ${props => props.darkMode ? \"white\" : \"black\"};\n    background-color: ${props => props.darkMode ? \"#0D163C\" : \"#E6E5E0\"};\n    border-radius: 10px;\n    font-size: 15px;\n    max-height: ${props => props.expanded ? \"500px\" : \"0\"};\n    transition: max-height 0.5s;\n    overflow: scroll;\n    text-align: left;\n`;\n_c5 = Explanation;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"TopicPage\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"SectionDiv\");\n$RefreshReg$(_c5, \"Explanation\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/TextBookPage/TopicPage.tsx"],"names":["useContext","useState","FaArrowDown","FaArrowUp","styled","ReactHtmlParser","BackButton","Title","Subtitle","MetaContext","Section","props","darkMode","contentExposed","updateContentExposed","section","sectionTitle","display","float","margin","content","TopicPage","color","topic","topicTitle","sections","map","s","Button","button","SectionDiv","div","Explanation","expanded"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\"\nimport { FaArrowDown, FaArrowUp } from \"react-icons/fa\";\nimport { TextBookTopic, TextBookTopicSection } from \"../../types\";\nimport styled from 'styled-components';\nimport ReactHtmlParser from 'react-html-parser';\nimport BackButton from \"../General/BackButton\";\nimport { Title } from \"../General/Title\";\nimport { Subtitle } from \"../General/Subtitle\";\nimport MetaContext from \"../../MetaContext\";\n\nconst Section = (props: {section: TextBookTopicSection }) => {\n\n    const { darkMode } = useContext(MetaContext);\n    const [contentExposed, updateContentExposed] = useState(false);\n\n    return (\n        <SectionDiv darkMode = { darkMode }>\n\n            <Button darkMode = { darkMode } onClick = { () => updateContentExposed(!contentExposed) }>\n\n                { props.section.sectionTitle }\n\n                <div style = {{ display: \"inline\", float: \"right\" }}>\n                    { contentExposed ? <FaArrowUp /> : <FaArrowDown /> }\n                </div>\n\n            </Button>\n\n            <Explanation darkMode = { darkMode } expanded = { contentExposed }>\n                <div style = {{ margin: \"20px\" }}> { ReactHtmlParser(props.section.content) } </div>\n            </Explanation>\n\n        </SectionDiv>\n    )\n}\n\nconst TopicPage = (props: { topic: TextBookTopic }) => {\n\n    const { darkMode  } = useContext(MetaContext);\n\n    return (\n        <>\n            <BackButton path = \"/User/Finals/TextBook\" label = \"TextBook\"/>\n\n            <Title darkMode = { darkMode }>\n                <span style = {{ color: (darkMode ? \"#FAD000\" : \"#7babff\") }}> Finals </span> Questions\n            </Title>\n\n            <Subtitle darkMode = { darkMode }>{ props.topic.topicTitle }</Subtitle>\n\n            <br></br>\n\n            { props.topic.sections.map(s => <Section section = {s} />) }\n\n        </>\n    )\n}\n\nexport default TopicPage;\n\nconst Button = styled.button<{ darkMode: boolean }>`\n    width: 100%;\n    border-style: none;\n    border-radius: 10px;\n    background-color: transparent;\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    font-size: 30px;\n    text-align: left;\n    padding: 5px;\n`\n\nconst SectionDiv = styled.div<{ darkMode: boolean }>`\n    padding: 20px;\n    max-width: 700px;\n    border-radius: 10px;\n    margin: 0 auto 20px auto;\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    background-color: ${ props => props.darkMode ? \"#9546f05e\" : \"#b1def599\"  };\n    &:hover {\n        background-color: ${ props => props.darkMode ? \"rgba(119, 53, 253, 0.5)\" : \"#FBE9EE\" }; \n    }\n`\n\nconst Explanation = styled.div<{ darkMode: boolean, expanded: boolean }>`\n    color: ${ props => props.darkMode ? \"white\" : \"black\" };\n    background-color: ${ props => props.darkMode ? \"#0D163C\" : \"#E6E5E0\" };\n    border-radius: 10px;\n    font-size: 15px;\n    max-height: ${ props => props.expanded ? \"500px\" : \"0\" };\n    transition: max-height 0.5s;\n    overflow: scroll;\n    text-align: left;\n`"]},"metadata":{},"sourceType":"module"}