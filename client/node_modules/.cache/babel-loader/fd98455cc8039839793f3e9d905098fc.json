{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Brief.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Box, Timer, Container, StartButton } from \"./Common\";\nimport { useLoopTime } from \"./hooks\";\nimport TimerBar from \"./TimerBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Brief = props => {\n  _s();\n\n  const secondTicker = useLoopTime(props.station.brief.timeRemaining);\n\n  if (secondTicker <= 0) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/OSCE/Station/0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"sticky\",\n        top: 0,\n        width: \"100%\",\n        backgroundColor: \"#1C2124\",\n        padding: \"50px 0 20px 0\",\n        opacity: \"0.98\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Brief\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimerBar, {\n        percentage: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Time left to read:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          children: [\" 00 : \", secondTicker < 10 ? \"0\" : \"\", secondTicker, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), props.station.brief.prompt, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/OSCE/Station/0\",\n        children: /*#__PURE__*/_jsxDEV(StartButton, {\n          style: {\n            margin: \"auto\"\n          },\n          children: \"Start Station\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Brief, \"ckUBrSMwDYfswUaIEhAzW/SaIGU=\", false, function () {\n  return [useLoopTime];\n});\n\n_c = Brief;\nexport default Brief;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brief\");","map":{"version":3,"sources":["/Users/albert/projects/med-bakery-react/client/src/components/OSCEPage/Brief.tsx"],"names":["Link","Redirect","Box","Timer","Container","StartButton","useLoopTime","TimerBar","Brief","props","secondTicker","station","brief","timeRemaining","position","top","width","backgroundColor","padding","opacity","textAlign","prompt","margin"],"mappings":";;;AACA,SAASA,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,UAAnD;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAQA,MAAMC,KAAK,GAAIC,KAAD,IAAuB;AAAA;;AAEjC,QAAMC,YAAY,GAAGJ,WAAW,CAACG,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,aAArB,CAAhC;;AAEA,MAAIH,YAAY,IAAI,CAApB,EAAuB;AACnB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,4BAEI;AAAK,MAAA,KAAK,EAAI;AAAEI,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,GAAG,EAAE,CAA3B;AAA8BC,QAAAA,KAAK,EAAE,MAArC;AAA6CC,QAAAA,eAAe,EAAE,SAA9D;AAAyEC,QAAAA,OAAO,EAAE,eAAlF;AAAmGC,QAAAA,OAAO,EAAE;AAA5G,OAAd;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,QAAD;AAAU,QAAA,UAAU,EAAK;AAAzB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI;AAAA;AAAA;AAAA;AAAA,YAZJ,eAcI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAI,EAAd;AAAA,8BAEI;AAAK,QAAA,KAAK,EAAI;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAA,+BAAeV,YAAY,GAAG,EAAf,GAAoB,GAApB,GAA0B,EAAzC,EAA+CA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,EASMD,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBS,MAT1B,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAaI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,iBAAX;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,KAAK,EAAI;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA5CD;;GAAMd,K;UAEmBF,W;;;KAFnBE,K;AA8CN,eAAeA,KAAf","sourcesContent":["import { Dispatch, ReactElement, SetStateAction, useEffect } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Box, Timer, Container, StartButton } from \"./Common\";\nimport { useLoopTime } from \"./hooks\";\nimport TimerBar from \"./TimerBar\";\nimport { Case, Station, Station_new } from \"./types\";\n\ntype BriefProps = {\n    station: Station_new;\n    updateStation: Dispatch<SetStateAction<Station_new>>;\n}\n\nconst Brief = (props: BriefProps) => {\n\n    const secondTicker = useLoopTime(props.station.brief.timeRemaining);\n\n    if (secondTicker <= 0) {\n        return <Redirect to = \"/OSCE/Station/0\" />\n    }\n\n    return (\n        <Container>\n\n            <div style = {{ position: \"sticky\", top: 0, width: \"100%\", backgroundColor: \"#1C2124\", padding: \"50px 0 20px 0\", opacity: \"0.98\" }}>\n\n                <h2>Brief</h2>\n\n                <br></br>\n\n                <TimerBar percentage = { 5 } />\n\n            </div>\n\n            <br></br>\n\n            <Box style = {{   }}>\n\n                <div style = {{ textAlign: \"center\" }}>\n                    <em>Time left to read:</em>\n                    <Timer> 00 : { secondTicker < 10 ? \"0\" : \"\" }{ secondTicker } </Timer>\n                </div>\n\n                <br/>\n\n                { props.station.brief.prompt }\n\n                <br></br>\n\n                <Link to = \"/OSCE/Station/0\">\n                    <StartButton style = {{ margin: \"auto\" }}>Start Station</StartButton>\n                </Link>\n            \n            </Box>\n\n        </Container>\n    )\n}\n\nexport default Brief"]},"metadata":{},"sourceType":"module"}